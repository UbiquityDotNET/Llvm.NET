stages:
- stage: Win_Native
  displayName: "Build Windows Native components"
  dependsOn: []
  jobs:
  - job: Build
    pool: 
      vmImage: 'windows-latest'

    timeoutInMinutes: 240

    steps:
    - checkout: self
      fetchDepth: 0
      submodules: true
    - pwsh: ./Build-Xplat.ps1
      displayName: 'Run Build-Xplat.ps1 script'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/xplat/win-x64'
        artifact: 'win-x64'
        publishLocation: 'pipeline'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/llvm/include'
        artifact: 'llvm_include'
        publishLocation: 'pipeline'

- stage: Linux_Native
  displayName: "Build Linux Native components"
  dependsOn: []
  jobs:
  - job: Build
    pool: 
      vmImage: 'ubuntu-20.04'

    timeoutInMinutes: 240

    steps:
    - checkout: self
      fetchDepth: 0
      submodules: true
    - pwsh: ./Build-Xplat.ps1
      displayName: 'Run Build-Xplat.ps1 script'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/xplat/linux-x64'
        artifact: 'linux-x64'
        publishLocation: 'pipeline'

- stage: OsX_Native
  displayName: "Build Os X Native components"
  dependsOn: []
  jobs:
  - job: Build
    pool: 
      vmImage: 'macOS-latest'

    timeoutInMinutes: 240

    steps:
    - checkout: self
      fetchDepth: 0
      submodules: true
    - pwsh: ./Build-Xplat.ps1
      displayName: 'Run Build-Xplat.ps1 script'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/xplat/osx-x64'
        artifact: 'osx-x64'
        publishLocation: 'pipeline'

- stage: Llvm_NET
  displayName: "Build Llvm.NET"
  dependsOn: ['Win_Native', 'Linux_Native', 'OsX_Native']
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'

    steps:
    - checkout: self
      fetchDepth: 0
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'win-x64'
        targetPath: '$(System.DefaultWorkingDirectory)/xplat/win-x64'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'linux-x64'
        targetPath: '$(System.DefaultWorkingDirectory)/xplat/linux-x64'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'osx-x64'
        targetPath: '$(System.DefaultWorkingDirectory)/xplat/osx-x64'
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'llvm_include'
        targetPath: '$(System.DefaultWorkingDirectory)/llvm/include'
    - pwsh: ./Build-Source.ps1
      displayName: 'Run Build-Source.ps1 script'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Ubiquity.NET.Llvm'
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/BuildOutput/NuGet'
        artifactName: Ubiquity.NET.Llvm
        
- stage: Test
  displayName: "Test Packages"
  dependsOn: ['Llvm_NET']
  jobs:
  - job: Test
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-20.04'
        osx:
          imageName: 'macOs-latest'
        windows:
          imageName: 'windows-latest'
    pool:
      vmImage: $(imageName)
    
    steps:
    - checkout: self
      fetchDepth: 0
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'Ubiquity.NET.Llvm'
        targetPath: '$(System.DefaultWorkingDirectory)/BuildOutput/NuGet'
    - pwsh: ./Invoke-UnitTests.ps1
