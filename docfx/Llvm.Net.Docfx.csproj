<Project Sdk="Microsoft.Build.NoTargets">
  <PropertyGroup>
    <TargetFramework>net47</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CSemVer.Build.Tasks" Version="2.0.1" PrivateAssets="All" />
    <PackageReference Include="docfx.console" Version="2.42.2" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="memberpage" Version="2.42.2" PrivateAssets="All" />
    <PackageReference Include="msdn.4.5.2" Version="0.1.0-alpha-1611021200" PrivateAssets="All" />
  </ItemGroup>

  <!-- Custom task to Compare versions -->
  <UsingTask TaskName="VersionCheck" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <ActualVersion ParameterType="System.String" Required="true" />
      <MaximumSupportedVersion ParameterType="System.String" Required="true" />
      <IsValidVersion ParameterType="System.Boolean" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          IsValidVersion = Version.Parse(ActualVersion) < Version.Parse(MaximumSupportedVersion);
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <!--
    This target dynamically resolves the installed location of the NuGet Packages used and applies
    appropriate parameters to the DocFx command to use them. Otherwise the docfx.json would need to
    have a hard coded path, which doesn't work with multiple users of a version controlled project.
    -->
  <Target Name="GetDocfxPackagePaths" BeforeTargets="DocBuild" DependsOnTargets="ResolvePackageDependenciesDesignTime">
    <ItemGroup>
      <docfxpkg Include="@(PackageDefinitions)" Condition="'%(PackageDefinitions.Name)'=='docfx.console'" />
      <memberpage Include="@(PackageDefinitions)" Condition="'%(PackageDefinitions.Name)'=='memberpage'" />
      <Msdn4_5_2 Include="@(PackageDefinitions)" Condition="'%(PackageDefinitions.Name)'=='msdn.4.5.2'" />
    </ItemGroup>
    <PropertyGroup>
      <DocfxConsolePath>%(docfxpkg.ResolvedPath)</DocfxConsolePath>
      <MemberPagePath>%(memberpage.ResolvedPath)</MemberPagePath>
      <MsdnXRefPath>%(msdn4_5_2.ResolvedPath)</MsdnXRefPath>
      <IsSupportedMSBuild>false</IsSupportedMSBuild>
    </PropertyGroup>
    <VersionCheck Condition="$(MSBuildVersion)!=''" MaximumSupportedVersion="17.0.999" ActualVersion="$(MSBuildVersion)">
      <Output TaskParameter="IsValidVersion" PropertyName="IsSupportedMSBuild" />
    </VersionCheck>
    <!-- NOTE: MSBuildVersion property is new in 15.6 (as of 15.6.0-pre.4.0 the value is 15.6.76 )  -->
    <Error Code="DOCFX:0001" ContinueOnError="false" Condition="!$(IsSupportedMSBuild)" Text="As of DOCFX 2.40 docfx cannot generate metadata for CSPROJ files using MSBuild &gt; 15.8.xx (Current MSBuild is $(MSBuildVersion))" />
  </Target>

  <Target Name="SetDocFxParameters" AfterTargets="GetDocfxPackagePaths" BeforeTargets="DocGenerateMetadata">
    <ItemGroup>
      <DocFxCrossRefMap Include="llvm-xref.yml" />
      <DocFxCrossRefMap Include="$(MsdnXrefPath)\content\msdn.4.5.2.zip" />
      <DocFxCrossRefMap Include="$(MsdnXrefPath)\content\namespaces.4.5.2.zip" />
    </ItemGroup>
    <PropertyGroup>
      <LogLevel>Warning</LogLevel>
      <LogFile>$(IntermediateOutputPath)DocFx-Metadata.log</LogFile>
      <DocParameters>$(DocParameters) --globalMetadata="{_buildVersion:\"$(FullBuildNumber)\"}"</DocParameters>
      <DocParameters>$(DocParameters) --intermediateFolder="$(IntermediateOutputPath.TrimEnd('\'))"</DocParameters>
      <DocParameters>$(DocParameters) --xref="@(DocFxCrossRefMap->'%(FullPath)',',')"</DocParameters>
      <DocTemplate>statictoc,$(MemberPagePath)\content,templates\Ubiquity</DocTemplate>
    </PropertyGroup>
  </Target>
</Project>
