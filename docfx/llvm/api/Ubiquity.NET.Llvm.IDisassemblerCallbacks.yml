### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks
  commentId: T:Ubiquity.NET.Llvm.IDisassemblerCallbacks
  id: IDisassemblerCallbacks
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
  - Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
  langs:
  - csharp
  - vb
  name: IDisassemblerCallbacks
  nameWithType: IDisassemblerCallbacks
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks
  type: Interface
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IDisassemblerCallbacks
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 23
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Interface for disassembler callbacks
  remarks: >-
    Exact use and purpose of this interface is not well documented in LLVM and it's use

    is therefore classified as "experimental". Key is the parameter and return types.

    LLVM headers use byte* and it isn't clear if it is a "blob", string or what? Nor,

    does it say anything about lifetime or ownership of the data they point to... (This

    is mostly in regards to the parameters and return of <xref href="Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64%2cSystem.UInt64%40%2cSystem.UInt64%2cSystem.String%40)" data-throw-if-not-resolved="false"></xref>

    but also applies to the <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> `TagBuf` parameter of <xref href="Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64%2cSystem.UInt64%2cSystem.UInt64%2cSystem.UInt64%2cSystem.Int32%2cSystem.IntPtr)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public interface IDisassemblerCallbacks
    content.vb: Public Interface IDisassemblerCallbacks
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
  commentId: M:Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
  id: OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
  parent: Ubiquity.NET.Llvm.IDisassemblerCallbacks
  langs:
  - csharp
  - vb
  name: OpInfo(ulong, ulong, ulong, ulong, int, nint)
  nameWithType: IDisassemblerCallbacks.OpInfo(ulong, ulong, ulong, ulong, int, nint)
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(ulong, ulong, ulong, ulong, int, nint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: OpInfo
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 35
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Purpose not fully known or well explained in LLVM docs
  example: []
  syntax:
    content: int OpInfo(ulong PC, ulong Offset, ulong OpSize, ulong InstSize, int TagType, nint TagBuf)
    parameters:
    - id: PC
      type: System.UInt64
      description: Program counter
    - id: Offset
      type: System.UInt64
      description: offset [Of what? Relative to what?]
    - id: OpSize
      type: System.UInt64
      description: OpSize [Not entirely clear what an "op" is or how a size matters]
    - id: InstSize
      type: System.UInt64
      description: Instruction size [Also not clear why this matters or what an implementation should do about it]
    - id: TagType
      type: System.Int32
      description: 'Tag type [Best guess: discriminator type for the opaque buffer]'
    - id: TagBuf
      type: System.IntPtr
      description: Raw pointer to the buffer. [It is currently assumed this is readonly and the size and shape are determined by <code class="paramref">TagType</code>]
    return:
      type: System.Int32
      description: Unknown
    content.vb: Function OpInfo(PC As ULong, Offset As ULong, OpSize As ULong, InstSize As ULong, TagType As Integer, TagBuf As IntPtr) As Integer
  overload: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo*
  nameWithType.vb: IDisassemblerCallbacks.OpInfo(ULong, ULong, ULong, ULong, Integer, IntPtr)
  fullName.vb: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(ULong, ULong, ULong, ULong, Integer, System.IntPtr)
  name.vb: OpInfo(ULong, ULong, ULong, ULong, Integer, IntPtr)
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
  commentId: M:Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
  id: SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
  parent: Ubiquity.NET.Llvm.IDisassemblerCallbacks
  langs:
  - csharp
  - vb
  name: SymbolLookup(ulong, ref ulong, ulong, out string?)
  nameWithType: IDisassemblerCallbacks.SymbolLookup(ulong, ref ulong, ulong, out string?)
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(ulong, ref ulong, ulong, out string?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SymbolLookup
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 43
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Performs symbol lookup for the disassembler
  example: []
  syntax:
    content: string? SymbolLookup(ulong referenceValue, ref ulong referenceType, ulong referencePC, out string? ReferenceName)
    parameters:
    - id: referenceValue
      type: System.UInt64
      description: referenceValue [Unknown what this is in "reference" to]
    - id: referenceType
      type: System.UInt64
      description: referenceType [Unknown what this is in "reference" to or why an implementation might need/want to change this]
    - id: referencePC
      type: System.UInt64
      description: Unknown but assumed to relate to a program counter
    - id: ReferenceName
      type: System.String
      description: Completely unknown. [Is this really an OUT string or an IN array?]
    return:
      type: System.String
      description: Unknown
    content.vb: Function SymbolLookup(referenceValue As ULong, referenceType As ULong, referencePC As ULong, ReferenceName As String) As String
  overload: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup*
  nameWithType.vb: IDisassemblerCallbacks.SymbolLookup(ULong, ULong, ULong, String)
  fullName.vb: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(ULong, ULong, ULong, String)
  name.vb: SymbolLookup(ULong, ULong, ULong, String)
references:
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
  commentId: M:Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
  isExternal: true
  href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_SymbolLookup_System_UInt64_System_UInt64__System_UInt64_System_String__
  name: SymbolLookup(ulong, ref ulong, ulong, out string)
  nameWithType: IDisassemblerCallbacks.SymbolLookup(ulong, ref ulong, ulong, out string)
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(ulong, ref ulong, ulong, out string)
  nameWithType.vb: IDisassemblerCallbacks.SymbolLookup(ULong, ULong, ULong, String)
  fullName.vb: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(ULong, ULong, ULong, String)
  name.vb: SymbolLookup(ULong, ULong, ULong, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
    name: SymbolLookup
    href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_SymbolLookup_System_UInt64_System_UInt64__System_UInt64_System_String__
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup(System.UInt64,System.UInt64@,System.UInt64,System.String@)
    name: SymbolLookup
    href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_SymbolLookup_System_UInt64_System_UInt64__System_UInt64_System_String__
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
  commentId: M:Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
  isExternal: true
  href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_OpInfo_System_UInt64_System_UInt64_System_UInt64_System_UInt64_System_Int32_System_IntPtr_
  name: OpInfo(ulong, ulong, ulong, ulong, int, nint)
  nameWithType: IDisassemblerCallbacks.OpInfo(ulong, ulong, ulong, ulong, int, nint)
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(ulong, ulong, ulong, ulong, int, nint)
  nameWithType.vb: IDisassemblerCallbacks.OpInfo(ULong, ULong, ULong, ULong, Integer, IntPtr)
  fullName.vb: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(ULong, ULong, ULong, ULong, Integer, System.IntPtr)
  name.vb: OpInfo(ULong, ULong, ULong, ULong, Integer, IntPtr)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
    name: OpInfo
    href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_OpInfo_System_UInt64_System_UInt64_System_UInt64_System_UInt64_System_Int32_System_IntPtr_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.Int32,System.IntPtr)
    name: OpInfo
    href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_OpInfo_System_UInt64_System_UInt64_System_UInt64_System_UInt64_System_Int32_System_IntPtr_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: )
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo*
  commentId: Overload:Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo
  href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_OpInfo_System_UInt64_System_UInt64_System_UInt64_System_UInt64_System_Int32_System_IntPtr_
  name: OpInfo
  nameWithType: IDisassemblerCallbacks.OpInfo
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks.OpInfo
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup*
  commentId: Overload:Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup
  href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html#Ubiquity_NET_Llvm_IDisassemblerCallbacks_SymbolLookup_System_UInt64_System_UInt64__System_UInt64_System_String__
  name: SymbolLookup
  nameWithType: IDisassemblerCallbacks.SymbolLookup
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks.SymbolLookup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
