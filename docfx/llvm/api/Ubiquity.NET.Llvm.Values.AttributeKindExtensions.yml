### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  commentId: T:Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  id: AttributeKindExtensions
  parent: Ubiquity.NET.Llvm.Values
  children:
  - Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  langs:
  - csharp
  - vb
  name: AttributeKindExtensions
  nameWithType: AttributeKindExtensions
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AttributeKindExtensions
    path: ../src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
    startLine: 28
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Utility class to provide extension methods for validating usage of attribute kinds
  example: []
  syntax:
    content: public static class AttributeKindExtensions
    content.vb: Public Module AttributeKindExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: GetAttributeName(Ubiquity.NET.Llvm.Values.AttributeKind)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  langs:
  - csharp
  - vb
  name: GetAttributeName(AttributeKind)
  nameWithType: AttributeKindExtensions.GetAttributeName(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetAttributeName
    path: ../src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
    startLine: 33
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the symbolic name of the attribute
  example: []
  syntax:
    content: public static string GetAttributeName(this AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to get the name of
    return:
      type: System.String
      description: Name of the attribute
    content.vb: Public Shared Function GetAttributeName(kind As AttributeKind) As String
  overload: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName*
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: IsEnumKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  langs:
  - csharp
  - vb
  name: IsEnumKind(AttributeKind)
  nameWithType: AttributeKindExtensions.IsEnumKind(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsEnumKind
    path: ../src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
    startLine: 41
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether the attribute requires no parameter value
  example: []
  syntax:
    content: public static bool IsEnumKind(this AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to check
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the attribute requires no parameter value
    content.vb: Public Shared Function IsEnumKind(kind As AttributeKind) As Boolean
  overload: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind*
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: IsIntKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  langs:
  - csharp
  - vb
  name: IsIntKind(AttributeKind)
  nameWithType: AttributeKindExtensions.IsIntKind(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsIntKind
    path: ../src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
    startLine: 49
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether the attribute requires an integer parameter value
  example: []
  syntax:
    content: public static bool IsIntKind(this AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to check
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the attribute requires an integer value
    content.vb: Public Shared Function IsIntKind(kind As AttributeKind) As Boolean
  overload: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind*
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: IsTypeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  langs:
  - csharp
  - vb
  name: IsTypeKind(AttributeKind)
  nameWithType: AttributeKindExtensions.IsTypeKind(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsTypeKind
    path: ../src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
    startLine: 57
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether the attribute requires a type parameter value
  example: []
  syntax:
    content: public static bool IsTypeKind(this AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to check
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the attribute requires a type value
    content.vb: Public Shared Function IsTypeKind(kind As AttributeKind) As Boolean
  overload: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind*
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: IsConstantRangeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  langs:
  - csharp
  - vb
  name: IsConstantRangeKind(AttributeKind)
  nameWithType: AttributeKindExtensions.IsConstantRangeKind(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsConstantRangeKind
    path: ../src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
    startLine: 65
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether the attribute requires a constant range parameter value
  example: []
  syntax:
    content: public static bool IsConstantRangeKind(this AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to check
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the attribute requires an constant range value
    content.vb: Public Shared Function IsConstantRangeKind(kind As AttributeKind) As Boolean
  overload: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind*
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: IsConstantRangeListKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.AttributeKindExtensions
  langs:
  - csharp
  - vb
  name: IsConstantRangeListKind(AttributeKind)
  nameWithType: AttributeKindExtensions.IsConstantRangeListKind(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsConstantRangeListKind
    path: ../src/Ubiquity.NET.Llvm/Values/AttributeKindExtensions.cs
    startLine: 73
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether the attribute requires a constant range list parameter value
  example: []
  syntax:
    content: public static bool IsConstantRangeListKind(this AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to check
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the attribute requires an constant range list value
    content.vb: Public Shared Function IsConstantRangeListKind(kind As AttributeKind) As Boolean
  overload: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind*
references:
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.Values.AttributeKind
  commentId: T:Ubiquity.NET.Llvm.Values.AttributeKind
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  name: AttributeKind
  nameWithType: AttributeKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName*
  commentId: Overload:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName
  href: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.html#Ubiquity_NET_Llvm_Values_AttributeKindExtensions_GetAttributeName_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: GetAttributeName
  nameWithType: AttributeKindExtensions.GetAttributeName
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.GetAttributeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind*
  commentId: Overload:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind
  href: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.html#Ubiquity_NET_Llvm_Values_AttributeKindExtensions_IsEnumKind_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: IsEnumKind
  nameWithType: AttributeKindExtensions.IsEnumKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsEnumKind
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind*
  commentId: Overload:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind
  href: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.html#Ubiquity_NET_Llvm_Values_AttributeKindExtensions_IsIntKind_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: IsIntKind
  nameWithType: AttributeKindExtensions.IsIntKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsIntKind
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind*
  commentId: Overload:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind
  href: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.html#Ubiquity_NET_Llvm_Values_AttributeKindExtensions_IsTypeKind_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: IsTypeKind
  nameWithType: AttributeKindExtensions.IsTypeKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsTypeKind
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind*
  commentId: Overload:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind
  href: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.html#Ubiquity_NET_Llvm_Values_AttributeKindExtensions_IsConstantRangeKind_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: IsConstantRangeKind
  nameWithType: AttributeKindExtensions.IsConstantRangeKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeKind
- uid: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind*
  commentId: Overload:Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind
  href: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.html#Ubiquity_NET_Llvm_Values_AttributeKindExtensions_IsConstantRangeListKind_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: IsConstantRangeListKind
  nameWithType: AttributeKindExtensions.IsConstantRangeListKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKindExtensions.IsConstantRangeListKind
