### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Disassembler
  commentId: T:Ubiquity.NET.Llvm.Disassembler
  id: Disassembler
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  - Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  - Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  - Ubiquity.NET.Llvm.Disassembler.Disassemble(System.ReadOnlySpan{System.Byte},System.UInt64,System.Int32)
  - Ubiquity.NET.Llvm.Disassembler.Dispose
  - Ubiquity.NET.Llvm.Disassembler.SetOptions(Ubiquity.NET.Llvm.DisassemblerOptions)
  langs:
  - csharp
  - vb
  name: Disassembler
  nameWithType: Disassembler
  fullName: Ubiquity.NET.Llvm.Disassembler
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Disassembler
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 74
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: LLVM Disassembler
  example: []
  syntax:
    content: 'public sealed class Disassembler : IDisposable'
    content.vb: Public NotInheritable Class Disassembler Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Disassembler.Dispose
  commentId: M:Ubiquity.NET.Llvm.Disassembler.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.Disassembler
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Disassembler.Dispose()
  fullName: Ubiquity.NET.Llvm.Disassembler.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 78
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.Disassembler.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  commentId: M:Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  id: '#ctor(Ubiquity.NET.Llvm.Triple,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)'
  parent: Ubiquity.NET.Llvm.Disassembler
  langs:
  - csharp
  - vb
  name: Disassembler(Triple, int, IDisassemblerCallbacks?)
  nameWithType: Disassembler.Disassembler(Triple, int, IDisassemblerCallbacks?)
  fullName: Ubiquity.NET.Llvm.Disassembler.Disassembler(Ubiquity.NET.Llvm.Triple, int, Ubiquity.NET.Llvm.IDisassemblerCallbacks?)
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 85
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.Disassembler" data-throw-if-not-resolved="false"></xref> class.
  remarks: The <code class="paramref">callBacks</code> parameter is experimental and recommended left as the default value
  example: []
  syntax:
    content: public Disassembler(Triple triple, int tagType, IDisassemblerCallbacks? callBacks = null)
    parameters:
    - id: triple
      type: Ubiquity.NET.Llvm.Triple
      description: Triple for the instruction set to disassemble
    - id: tagType
      type: System.Int32
      description: 'TODO: Explain this...'
    - id: callBacks
      type: Ubiquity.NET.Llvm.IDisassemblerCallbacks
      description: 'Optional callbacks [Default: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>]'
    content.vb: Public Sub New(triple As Triple, tagType As Integer, callBacks As IDisassemblerCallbacks = Nothing)
  overload: Ubiquity.NET.Llvm.Disassembler.#ctor*
  nameWithType.vb: Disassembler.New(Triple, Integer, IDisassemblerCallbacks)
  fullName.vb: Ubiquity.NET.Llvm.Disassembler.New(Ubiquity.NET.Llvm.Triple, Integer, Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  name.vb: New(Triple, Integer, IDisassemblerCallbacks)
- uid: Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  commentId: M:Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  id: '#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)'
  parent: Ubiquity.NET.Llvm.Disassembler
  langs:
  - csharp
  - vb
  name: Disassembler(Triple, string, int, IDisassemblerCallbacks?)
  nameWithType: Disassembler.Disassembler(Triple, string, int, IDisassemblerCallbacks?)
  fullName: Ubiquity.NET.Llvm.Disassembler.Disassembler(Ubiquity.NET.Llvm.Triple, string, int, Ubiquity.NET.Llvm.IDisassemblerCallbacks?)
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 96
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.Disassembler" data-throw-if-not-resolved="false"></xref> class.
  remarks: The <code class="paramref">callBacks</code> parameter is experimental and recommended left as the default value
  example: []
  syntax:
    content: public Disassembler(Triple triple, string cpu, int tagType, IDisassemblerCallbacks? callBacks = null)
    parameters:
    - id: triple
      type: Ubiquity.NET.Llvm.Triple
      description: Triple for the instruction set to disassemble
    - id: cpu
      type: System.String
      description: CPU string for the instruction set
    - id: tagType
      type: System.Int32
      description: 'TODO: Explain this...'
    - id: callBacks
      type: Ubiquity.NET.Llvm.IDisassemblerCallbacks
      description: 'Optional callbacks [Default: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>]'
    content.vb: Public Sub New(triple As Triple, cpu As String, tagType As Integer, callBacks As IDisassemblerCallbacks = Nothing)
  overload: Ubiquity.NET.Llvm.Disassembler.#ctor*
  nameWithType.vb: Disassembler.New(Triple, String, Integer, IDisassemblerCallbacks)
  fullName.vb: Ubiquity.NET.Llvm.Disassembler.New(Ubiquity.NET.Llvm.Triple, String, Integer, Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  name.vb: New(Triple, String, Integer, IDisassemblerCallbacks)
- uid: Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  commentId: M:Ubiquity.NET.Llvm.Disassembler.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  id: '#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,System.Int32,Ubiquity.NET.Llvm.IDisassemblerCallbacks)'
  parent: Ubiquity.NET.Llvm.Disassembler
  langs:
  - csharp
  - vb
  name: Disassembler(Triple, string, string, int, IDisassemblerCallbacks?)
  nameWithType: Disassembler.Disassembler(Triple, string, string, int, IDisassemblerCallbacks?)
  fullName: Ubiquity.NET.Llvm.Disassembler.Disassembler(Ubiquity.NET.Llvm.Triple, string, string, int, Ubiquity.NET.Llvm.IDisassemblerCallbacks?)
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 112
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.Disassembler" data-throw-if-not-resolved="false"></xref> class.
  remarks: The <code class="paramref">callBacks</code> parameter is experimental and recommended left as the default value
  example: []
  syntax:
    content: public Disassembler(Triple triple, string cpu, string features, int tagType, IDisassemblerCallbacks? callBacks = null)
    parameters:
    - id: triple
      type: Ubiquity.NET.Llvm.Triple
      description: Triple for the instruction set to disassemble
    - id: cpu
      type: System.String
      description: CPU string for the instruction set
    - id: features
      type: System.String
      description: CPU features for disassembling the instruction set
    - id: tagType
      type: System.Int32
      description: TODO:Explain this...
    - id: callBacks
      type: Ubiquity.NET.Llvm.IDisassemblerCallbacks
      description: 'Optional callbacks [Default: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>]'
    content.vb: Public Sub New(triple As Triple, cpu As String, features As String, tagType As Integer, callBacks As IDisassemblerCallbacks = Nothing)
  overload: Ubiquity.NET.Llvm.Disassembler.#ctor*
  nameWithType.vb: Disassembler.New(Triple, String, String, Integer, IDisassemblerCallbacks)
  fullName.vb: Ubiquity.NET.Llvm.Disassembler.New(Ubiquity.NET.Llvm.Triple, String, String, Integer, Ubiquity.NET.Llvm.IDisassemblerCallbacks)
  name.vb: New(Triple, String, String, Integer, IDisassemblerCallbacks)
- uid: Ubiquity.NET.Llvm.Disassembler.SetOptions(Ubiquity.NET.Llvm.DisassemblerOptions)
  commentId: M:Ubiquity.NET.Llvm.Disassembler.SetOptions(Ubiquity.NET.Llvm.DisassemblerOptions)
  id: SetOptions(Ubiquity.NET.Llvm.DisassemblerOptions)
  parent: Ubiquity.NET.Llvm.Disassembler
  langs:
  - csharp
  - vb
  name: SetOptions(DisassemblerOptions)
  nameWithType: Disassembler.SetOptions(DisassemblerOptions)
  fullName: Ubiquity.NET.Llvm.Disassembler.SetOptions(Ubiquity.NET.Llvm.DisassemblerOptions)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SetOptions
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 142
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Set the options for the disassembly
  example: []
  syntax:
    content: public bool SetOptions(DisassemblerOptions options)
    parameters:
    - id: options
      type: Ubiquity.NET.Llvm.DisassemblerOptions
      description: Options
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the options are all supported
    content.vb: Public Function SetOptions(options As DisassemblerOptions) As Boolean
  overload: Ubiquity.NET.Llvm.Disassembler.SetOptions*
- uid: Ubiquity.NET.Llvm.Disassembler.Disassemble(System.ReadOnlySpan{System.Byte},System.UInt64,System.Int32)
  commentId: M:Ubiquity.NET.Llvm.Disassembler.Disassemble(System.ReadOnlySpan{System.Byte},System.UInt64,System.Int32)
  id: Disassemble(System.ReadOnlySpan{System.Byte},System.UInt64,System.Int32)
  parent: Ubiquity.NET.Llvm.Disassembler
  langs:
  - csharp
  - vb
  name: Disassemble(ReadOnlySpan<byte>, ulong, int)
  nameWithType: Disassembler.Disassemble(ReadOnlySpan<byte>, ulong, int)
  fullName: Ubiquity.NET.Llvm.Disassembler.Disassemble(System.ReadOnlySpan<byte>, ulong, int)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisAssembler.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Disassemble
    path: ../src/Ubiquity.NET.Llvm/DisAssembler.cs
    startLine: 152
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Disassembles an instruction
  example: []
  syntax:
    content: public (string Disassembly, int InstructionByteCount) Disassemble(ReadOnlySpan<byte> instruction, ulong pc, int stringBufferSize = 1024)
    parameters:
    - id: instruction
      type: System.ReadOnlySpan{System.Byte}
      description: Start of instruction stream
    - id: pc
      type: System.UInt64
      description: Program counter address to assume for the instruction disassembly
    - id: stringBufferSize
      type: System.Int32
      description: Size of string buffer to use for the disassembly (default=1024)
    return:
      type: System.ValueTuple{System.String,System.Int32}
      description: Disassembly string and count of bytes in the instruction as a tuple
    content.vb: Public Function Disassemble(instruction As ReadOnlySpan(Of Byte), pc As ULong, stringBufferSize As Integer = 1024) As (Disassembly As String, InstructionByteCount As Integer)
  overload: Ubiquity.NET.Llvm.Disassembler.Disassemble*
  nameWithType.vb: Disassembler.Disassemble(ReadOnlySpan(Of Byte), ULong, Integer)
  fullName.vb: Ubiquity.NET.Llvm.Disassembler.Disassemble(System.ReadOnlySpan(Of Byte), ULong, Integer)
  name.vb: Disassemble(ReadOnlySpan(Of Byte), ULong, Integer)
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.Disassembler.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.Disassembler.Dispose
  href: Ubiquity.NET.Llvm.Disassembler.html#Ubiquity_NET_Llvm_Disassembler_Dispose
  name: Dispose
  nameWithType: Disassembler.Dispose
  fullName: Ubiquity.NET.Llvm.Disassembler.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Disassembler
  commentId: T:Ubiquity.NET.Llvm.Disassembler
  href: Ubiquity.NET.Llvm.Disassembler.html
  name: Disassembler
  nameWithType: Disassembler
  fullName: Ubiquity.NET.Llvm.Disassembler
- uid: Ubiquity.NET.Llvm.Disassembler.#ctor*
  commentId: Overload:Ubiquity.NET.Llvm.Disassembler.#ctor
  href: Ubiquity.NET.Llvm.Disassembler.html#Ubiquity_NET_Llvm_Disassembler__ctor_Ubiquity_NET_Llvm_Triple_System_Int32_Ubiquity_NET_Llvm_IDisassemblerCallbacks_
  name: Disassembler
  nameWithType: Disassembler.Disassembler
  fullName: Ubiquity.NET.Llvm.Disassembler.Disassembler
  nameWithType.vb: Disassembler.New
  fullName.vb: Ubiquity.NET.Llvm.Disassembler.New
  name.vb: New
- uid: Ubiquity.NET.Llvm.Triple
  commentId: T:Ubiquity.NET.Llvm.Triple
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Triple.html
  name: Triple
  nameWithType: Triple
  fullName: Ubiquity.NET.Llvm.Triple
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Ubiquity.NET.Llvm.IDisassemblerCallbacks
  commentId: T:Ubiquity.NET.Llvm.IDisassemblerCallbacks
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.IDisassemblerCallbacks.html
  name: IDisassemblerCallbacks
  nameWithType: IDisassemblerCallbacks
  fullName: Ubiquity.NET.Llvm.IDisassemblerCallbacks
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.Disassembler.SetOptions*
  commentId: Overload:Ubiquity.NET.Llvm.Disassembler.SetOptions
  href: Ubiquity.NET.Llvm.Disassembler.html#Ubiquity_NET_Llvm_Disassembler_SetOptions_Ubiquity_NET_Llvm_DisassemblerOptions_
  name: SetOptions
  nameWithType: Disassembler.SetOptions
  fullName: Ubiquity.NET.Llvm.Disassembler.SetOptions
- uid: Ubiquity.NET.Llvm.DisassemblerOptions
  commentId: T:Ubiquity.NET.Llvm.DisassemblerOptions
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.DisassemblerOptions.html
  name: DisassemblerOptions
  nameWithType: DisassemblerOptions
  fullName: Ubiquity.NET.Llvm.DisassemblerOptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.Disassembler.Disassemble*
  commentId: Overload:Ubiquity.NET.Llvm.Disassembler.Disassemble
  href: Ubiquity.NET.Llvm.Disassembler.html#Ubiquity_NET_Llvm_Disassembler_Disassemble_System_ReadOnlySpan_System_Byte__System_UInt64_System_Int32_
  name: Disassemble
  nameWithType: Disassembler.Disassemble
  fullName: Ubiquity.NET.Llvm.Disassembler.Disassemble
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.ValueTuple{System.String,System.Int32}
  commentId: T:System.ValueTuple{System.String,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: (string Disassembly, int InstructionByteCount)
  nameWithType: (string Disassembly, int InstructionByteCount)
  fullName: (string Disassembly, int InstructionByteCount)
  nameWithType.vb: (Disassembly As String, InstructionByteCount As Integer)
  fullName.vb: (Disassembly As String, InstructionByteCount As Integer)
  name.vb: (Disassembly As String, InstructionByteCount As Integer)
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int32}.Disassembly
    name: Disassembly
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.disassembly
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int32}.InstructionByteCount
    name: InstructionByteCount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.instructionbytecount
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.Int32}.Disassembly
    name: Disassembly
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.disassembly
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Int32}.InstructionByteCount
    name: InstructionByteCount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.int32-.instructionbytecount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
