### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  id: ExecutionSession
  parent: Ubiquity.NET.Llvm.OrcJITv2
  children:
  - Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager(Ubiquity.NET.InteropHelpers.LazyEncodedString,System.UInt64)
  - Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  - Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern(System.String)
  - Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool
  - Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@)
  - Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@,Ubiquity.NET.Llvm.ErrorInfo@)
  langs:
  - csharp
  - vb
  name: ExecutionSession
  nameWithType: ExecutionSession
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  type: Struct
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ExecutionSession
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
    startLine: 20
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: ORC JIT v2 Execution Session
  remarks: >-
    This is a `ref struct` as the JIT is ultimately the owner

    of the underlying session. Thus, this instance does not

    retain any state not part of the underlying native support.
  example: []
  syntax:
    content: public readonly ref struct ExecutionSession
    content.vb: Public Structure ExecutionSession
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool
  commentId: P:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool
  id: SymbolStringPool
  parent: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  langs:
  - csharp
  - vb
  name: SymbolStringPool
  nameWithType: ExecutionSession.SymbolStringPool
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SymbolStringPool
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
    startLine: 23
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Gets a reference to the symbol string pool for this session
  example: []
  syntax:
    content: public SymbolStringPool SymbolStringPool { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPool
    content.vb: Public ReadOnly Property SymbolStringPool As SymbolStringPool
  overload: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool*
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager(Ubiquity.NET.InteropHelpers.LazyEncodedString,System.UInt64)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager(Ubiquity.NET.InteropHelpers.LazyEncodedString,System.UInt64)
  id: CreateLazyCallThroughManager(Ubiquity.NET.InteropHelpers.LazyEncodedString,System.UInt64)
  parent: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  langs:
  - csharp
  - vb
  name: CreateLazyCallThroughManager(LazyEncodedString, ulong)
  nameWithType: ExecutionSession.CreateLazyCallThroughManager(LazyEncodedString, ulong)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager(Ubiquity.NET.InteropHelpers.LazyEncodedString, ulong)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateLazyCallThroughManager
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
    startLine: 29
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Creates a Lazy Call Through manager for this session
  example: []
  syntax:
    content: public LazyCallThroughManager CreateLazyCallThroughManager(LazyEncodedString triple, ulong errorHandlerAddress = 0)
    parameters:
    - id: triple
      type: Ubiquity.NET.InteropHelpers.LazyEncodedString
      description: Triple to use for this factory
    - id: errorHandlerAddress
      type: System.UInt64
      description: Native JIT address of an error handler
    return:
      type: Ubiquity.NET.Llvm.OrcJITv2.LazyCallThroughManager
      description: New call through manager
    content.vb: Public Function CreateLazyCallThroughManager(triple As LazyEncodedString, errorHandlerAddress As ULong = 0) As LazyCallThroughManager
  overload: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager*
  nameWithType.vb: ExecutionSession.CreateLazyCallThroughManager(LazyEncodedString, ULong)
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager(Ubiquity.NET.InteropHelpers.LazyEncodedString, ULong)
  name.vb: CreateLazyCallThroughManager(LazyEncodedString, ULong)
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  id: GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  parent: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  langs:
  - csharp
  - vb
  name: GetOrCreateBareDyLib(LazyEncodedString)
  nameWithType: ExecutionSession.GetOrCreateBareDyLib(LazyEncodedString)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetOrCreateBareDyLib
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
    startLine: 136
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Gets an existing <xref href="Ubiquity.NET.Llvm.OrcJITv2.JITDyLib" data-throw-if-not-resolved="false"></xref> or creates a new one
  remarks: >-
    This does not populate any symbols for the library when creating a new one.

    All configuration is the responsibility of the caller.
  example: []
  syntax:
    content: public JITDyLib GetOrCreateBareDyLib(LazyEncodedString name)
    parameters:
    - id: name
      type: Ubiquity.NET.InteropHelpers.LazyEncodedString
      description: name of the library
    return:
      type: Ubiquity.NET.Llvm.OrcJITv2.JITDyLib
      description: The dynamic lib for the name
    content.vb: Public Function GetOrCreateBareDyLib(name As LazyEncodedString) As JITDyLib
  overload: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib*
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@,Ubiquity.NET.Llvm.ErrorInfo@)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@,Ubiquity.NET.Llvm.ErrorInfo@)
  id: TryGetOrCreateDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@,Ubiquity.NET.Llvm.ErrorInfo@)
  parent: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  langs:
  - csharp
  - vb
  name: TryGetOrCreateDyLib(LazyEncodedString, out JITDyLib, out ErrorInfo)
  nameWithType: ExecutionSession.TryGetOrCreateDyLib(LazyEncodedString, out JITDyLib, out ErrorInfo)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString, out Ubiquity.NET.Llvm.OrcJITv2.JITDyLib, out Ubiquity.NET.Llvm.ErrorInfo)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: TryGetOrCreateDyLib
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
    startLine: 163
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Tries to get or create a <xref href="Ubiquity.NET.Llvm.OrcJITv2.JITDyLib" data-throw-if-not-resolved="false"></xref> in this session by name
  remarks: >-
    <p>This will add symbols for any attached platforms. If there are no attached platforms then this

    is the same as calling <xref href="Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)" data-throw-if-not-resolved="false"></xref>.</p>

    <p><code class="paramref">name</code> is a LazyEncodedString to allow for the possibility of retrieval of the name from

    native code and then providing it back again without going through any sort of marshal/unmarshal sequence. This

    allows for the most efficient use of data that is likely to come from the underlying native code.

    </p>
  example: []
  syntax:
    content: public bool TryGetOrCreateDyLib(LazyEncodedString name, out JITDyLib lib, out ErrorInfo errInfo)
    parameters:
    - id: name
      type: Ubiquity.NET.InteropHelpers.LazyEncodedString
      description: name of the library
    - id: lib
      type: Ubiquity.NET.Llvm.OrcJITv2.JITDyLib
      description: Library or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if not found
    - id: errInfo
      type: Ubiquity.NET.Llvm.ErrorInfo
      description: <xref href="Ubiquity.NET.Llvm.ErrorInfo" data-throw-if-not-resolved="false"></xref> for any errors in creating the library if it didn't exist
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if successful and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not
    content.vb: Public Function TryGetOrCreateDyLib(name As LazyEncodedString, [lib] As JITDyLib, errInfo As ErrorInfo) As Boolean
  overload: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib*
  nameWithType.vb: ExecutionSession.TryGetOrCreateDyLib(LazyEncodedString, JITDyLib, ErrorInfo)
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString, Ubiquity.NET.Llvm.OrcJITv2.JITDyLib, Ubiquity.NET.Llvm.ErrorInfo)
  name.vb: TryGetOrCreateDyLib(LazyEncodedString, JITDyLib, ErrorInfo)
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@)
  id: TryGetDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.Llvm.OrcJITv2.JITDyLib@)
  parent: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  langs:
  - csharp
  - vb
  name: TryGetDyLib(LazyEncodedString, out JITDyLib)
  nameWithType: ExecutionSession.TryGetDyLib(LazyEncodedString, out JITDyLib)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString, out Ubiquity.NET.Llvm.OrcJITv2.JITDyLib)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: TryGetDyLib
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
    startLine: 197
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Tries to get a named library from this session
  example: []
  syntax:
    content: public bool TryGetDyLib(LazyEncodedString name, out JITDyLib lib)
    parameters:
    - id: name
      type: Ubiquity.NET.InteropHelpers.LazyEncodedString
      description: name of the library
    - id: lib
      type: Ubiquity.NET.Llvm.OrcJITv2.JITDyLib
      description: '[out] library if found or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>'
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if found or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not
    content.vb: Public Function TryGetDyLib(name As LazyEncodedString, [lib] As JITDyLib) As Boolean
  overload: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib*
  nameWithType.vb: ExecutionSession.TryGetDyLib(LazyEncodedString, JITDyLib)
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString, Ubiquity.NET.Llvm.OrcJITv2.JITDyLib)
  name.vb: TryGetDyLib(LazyEncodedString, JITDyLib)
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern(System.String)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern(System.String)
  id: Intern(System.String)
  parent: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession
  langs:
  - csharp
  - vb
  name: Intern(string)
  nameWithType: ExecutionSession.Intern(string)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Intern
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ExecutionSession.cs
    startLine: 219
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Interns a string in the pool
  example: []
  syntax:
    content: public SymbolStringPoolEntry Intern(string name)
    parameters:
    - id: name
      type: System.String
      description: NameField of the symbol to intern in the pool for this session
    return:
      type: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
      description: Entry to the string in the pool
    content.vb: Public Function Intern(name As String) As SymbolStringPoolEntry
  overload: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern*
  nameWithType.vb: ExecutionSession.Intern(String)
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern(String)
  name.vb: Intern(String)
references:
- uid: Ubiquity.NET.Llvm.OrcJITv2
  commentId: N:Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.OrcJITv2
  nameWithType: Ubiquity.NET.Llvm.OrcJITv2
  fullName: Ubiquity.NET.Llvm.OrcJITv2
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.OrcJITv2
    name: OrcJITv2
    href: Ubiquity.NET.Llvm.OrcJITv2.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.OrcJITv2
    name: OrcJITv2
    href: Ubiquity.NET.Llvm.OrcJITv2.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool
  href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_SymbolStringPool
  name: SymbolStringPool
  nameWithType: ExecutionSession.SymbolStringPool
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.SymbolStringPool
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPool
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPool
  parent: Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPool.html
  name: SymbolStringPool
  nameWithType: SymbolStringPool
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPool
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager
  href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_CreateLazyCallThroughManager_Ubiquity_NET_InteropHelpers_LazyEncodedString_System_UInt64_
  name: CreateLazyCallThroughManager
  nameWithType: ExecutionSession.CreateLazyCallThroughManager
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.CreateLazyCallThroughManager
- uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
  commentId: T:Ubiquity.NET.InteropHelpers.LazyEncodedString
  parent: Ubiquity.NET.InteropHelpers
  name: LazyEncodedString
  nameWithType: LazyEncodedString
  fullName: Ubiquity.NET.InteropHelpers.LazyEncodedString
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Ubiquity.NET.Llvm.OrcJITv2.LazyCallThroughManager
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.LazyCallThroughManager
  parent: Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.NET.Llvm.OrcJITv2.LazyCallThroughManager.html
  name: LazyCallThroughManager
  nameWithType: LazyCallThroughManager
  fullName: Ubiquity.NET.Llvm.OrcJITv2.LazyCallThroughManager
- uid: Ubiquity.NET.InteropHelpers
  commentId: N:Ubiquity.NET.InteropHelpers
  name: Ubiquity.NET.InteropHelpers
  nameWithType: Ubiquity.NET.InteropHelpers
  fullName: Ubiquity.NET.InteropHelpers
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
  - name: .
  - uid: Ubiquity.NET
    name: NET
  - name: .
  - uid: Ubiquity.NET.InteropHelpers
    name: InteropHelpers
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
  - name: .
  - uid: Ubiquity.NET
    name: NET
  - name: .
  - uid: Ubiquity.NET.InteropHelpers
    name: InteropHelpers
- uid: Ubiquity.NET.Llvm.OrcJITv2.JITDyLib
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.JITDyLib
  parent: Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.NET.Llvm.OrcJITv2.JITDyLib.html
  name: JITDyLib
  nameWithType: JITDyLib
  fullName: Ubiquity.NET.Llvm.OrcJITv2.JITDyLib
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib
  href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_GetOrCreateBareDyLib_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  name: GetOrCreateBareDyLib
  nameWithType: ExecutionSession.GetOrCreateBareDyLib
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib
- uid: Ubiquity.NET.Llvm.ErrorInfo
  commentId: T:Ubiquity.NET.Llvm.ErrorInfo
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.ErrorInfo.html
  name: ErrorInfo
  nameWithType: ErrorInfo
  fullName: Ubiquity.NET.Llvm.ErrorInfo
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_GetOrCreateBareDyLib_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  name: GetOrCreateBareDyLib(LazyEncodedString)
  nameWithType: ExecutionSession.GetOrCreateBareDyLib(LazyEncodedString)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
    name: GetOrCreateBareDyLib
    href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_GetOrCreateBareDyLib_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  - name: (
  - uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
    name: LazyEncodedString
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.GetOrCreateBareDyLib(Ubiquity.NET.InteropHelpers.LazyEncodedString)
    name: GetOrCreateBareDyLib
    href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_GetOrCreateBareDyLib_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  - name: (
  - uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
    name: LazyEncodedString
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib
  href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_TryGetOrCreateDyLib_Ubiquity_NET_InteropHelpers_LazyEncodedString_Ubiquity_NET_Llvm_OrcJITv2_JITDyLib__Ubiquity_NET_Llvm_ErrorInfo__
  name: TryGetOrCreateDyLib
  nameWithType: ExecutionSession.TryGetOrCreateDyLib
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetOrCreateDyLib
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib
  href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_TryGetDyLib_Ubiquity_NET_InteropHelpers_LazyEncodedString_Ubiquity_NET_Llvm_OrcJITv2_JITDyLib__
  name: TryGetDyLib
  nameWithType: ExecutionSession.TryGetDyLib
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.TryGetDyLib
- uid: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern
  href: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.html#Ubiquity_NET_Llvm_OrcJITv2_ExecutionSession_Intern_System_String_
  name: Intern
  nameWithType: ExecutionSession.Intern
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ExecutionSession.Intern
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  parent: Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html
  name: SymbolStringPoolEntry
  nameWithType: SymbolStringPoolEntry
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
