### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  id: ThreadSafeContext
  parent: Ubiquity.NET.Llvm.OrcJITv2
  children:
  - Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.#ctor
  - Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule(Ubiquity.NET.Llvm.Module)
  - Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose
  - Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext
  langs:
  - csharp
  - vb
  name: ThreadSafeContext
  nameWithType: ThreadSafeContext
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ThreadSafeContext
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
    startLine: 11
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Thread safe ContextAlias for use with LLVM ORC JIT v2
  example: []
  syntax:
    content: 'public sealed class ThreadSafeContext : IDisposable'
    content.vb: Public NotInheritable Class ThreadSafeContext Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.#ctor
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.#ctor
  id: '#ctor'
  parent: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  langs:
  - csharp
  - vb
  name: ThreadSafeContext()
  nameWithType: ThreadSafeContext.ThreadSafeContext()
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.ThreadSafeContext()
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
    startLine: 15
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ThreadSafeContext()
    content.vb: Public Sub New()
  overload: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.#ctor*
  nameWithType.vb: ThreadSafeContext.New()
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.New()
  name.vb: New()
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule(Ubiquity.NET.Llvm.Module)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule(Ubiquity.NET.Llvm.Module)
  id: AddModule(Ubiquity.NET.Llvm.Module)
  parent: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  langs:
  - csharp
  - vb
  name: AddModule(Module)
  nameWithType: ThreadSafeContext.AddModule(Module)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule(Ubiquity.NET.Llvm.Module)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AddModule
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
    startLine: 35
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Adds a module to this context
  remarks: >-
    <p>This creates a new <xref href="Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeModule" data-throw-if-not-resolved="false"></xref> in this context. The

    resulting <xref href="Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeModule" data-throw-if-not-resolved="false"></xref> has a ref count on the context and

    therefore it is safe (and appropriate) to dispose of this instance.</p>

    <div class="IMPORTANT"><h5>important</h5><p>

    Ownership of the input <code class="paramref">perThreadModule</code> is transferred to

    the returned value and is NOT usable after this call completes without exception

    (Except to call Dispose which is a NOP). However if an exception occurs, then

    ownership remains with the caller. Thus callers should ALWAYS call Dispose on the

    result and should NOT assume it is valid.

    </p></div>
  example: []
  syntax:
    content: public ThreadSafeModule AddModule(Module perThreadModule)
    parameters:
    - id: perThreadModule
      type: Ubiquity.NET.Llvm.Module
      description: Module to add
    return:
      type: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeModule
      description: ThreadSafe module added to this context
    content.vb: Public Function AddModule(perThreadModule As [Module]) As ThreadSafeModule
  overload: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule*
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ThreadSafeContext.Dispose()
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
    startLine: 46
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext
  commentId: P:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext
  id: PerThreadContext
  parent: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  langs:
  - csharp
  - vb
  name: PerThreadContext
  nameWithType: ThreadSafeContext.PerThreadContext
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: PerThreadContext
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/ThreadSafeContext.cs
    startLine: 52
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Gets the PerThreadContext for this instance
  example: []
  syntax:
    content: public IContext PerThreadContext { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.IContext
    content.vb: Public ReadOnly Property PerThreadContext As IContext
  overload: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext*
references:
- uid: Ubiquity.NET.Llvm.OrcJITv2
  commentId: N:Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.OrcJITv2
  nameWithType: Ubiquity.NET.Llvm.OrcJITv2
  fullName: Ubiquity.NET.Llvm.OrcJITv2
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.OrcJITv2
    name: OrcJITv2
    href: Ubiquity.NET.Llvm.OrcJITv2.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.OrcJITv2
    name: OrcJITv2
    href: Ubiquity.NET.Llvm.OrcJITv2.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
  parent: Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.html
  name: ThreadSafeContext
  nameWithType: ThreadSafeContext
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.#ctor*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.#ctor
  href: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.html#Ubiquity_NET_Llvm_OrcJITv2_ThreadSafeContext__ctor
  name: ThreadSafeContext
  nameWithType: ThreadSafeContext.ThreadSafeContext
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.ThreadSafeContext
  nameWithType.vb: ThreadSafeContext.New
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.New
  name.vb: New
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeModule
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeModule
  parent: Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeModule.html
  name: ThreadSafeModule
  nameWithType: ThreadSafeModule
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeModule
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule
  href: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.html#Ubiquity_NET_Llvm_OrcJITv2_ThreadSafeContext_AddModule_Ubiquity_NET_Llvm_Module_
  name: AddModule
  nameWithType: ThreadSafeContext.AddModule
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.AddModule
- uid: Ubiquity.NET.Llvm.Module
  commentId: T:Ubiquity.NET.Llvm.Module
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Module.html
  name: Module
  nameWithType: Module
  fullName: Ubiquity.NET.Llvm.Module
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose
  href: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.html#Ubiquity_NET_Llvm_OrcJITv2_ThreadSafeContext_Dispose
  name: Dispose
  nameWithType: ThreadSafeContext.Dispose
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext
  href: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.html#Ubiquity_NET_Llvm_OrcJITv2_ThreadSafeContext_PerThreadContext
  name: PerThreadContext
  nameWithType: ThreadSafeContext.PerThreadContext
  fullName: Ubiquity.NET.Llvm.OrcJITv2.ThreadSafeContext.PerThreadContext
- uid: Ubiquity.NET.Llvm.IContext
  commentId: T:Ubiquity.NET.Llvm.IContext
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.IContext.html
  name: IContext
  nameWithType: IContext
  fullName: Ubiquity.NET.Llvm.IContext
