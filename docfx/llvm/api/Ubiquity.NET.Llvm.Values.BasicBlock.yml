### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Values.BasicBlock
  commentId: T:Ubiquity.NET.Llvm.Values.BasicBlock
  id: BasicBlock
  parent: Ubiquity.NET.Llvm.Values
  children:
  - Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction
  - Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction
  - Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction(Ubiquity.NET.Llvm.Instructions.Instruction)
  - Ubiquity.NET.Llvm.Values.BasicBlock.Instructions
  - Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction
  - Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
  langs:
  - csharp
  - vb
  name: BasicBlock
  nameWithType: BasicBlock
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: BasicBlock
    path: ../src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
    startLine: 14
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Provides access to an LLVM Basic block
  remarks: >-
    A basic block is a sequence of instructions with a single entry

    and a single exit. The exit point must be a <xref href="Ubiquity.NET.Llvm.Values.BasicBlock.Terminator" data-throw-if-not-resolved="false"></xref>

    instruction or the block is not (yet) well-formed.
  example: []
  syntax:
    content: 'public class BasicBlock : Value, IEquatable<Value>'
    content.vb: Public Class BasicBlock Inherits Value Implements IEquatable(Of Value)
  inheritance:
  - System.Object
  - Ubiquity.NET.Llvm.Values.Value
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  inheritedMembers:
  - Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  - Ubiquity.NET.Llvm.Values.Value.GetHashCode
  - Ubiquity.NET.Llvm.Values.Value.Name
  - Ubiquity.NET.Llvm.Values.Value.IsUndefined
  - Ubiquity.NET.Llvm.Values.Value.IsNull
  - Ubiquity.NET.Llvm.Values.Value.NativeType
  - Ubiquity.NET.Llvm.Values.Value.Context
  - Ubiquity.NET.Llvm.Values.Value.IsInstruction
  - Ubiquity.NET.Llvm.Values.Value.IsFunction
  - Ubiquity.NET.Llvm.Values.Value.IsCallSite
  - Ubiquity.NET.Llvm.Values.Value.ToString
  - Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.DebugRecords
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Ubiquity.NET.Llvm.Values.BasicBlock.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction
  commentId: P:Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction
  id: ContainingFunction
  parent: Ubiquity.NET.Llvm.Values.BasicBlock
  langs:
  - csharp
  - vb
  name: ContainingFunction
  nameWithType: BasicBlock.ContainingFunction
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ContainingFunction
    path: ../src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
    startLine: 18
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the function containing the block
  example: []
  syntax:
    content: public Function? ContainingFunction { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Values.Function
    content.vb: Public ReadOnly Property ContainingFunction As [Function]
  overload: Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction*
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction
  commentId: P:Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction
  id: FirstInstruction
  parent: Ubiquity.NET.Llvm.Values.BasicBlock
  langs:
  - csharp
  - vb
  name: FirstInstruction
  nameWithType: BasicBlock.FirstInstruction
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: FirstInstruction
    path: ../src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
    startLine: 36
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the first instruction in the block
  example: []
  syntax:
    content: public Instruction? FirstInstruction { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Instructions.Instruction
    content.vb: Public ReadOnly Property FirstInstruction As Instruction
  overload: Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction*
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction
  commentId: P:Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction
  id: LastInstruction
  parent: Ubiquity.NET.Llvm.Values.BasicBlock
  langs:
  - csharp
  - vb
  name: LastInstruction
  nameWithType: BasicBlock.LastInstruction
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LastInstruction
    path: ../src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
    startLine: 46
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the last instruction in the block
  example: []
  syntax:
    content: public Instruction? LastInstruction { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Instructions.Instruction
    content.vb: Public ReadOnly Property LastInstruction As Instruction
  overload: Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction*
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
  commentId: P:Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
  id: Terminator
  parent: Ubiquity.NET.Llvm.Values.BasicBlock
  langs:
  - csharp
  - vb
  name: Terminator
  nameWithType: BasicBlock.Terminator
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Terminator
    path: ../src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
    startLine: 60
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the terminator instruction for the block
  remarks: >-
    May be null if the block is not yet well-formed

    as is commonly the case while generating code for a new block
  example: []
  syntax:
    content: public Instruction? Terminator { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Instructions.Instruction
    content.vb: Public ReadOnly Property Terminator As Instruction
  overload: Ubiquity.NET.Llvm.Values.BasicBlock.Terminator*
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.Instructions
  commentId: P:Ubiquity.NET.Llvm.Values.BasicBlock.Instructions
  id: Instructions
  parent: Ubiquity.NET.Llvm.Values.BasicBlock
  langs:
  - csharp
  - vb
  name: Instructions
  nameWithType: BasicBlock.Instructions
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.Instructions
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Instructions
    path: ../src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
    startLine: 70
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets all instructions in the block
  example: []
  syntax:
    content: public IEnumerable<Instruction> Instructions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Instructions.Instruction}
    content.vb: Public ReadOnly Property Instructions As IEnumerable(Of Instruction)
  overload: Ubiquity.NET.Llvm.Values.BasicBlock.Instructions*
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction(Ubiquity.NET.Llvm.Instructions.Instruction)
  commentId: M:Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction(Ubiquity.NET.Llvm.Instructions.Instruction)
  id: GetNextInstruction(Ubiquity.NET.Llvm.Instructions.Instruction)
  parent: Ubiquity.NET.Llvm.Values.BasicBlock
  langs:
  - csharp
  - vb
  name: GetNextInstruction(Instruction)
  nameWithType: BasicBlock.GetNextInstruction(Instruction)
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction(Ubiquity.NET.Llvm.Instructions.Instruction)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetNextInstruction
    path: ../src/Ubiquity.NET.Llvm/Values/BasicBlock.cs
    startLine: 87
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the instruction that follows a given instruction in a block
  example: []
  syntax:
    content: public Instruction? GetNextInstruction(Instruction instruction)
    parameters:
    - id: instruction
      type: Ubiquity.NET.Llvm.Instructions.Instruction
      description: instruction in the block to get the next instruction from
    return:
      type: Ubiquity.NET.Llvm.Instructions.Instruction
      description: Next instruction or null if none
    content.vb: Public Function GetNextInstruction(instruction As Instruction) As Instruction
  overload: Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when  is from a different block
references:
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
  commentId: P:Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html#Ubiquity_NET_Llvm_Values_BasicBlock_Terminator
  name: Terminator
  nameWithType: BasicBlock.Terminator
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.Values.Value
  commentId: T:Ubiquity.NET.Llvm.Values.Value
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Value.html
  name: Value
  nameWithType: Value
  fullName: Ubiquity.NET.Llvm.Values.Value
- uid: System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Value>
  nameWithType: IEquatable<Value>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Values.Value>
  nameWithType.vb: IEquatable(Of Value)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Values.Value)
  name.vb: IEquatable(Of Value)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  name: Equals(Value)
  nameWithType: Value.Equals(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  parent: Ubiquity.NET.Llvm.Values.Value
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  name: Equals(object)
  nameWithType: Value.Equals(object)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(object)
  nameWithType.vb: Value.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.Values.Value.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.Values.Value.GetHashCode
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  name: GetHashCode()
  nameWithType: Value.GetHashCode()
  fullName: Ubiquity.NET.Llvm.Values.Value.GetHashCode()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Name
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Name
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Name
  name: Name
  nameWithType: Value.Name
  fullName: Ubiquity.NET.Llvm.Values.Value.Name
- uid: Ubiquity.NET.Llvm.Values.Value.IsUndefined
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsUndefined
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsUndefined
  name: IsUndefined
  nameWithType: Value.IsUndefined
  fullName: Ubiquity.NET.Llvm.Values.Value.IsUndefined
- uid: Ubiquity.NET.Llvm.Values.Value.IsNull
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsNull
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsNull
  name: IsNull
  nameWithType: Value.IsNull
  fullName: Ubiquity.NET.Llvm.Values.Value.IsNull
- uid: Ubiquity.NET.Llvm.Values.Value.NativeType
  commentId: P:Ubiquity.NET.Llvm.Values.Value.NativeType
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_NativeType
  name: NativeType
  nameWithType: Value.NativeType
  fullName: Ubiquity.NET.Llvm.Values.Value.NativeType
- uid: Ubiquity.NET.Llvm.Values.Value.Context
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Context
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Context
  name: Context
  nameWithType: Value.Context
  fullName: Ubiquity.NET.Llvm.Values.Value.Context
- uid: Ubiquity.NET.Llvm.Values.Value.IsInstruction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsInstruction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsInstruction
  name: IsInstruction
  nameWithType: Value.IsInstruction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsInstruction
- uid: Ubiquity.NET.Llvm.Values.Value.IsFunction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsFunction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsFunction
  name: IsFunction
  nameWithType: Value.IsFunction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsFunction
- uid: Ubiquity.NET.Llvm.Values.Value.IsCallSite
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsCallSite
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsCallSite
  name: IsCallSite
  nameWithType: Value.IsCallSite
  fullName: Ubiquity.NET.Llvm.Values.Value.IsCallSite
- uid: Ubiquity.NET.Llvm.Values.Value.ToString
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ToString
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  name: ToString()
  nameWithType: Value.ToString()
  fullName: Ubiquity.NET.Llvm.Values.Value.ToString()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  name: ReplaceAllUsesWith(Value)
  nameWithType: Value.ReplaceAllUsesWith(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.DebugRecords
  commentId: P:Ubiquity.NET.Llvm.Values.Value.DebugRecords
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_DebugRecords
  name: DebugRecords
  nameWithType: Value.DebugRecords
  fullName: Ubiquity.NET.Llvm.Values.Value.DebugRecords
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  parent: Ubiquity.NET.Llvm.Values.ValueExtensions
  definition: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<BasicBlock>(BasicBlock, string)
  nameWithType: ValueExtensions.RegisterName<BasicBlock>(BasicBlock, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<Ubiquity.NET.Llvm.Values.BasicBlock>(Ubiquity.NET.Llvm.Values.BasicBlock, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of BasicBlock)(BasicBlock, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of Ubiquity.NET.Llvm.Values.BasicBlock)(Ubiquity.NET.Llvm.Values.BasicBlock, String)
  name.vb: RegisterName(Of BasicBlock)(BasicBlock, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.BasicBlock,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: '>'
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.BasicBlock,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: )
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<T>(T, string)
  nameWithType: ValueExtensions.RegisterName<T>(T, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<T>(T, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of T)(T, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of T)(T, String)
  name.vb: RegisterName(Of T)(T, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions
  commentId: T:Ubiquity.NET.Llvm.Values.ValueExtensions
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html
  name: ValueExtensions
  nameWithType: ValueExtensions
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction*
  commentId: Overload:Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html#Ubiquity_NET_Llvm_Values_BasicBlock_ContainingFunction
  name: ContainingFunction
  nameWithType: BasicBlock.ContainingFunction
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.ContainingFunction
- uid: Ubiquity.NET.Llvm.Values.Function
  commentId: T:Ubiquity.NET.Llvm.Values.Function
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Function.html
  name: Function
  nameWithType: Function
  fullName: Ubiquity.NET.Llvm.Values.Function
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction*
  commentId: Overload:Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html#Ubiquity_NET_Llvm_Values_BasicBlock_FirstInstruction
  name: FirstInstruction
  nameWithType: BasicBlock.FirstInstruction
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.FirstInstruction
- uid: Ubiquity.NET.Llvm.Instructions.Instruction
  commentId: T:Ubiquity.NET.Llvm.Instructions.Instruction
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.Instruction.html
  name: Instruction
  nameWithType: Instruction
  fullName: Ubiquity.NET.Llvm.Instructions.Instruction
- uid: Ubiquity.NET.Llvm.Instructions
  commentId: N:Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Instructions
  nameWithType: Ubiquity.NET.Llvm.Instructions
  fullName: Ubiquity.NET.Llvm.Instructions
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction*
  commentId: Overload:Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html#Ubiquity_NET_Llvm_Values_BasicBlock_LastInstruction
  name: LastInstruction
  nameWithType: BasicBlock.LastInstruction
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.LastInstruction
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.Terminator*
  commentId: Overload:Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html#Ubiquity_NET_Llvm_Values_BasicBlock_Terminator
  name: Terminator
  nameWithType: BasicBlock.Terminator
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.Terminator
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.Instructions*
  commentId: Overload:Ubiquity.NET.Llvm.Values.BasicBlock.Instructions
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html#Ubiquity_NET_Llvm_Values_BasicBlock_Instructions
  name: Instructions
  nameWithType: BasicBlock.Instructions
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.Instructions
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Instructions.Instruction}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Instructions.Instruction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Instruction>
  nameWithType: IEnumerable<Instruction>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Instructions.Instruction>
  nameWithType.vb: IEnumerable(Of Instruction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Instructions.Instruction)
  name.vb: IEnumerable(Of Instruction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Instructions.Instruction
    name: Instruction
    href: Ubiquity.NET.Llvm.Instructions.Instruction.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Instructions.Instruction
    name: Instruction
    href: Ubiquity.NET.Llvm.Instructions.Instruction.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction*
  commentId: Overload:Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html#Ubiquity_NET_Llvm_Values_BasicBlock_GetNextInstruction_Ubiquity_NET_Llvm_Instructions_Instruction_
  name: GetNextInstruction
  nameWithType: BasicBlock.GetNextInstruction
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock.GetNextInstruction
