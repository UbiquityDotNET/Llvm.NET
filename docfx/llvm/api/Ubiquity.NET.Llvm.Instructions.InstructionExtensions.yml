### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Instructions.InstructionExtensions
  commentId: T:Ubiquity.NET.Llvm.Instructions.InstructionExtensions
  id: InstructionExtensions
  parent: Ubiquity.NET.Llvm.Instructions
  children:
  - Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment``1(``0,System.UInt32)
  - Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile``1(``0,System.Boolean)
  langs:
  - csharp
  - vb
  name: InstructionExtensions
  nameWithType: InstructionExtensions
  fullName: Ubiquity.NET.Llvm.Instructions.InstructionExtensions
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/InstructionExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InstructionExtensions
    path: ../src/Ubiquity.NET.Llvm/Instructions/InstructionExtensions.cs
    startLine: 14
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Provides extension methods to <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref> that cannot be achieved as members of the class
  remarks: >-
    Using generic static extension methods allows for fluent coding while retaining the type of the "this" parameter.

    If these were members of the <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref> class then the only return type could be <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref>

    thus losing the original type and requiring a cast to get back to it, thereby defeating the purpose of the fluent style.
  example: []
  syntax:
    content: public static class InstructionExtensions
    content.vb: Public Module InstructionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment``1(``0,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment``1(``0,System.UInt32)
  id: SetAlignment``1(``0,System.UInt32)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Instructions.InstructionExtensions
  langs:
  - csharp
  - vb
  name: SetAlignment<T>(T, uint)
  nameWithType: InstructionExtensions.SetAlignment<T>(T, uint)
  fullName: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment<T>(T, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/InstructionExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SetAlignment
    path: ../src/Ubiquity.NET.Llvm/Instructions/InstructionExtensions.cs
    startLine: 21
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Fluent style extension method to set the <xref href="Ubiquity.NET.Llvm.Instructions.Instruction.Alignment" data-throw-if-not-resolved="false"></xref> for an instruction
  example: []
  syntax:
    content: 'public static T SetAlignment<T>(this T self, uint value) where T : Instruction'
    parameters:
    - id: self
      type: '{T}'
      description: Instruction to set the <xref href="Ubiquity.NET.Llvm.Instructions.Instruction.Alignment" data-throw-if-not-resolved="false"></xref> for
    - id: value
      type: System.UInt32
      description: New alignment for the instruction
    typeParameters:
    - id: T
      description: Type of the instruction (usually implicitly inferred from usage)
    return:
      type: '{T}'
      description: To allow fluent style coding this returns the <code class="paramref">self</code> parameter
    content.vb: Public Shared Function SetAlignment(Of T As Instruction)(self As T, value As UInteger) As T
  overload: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment*
  nameWithType.vb: InstructionExtensions.SetAlignment(Of T)(T, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment(Of T)(T, UInteger)
  name.vb: SetAlignment(Of T)(T, UInteger)
- uid: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile``1(``0,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile``1(``0,System.Boolean)
  id: SetIsVolatile``1(``0,System.Boolean)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Instructions.InstructionExtensions
  langs:
  - csharp
  - vb
  name: SetIsVolatile<T>(T, bool)
  nameWithType: InstructionExtensions.SetIsVolatile<T>(T, bool)
  fullName: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile<T>(T, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/InstructionExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SetIsVolatile
    path: ../src/Ubiquity.NET.Llvm/Instructions/InstructionExtensions.cs
    startLine: 39
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Fluent style extension method to set the Volatile property of a <xref href="Ubiquity.NET.Llvm.Instructions.Load" data-throw-if-not-resolved="false"></xref> or <xref href="Ubiquity.NET.Llvm.Instructions.Store" data-throw-if-not-resolved="false"></xref> instruction
  example: []
  syntax:
    content: 'public static T SetIsVolatile<T>(this T self, bool value) where T : Instruction'
    parameters:
    - id: self
      type: '{T}'
      description: Instruction to set the Volatile property for
    - id: value
      type: System.Boolean
      description: Flag to indicate if the instruction's operation is volatile
    typeParameters:
    - id: T
      description: Type of the instruction (usually implicitly inferred from usage)
    return:
      type: '{T}'
      description: To allow fluent style coding this returns the <code class="paramref">self</code> parameter
    content.vb: Public Shared Function SetIsVolatile(Of T As Instruction)(self As T, value As Boolean) As T
  overload: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile*
  nameWithType.vb: InstructionExtensions.SetIsVolatile(Of T)(T, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile(Of T)(T, Boolean)
  name.vb: SetIsVolatile(Of T)(T, Boolean)
references:
- uid: Ubiquity.NET.Llvm.Instructions.Instruction
  commentId: T:Ubiquity.NET.Llvm.Instructions.Instruction
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.Instruction.html
  name: Instruction
  nameWithType: Instruction
  fullName: Ubiquity.NET.Llvm.Instructions.Instruction
- uid: Ubiquity.NET.Llvm.Instructions
  commentId: N:Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Instructions
  nameWithType: Ubiquity.NET.Llvm.Instructions
  fullName: Ubiquity.NET.Llvm.Instructions
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.Instructions.Instruction.Alignment
  commentId: P:Ubiquity.NET.Llvm.Instructions.Instruction.Alignment
  parent: Ubiquity.NET.Llvm.Instructions.Instruction
  href: Ubiquity.NET.Llvm.Instructions.Instruction.html#Ubiquity_NET_Llvm_Instructions_Instruction_Alignment
  name: Alignment
  nameWithType: Instruction.Alignment
  fullName: Ubiquity.NET.Llvm.Instructions.Instruction.Alignment
- uid: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment*
  commentId: Overload:Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment
  href: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.html#Ubiquity_NET_Llvm_Instructions_InstructionExtensions_SetAlignment__1___0_System_UInt32_
  name: SetAlignment
  nameWithType: InstructionExtensions.SetAlignment
  fullName: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetAlignment
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Ubiquity.NET.Llvm.Instructions.Load
  commentId: T:Ubiquity.NET.Llvm.Instructions.Load
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.Load.html
  name: Load
  nameWithType: Load
  fullName: Ubiquity.NET.Llvm.Instructions.Load
- uid: Ubiquity.NET.Llvm.Instructions.Store
  commentId: T:Ubiquity.NET.Llvm.Instructions.Store
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.Store.html
  name: Store
  nameWithType: Store
  fullName: Ubiquity.NET.Llvm.Instructions.Store
- uid: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile*
  commentId: Overload:Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile
  href: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.html#Ubiquity_NET_Llvm_Instructions_InstructionExtensions_SetIsVolatile__1___0_System_Boolean_
  name: SetIsVolatile
  nameWithType: InstructionExtensions.SetIsVolatile
  fullName: Ubiquity.NET.Llvm.Instructions.InstructionExtensions.SetIsVolatile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
