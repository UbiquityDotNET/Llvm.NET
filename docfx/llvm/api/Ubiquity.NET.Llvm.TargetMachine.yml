### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.TargetMachine
  commentId: T:Ubiquity.NET.Llvm.TargetMachine
  id: TargetMachine
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.TargetMachine.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)
  - Ubiquity.NET.Llvm.TargetMachine.Cpu
  - Ubiquity.NET.Llvm.TargetMachine.CreateTargetData
  - Ubiquity.NET.Llvm.TargetMachine.Dispose
  - Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer(Ubiquity.NET.Llvm.IModule,Ubiquity.NET.Llvm.CodeGenFileKind)
  - Ubiquity.NET.Llvm.TargetMachine.EmitToFile(Ubiquity.NET.Llvm.IModule,System.String,Ubiquity.NET.Llvm.CodeGenFileKind,System.Boolean)
  - Ubiquity.NET.Llvm.TargetMachine.Features
  - Ubiquity.NET.Llvm.TargetMachine.FromTriple(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)
  - Ubiquity.NET.Llvm.TargetMachine.Target
  - Ubiquity.NET.Llvm.TargetMachine.Triple
  langs:
  - csharp
  - vb
  name: TargetMachine
  nameWithType: TargetMachine
  fullName: Ubiquity.NET.Llvm.TargetMachine
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: TargetMachine
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 11
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Target specific code generation information
  example: []
  syntax:
    content: 'public sealed class TargetMachine : IDisposable'
    content.vb: Public NotInheritable Class TargetMachine Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.TargetMachine.Dispose
  commentId: M:Ubiquity.NET.Llvm.TargetMachine.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TargetMachine.Dispose()
  fullName: Ubiquity.NET.Llvm.TargetMachine.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 15
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.TargetMachine.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Ubiquity.NET.Llvm.TargetMachine.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)
  commentId: M:Ubiquity.NET.Llvm.TargetMachine.#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)
  id: '#ctor(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)'
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: TargetMachine(Triple, string?, string?, CodeGenOpt, RelocationMode, CodeModel)
  nameWithType: TargetMachine.TargetMachine(Triple, string?, string?, CodeGenOpt, RelocationMode, CodeModel)
  fullName: Ubiquity.NET.Llvm.TargetMachine.TargetMachine(Ubiquity.NET.Llvm.Triple, string?, string?, Ubiquity.NET.Llvm.CodeGenOpt, Ubiquity.NET.Llvm.RelocationMode, Ubiquity.NET.Llvm.CodeModel)
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 24
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.TargetMachine" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TargetMachine(Triple triple, string? cpu = null, string? features = null, CodeGenOpt optLevel = CodeGenOpt.Default, RelocationMode relocationMode = RelocationMode.Default, CodeModel codeModel = CodeModel.Default)
    parameters:
    - id: triple
      type: Ubiquity.NET.Llvm.Triple
      description: Triple for the target machine
    - id: cpu
      type: System.String
      description: CPU options for the machine
    - id: features
      type: System.String
      description: CPU features for the machine
    - id: optLevel
      type: Ubiquity.NET.Llvm.CodeGenOpt
      description: General optimization level for machine code generation
    - id: relocationMode
      type: Ubiquity.NET.Llvm.RelocationMode
      description: Relocation mode for machine code generation
    - id: codeModel
      type: Ubiquity.NET.Llvm.CodeModel
      description: Code model for machine code generation
    content.vb: Public Sub New(triple As Triple, cpu As String = Nothing, features As String = Nothing, optLevel As CodeGenOpt = CodeGenOpt.Default, relocationMode As RelocationMode = RelocationMode.Default, codeModel As CodeModel = CodeModel.Default)
  overload: Ubiquity.NET.Llvm.TargetMachine.#ctor*
  nameWithType.vb: TargetMachine.New(Triple, String, String, CodeGenOpt, RelocationMode, CodeModel)
  fullName.vb: Ubiquity.NET.Llvm.TargetMachine.New(Ubiquity.NET.Llvm.Triple, String, String, Ubiquity.NET.Llvm.CodeGenOpt, Ubiquity.NET.Llvm.RelocationMode, Ubiquity.NET.Llvm.CodeModel)
  name.vb: New(Triple, String, String, CodeGenOpt, RelocationMode, CodeModel)
- uid: Ubiquity.NET.Llvm.TargetMachine.Target
  commentId: P:Ubiquity.NET.Llvm.TargetMachine.Target
  id: Target
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: TargetMachine.Target
  fullName: Ubiquity.NET.Llvm.TargetMachine.Target
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Target
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 36
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the target that owns this <xref href="Ubiquity.NET.Llvm.TargetMachine" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Target Target { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Target
    content.vb: Public ReadOnly Property Target As Target
  overload: Ubiquity.NET.Llvm.TargetMachine.Target*
- uid: Ubiquity.NET.Llvm.TargetMachine.Triple
  commentId: P:Ubiquity.NET.Llvm.TargetMachine.Triple
  id: Triple
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: Triple
  nameWithType: TargetMachine.Triple
  fullName: Ubiquity.NET.Llvm.TargetMachine.Triple
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Triple
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 39
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the target triple describing this machine
  example: []
  syntax:
    content: public string Triple { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Triple As String
  overload: Ubiquity.NET.Llvm.TargetMachine.Triple*
- uid: Ubiquity.NET.Llvm.TargetMachine.Cpu
  commentId: P:Ubiquity.NET.Llvm.TargetMachine.Cpu
  id: Cpu
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: Cpu
  nameWithType: TargetMachine.Cpu
  fullName: Ubiquity.NET.Llvm.TargetMachine.Cpu
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Cpu
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 42
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the CPU Type for this machine
  example: []
  syntax:
    content: public string Cpu { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Cpu As String
  overload: Ubiquity.NET.Llvm.TargetMachine.Cpu*
- uid: Ubiquity.NET.Llvm.TargetMachine.Features
  commentId: P:Ubiquity.NET.Llvm.TargetMachine.Features
  id: Features
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: Features
  nameWithType: TargetMachine.Features
  fullName: Ubiquity.NET.Llvm.TargetMachine.Features
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Features
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 45
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the CPU specific features for this machine
  example: []
  syntax:
    content: public string Features { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Features As String
  overload: Ubiquity.NET.Llvm.TargetMachine.Features*
- uid: Ubiquity.NET.Llvm.TargetMachine.CreateTargetData
  commentId: M:Ubiquity.NET.Llvm.TargetMachine.CreateTargetData
  id: CreateTargetData
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: CreateTargetData()
  nameWithType: TargetMachine.CreateTargetData()
  fullName: Ubiquity.NET.Llvm.TargetMachine.CreateTargetData()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateTargetData
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 48
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates Data Layout information for this machine
  example: []
  syntax:
    content: public DataLayout CreateTargetData()
    return:
      type: Ubiquity.NET.Llvm.DataLayout
    content.vb: Public Function CreateTargetData() As DataLayout
  overload: Ubiquity.NET.Llvm.TargetMachine.CreateTargetData*
- uid: Ubiquity.NET.Llvm.TargetMachine.EmitToFile(Ubiquity.NET.Llvm.IModule,System.String,Ubiquity.NET.Llvm.CodeGenFileKind,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.TargetMachine.EmitToFile(Ubiquity.NET.Llvm.IModule,System.String,Ubiquity.NET.Llvm.CodeGenFileKind,System.Boolean)
  id: EmitToFile(Ubiquity.NET.Llvm.IModule,System.String,Ubiquity.NET.Llvm.CodeGenFileKind,System.Boolean)
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: EmitToFile(IModule, string, CodeGenFileKind, bool)
  nameWithType: TargetMachine.EmitToFile(IModule, string, CodeGenFileKind, bool)
  fullName: Ubiquity.NET.Llvm.TargetMachine.EmitToFile(Ubiquity.NET.Llvm.IModule, string, Ubiquity.NET.Llvm.CodeGenFileKind, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: EmitToFile
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 58
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Generate code for the target machine from a module
  example: []
  syntax:
    content: public void EmitToFile(IModule module, string path, CodeGenFileKind fileType, bool skipVerify = false)
    parameters:
    - id: module
      type: Ubiquity.NET.Llvm.IModule
      description: <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref> to generate the code from
    - id: path
      type: System.String
      description: Path to the output file
    - id: fileType
      type: Ubiquity.NET.Llvm.CodeGenFileKind
      description: Type of file to emit
    - id: skipVerify
      type: System.Boolean
      description: 'Skips verification [Default: false; verification of module performed]'
    content.vb: Public Sub EmitToFile([module] As IModule, path As String, fileType As CodeGenFileKind, skipVerify As Boolean = False)
  overload: Ubiquity.NET.Llvm.TargetMachine.EmitToFile*
  nameWithType.vb: TargetMachine.EmitToFile(IModule, String, CodeGenFileKind, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.TargetMachine.EmitToFile(Ubiquity.NET.Llvm.IModule, String, Ubiquity.NET.Llvm.CodeGenFileKind, Boolean)
  name.vb: EmitToFile(IModule, String, CodeGenFileKind, Boolean)
- uid: Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer(Ubiquity.NET.Llvm.IModule,Ubiquity.NET.Llvm.CodeGenFileKind)
  commentId: M:Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer(Ubiquity.NET.Llvm.IModule,Ubiquity.NET.Llvm.CodeGenFileKind)
  id: EmitToBuffer(Ubiquity.NET.Llvm.IModule,Ubiquity.NET.Llvm.CodeGenFileKind)
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: EmitToBuffer(IModule, CodeGenFileKind)
  nameWithType: TargetMachine.EmitToBuffer(IModule, CodeGenFileKind)
  fullName: Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer(Ubiquity.NET.Llvm.IModule, Ubiquity.NET.Llvm.CodeGenFileKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: EmitToBuffer
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 94
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Emits the module for the target machine to a <xref href="Ubiquity.NET.Llvm.MemoryBuffer" data-throw-if-not-resolved="false"></xref>
  remarks: >-
    The <xref href="Ubiquity.NET.Llvm.Module.TargetTriple" data-throw-if-not-resolved="false"></xref> must match the <xref href="Ubiquity.NET.Llvm.TargetMachine.Triple" data-throw-if-not-resolved="false"></xref> for this

    target.
  example: []
  syntax:
    content: public MemoryBuffer EmitToBuffer(IModule module, CodeGenFileKind fileType)
    parameters:
    - id: module
      type: Ubiquity.NET.Llvm.IModule
      description: ModuleHandle to emit to the buffer
    - id: fileType
      type: Ubiquity.NET.Llvm.CodeGenFileKind
      description: Type of file to generate into the buffer
    return:
      type: Ubiquity.NET.Llvm.MemoryBuffer
      description: <xref href="Ubiquity.NET.Llvm.MemoryBuffer" data-throw-if-not-resolved="false"></xref> containing the generated code
    content.vb: Public Function EmitToBuffer([module] As IModule, fileType As CodeGenFileKind) As MemoryBuffer
  overload: Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer*
- uid: Ubiquity.NET.Llvm.TargetMachine.FromTriple(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)
  commentId: M:Ubiquity.NET.Llvm.TargetMachine.FromTriple(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)
  id: FromTriple(Ubiquity.NET.Llvm.Triple,System.String,System.String,Ubiquity.NET.Llvm.CodeGenOpt,Ubiquity.NET.Llvm.RelocationMode,Ubiquity.NET.Llvm.CodeModel)
  parent: Ubiquity.NET.Llvm.TargetMachine
  langs:
  - csharp
  - vb
  name: FromTriple(Triple, string?, string?, CodeGenOpt, RelocationMode, CodeModel)
  nameWithType: TargetMachine.FromTriple(Triple, string?, string?, CodeGenOpt, RelocationMode, CodeModel)
  fullName: Ubiquity.NET.Llvm.TargetMachine.FromTriple(Ubiquity.NET.Llvm.Triple, string?, string?, Ubiquity.NET.Llvm.CodeGenOpt, Ubiquity.NET.Llvm.RelocationMode, Ubiquity.NET.Llvm.CodeModel)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/TargetMachine.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: FromTriple
    path: ../src/Ubiquity.NET.Llvm/TargetMachine.cs
    startLine: 125
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a <xref href="Ubiquity.NET.Llvm.TargetMachine" data-throw-if-not-resolved="false"></xref> for the triple and specified parameters
  example: []
  syntax:
    content: public static TargetMachine FromTriple(Triple triple, string? cpu = null, string? features = null, CodeGenOpt optLevel = CodeGenOpt.Default, RelocationMode relocationMode = RelocationMode.Default, CodeModel codeModel = CodeModel.Default)
    parameters:
    - id: triple
      type: Ubiquity.NET.Llvm.Triple
      description: Target triple for this machine (e.g. -mtriple)
    - id: cpu
      type: System.String
      description: CPU for this machine (e.g. -mcpu)
    - id: features
      type: System.String
      description: Features for this machine (e.g. -mattr...)
    - id: optLevel
      type: Ubiquity.NET.Llvm.CodeGenOpt
      description: Optimization level
    - id: relocationMode
      type: Ubiquity.NET.Llvm.RelocationMode
      description: Relocation mode for generated code
    - id: codeModel
      type: Ubiquity.NET.Llvm.CodeModel
      description: <xref href="Ubiquity.NET.Llvm.CodeModel" data-throw-if-not-resolved="false"></xref> to use for generated code
    return:
      type: Ubiquity.NET.Llvm.TargetMachine
      description: <xref href="Ubiquity.NET.Llvm.TargetMachine" data-throw-if-not-resolved="false"></xref> based on the specified parameters
    content.vb: Public Shared Function FromTriple(triple As Triple, cpu As String = Nothing, features As String = Nothing, optLevel As CodeGenOpt = CodeGenOpt.Default, relocationMode As RelocationMode = RelocationMode.Default, codeModel As CodeModel = CodeModel.Default) As TargetMachine
  overload: Ubiquity.NET.Llvm.TargetMachine.FromTriple*
  nameWithType.vb: TargetMachine.FromTriple(Triple, String, String, CodeGenOpt, RelocationMode, CodeModel)
  fullName.vb: Ubiquity.NET.Llvm.TargetMachine.FromTriple(Ubiquity.NET.Llvm.Triple, String, String, Ubiquity.NET.Llvm.CodeGenOpt, Ubiquity.NET.Llvm.RelocationMode, Ubiquity.NET.Llvm.CodeModel)
  name.vb: FromTriple(Triple, String, String, CodeGenOpt, RelocationMode, CodeModel)
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.TargetMachine.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.Dispose
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_Dispose
  name: Dispose
  nameWithType: TargetMachine.Dispose
  fullName: Ubiquity.NET.Llvm.TargetMachine.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.TargetMachine
  commentId: T:Ubiquity.NET.Llvm.TargetMachine
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.TargetMachine.html
  name: TargetMachine
  nameWithType: TargetMachine
  fullName: Ubiquity.NET.Llvm.TargetMachine
- uid: Ubiquity.NET.Llvm.TargetMachine.#ctor*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.#ctor
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine__ctor_Ubiquity_NET_Llvm_Triple_System_String_System_String_Ubiquity_NET_Llvm_CodeGenOpt_Ubiquity_NET_Llvm_RelocationMode_Ubiquity_NET_Llvm_CodeModel_
  name: TargetMachine
  nameWithType: TargetMachine.TargetMachine
  fullName: Ubiquity.NET.Llvm.TargetMachine.TargetMachine
  nameWithType.vb: TargetMachine.New
  fullName.vb: Ubiquity.NET.Llvm.TargetMachine.New
  name.vb: New
- uid: Ubiquity.NET.Llvm.Triple
  commentId: T:Ubiquity.NET.Llvm.Triple
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Triple.html
  name: Triple
  nameWithType: Triple
  fullName: Ubiquity.NET.Llvm.Triple
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.CodeGenOpt
  commentId: T:Ubiquity.NET.Llvm.CodeGenOpt
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.CodeGenOpt.html
  name: CodeGenOpt
  nameWithType: CodeGenOpt
  fullName: Ubiquity.NET.Llvm.CodeGenOpt
- uid: Ubiquity.NET.Llvm.RelocationMode
  commentId: T:Ubiquity.NET.Llvm.RelocationMode
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.RelocationMode.html
  name: RelocationMode
  nameWithType: RelocationMode
  fullName: Ubiquity.NET.Llvm.RelocationMode
- uid: Ubiquity.NET.Llvm.CodeModel
  commentId: T:Ubiquity.NET.Llvm.CodeModel
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.CodeModel.html
  name: CodeModel
  nameWithType: CodeModel
  fullName: Ubiquity.NET.Llvm.CodeModel
- uid: Ubiquity.NET.Llvm.TargetMachine.Target*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.Target
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_Target
  name: Target
  nameWithType: TargetMachine.Target
  fullName: Ubiquity.NET.Llvm.TargetMachine.Target
- uid: Ubiquity.NET.Llvm.Target
  commentId: T:Ubiquity.NET.Llvm.Target
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Target.html
  name: Target
  nameWithType: Target
  fullName: Ubiquity.NET.Llvm.Target
- uid: Ubiquity.NET.Llvm.TargetMachine.Triple*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.Triple
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_Triple
  name: Triple
  nameWithType: TargetMachine.Triple
  fullName: Ubiquity.NET.Llvm.TargetMachine.Triple
- uid: Ubiquity.NET.Llvm.TargetMachine.Cpu*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.Cpu
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_Cpu
  name: Cpu
  nameWithType: TargetMachine.Cpu
  fullName: Ubiquity.NET.Llvm.TargetMachine.Cpu
- uid: Ubiquity.NET.Llvm.TargetMachine.Features*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.Features
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_Features
  name: Features
  nameWithType: TargetMachine.Features
  fullName: Ubiquity.NET.Llvm.TargetMachine.Features
- uid: Ubiquity.NET.Llvm.TargetMachine.CreateTargetData*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.CreateTargetData
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_CreateTargetData
  name: CreateTargetData
  nameWithType: TargetMachine.CreateTargetData
  fullName: Ubiquity.NET.Llvm.TargetMachine.CreateTargetData
- uid: Ubiquity.NET.Llvm.DataLayout
  commentId: T:Ubiquity.NET.Llvm.DataLayout
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.DataLayout.html
  name: DataLayout
  nameWithType: DataLayout
  fullName: Ubiquity.NET.Llvm.DataLayout
- uid: Ubiquity.NET.Llvm.Module
  commentId: T:Ubiquity.NET.Llvm.Module
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Module.html
  name: Module
  nameWithType: Module
  fullName: Ubiquity.NET.Llvm.Module
- uid: Ubiquity.NET.Llvm.TargetMachine.EmitToFile*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.EmitToFile
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_EmitToFile_Ubiquity_NET_Llvm_IModule_System_String_Ubiquity_NET_Llvm_CodeGenFileKind_System_Boolean_
  name: EmitToFile
  nameWithType: TargetMachine.EmitToFile
  fullName: Ubiquity.NET.Llvm.TargetMachine.EmitToFile
- uid: Ubiquity.NET.Llvm.IModule
  commentId: T:Ubiquity.NET.Llvm.IModule
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.IModule.html
  name: IModule
  nameWithType: IModule
  fullName: Ubiquity.NET.Llvm.IModule
- uid: Ubiquity.NET.Llvm.CodeGenFileKind
  commentId: T:Ubiquity.NET.Llvm.CodeGenFileKind
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.CodeGenFileKind.html
  name: CodeGenFileKind
  nameWithType: CodeGenFileKind
  fullName: Ubiquity.NET.Llvm.CodeGenFileKind
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.MemoryBuffer
  commentId: T:Ubiquity.NET.Llvm.MemoryBuffer
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.MemoryBuffer.html
  name: MemoryBuffer
  nameWithType: MemoryBuffer
  fullName: Ubiquity.NET.Llvm.MemoryBuffer
- uid: Ubiquity.NET.Llvm.Module.TargetTriple
  commentId: P:Ubiquity.NET.Llvm.Module.TargetTriple
  href: Ubiquity.NET.Llvm.Module.html#Ubiquity_NET_Llvm_Module_TargetTriple
  name: TargetTriple
  nameWithType: Module.TargetTriple
  fullName: Ubiquity.NET.Llvm.Module.TargetTriple
- uid: Ubiquity.NET.Llvm.TargetMachine.Triple
  commentId: P:Ubiquity.NET.Llvm.TargetMachine.Triple
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_Triple
  name: Triple
  nameWithType: TargetMachine.Triple
  fullName: Ubiquity.NET.Llvm.TargetMachine.Triple
- uid: Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_EmitToBuffer_Ubiquity_NET_Llvm_IModule_Ubiquity_NET_Llvm_CodeGenFileKind_
  name: EmitToBuffer
  nameWithType: TargetMachine.EmitToBuffer
  fullName: Ubiquity.NET.Llvm.TargetMachine.EmitToBuffer
- uid: Ubiquity.NET.Llvm.TargetMachine.FromTriple*
  commentId: Overload:Ubiquity.NET.Llvm.TargetMachine.FromTriple
  href: Ubiquity.NET.Llvm.TargetMachine.html#Ubiquity_NET_Llvm_TargetMachine_FromTriple_Ubiquity_NET_Llvm_Triple_System_String_System_String_Ubiquity_NET_Llvm_CodeGenOpt_Ubiquity_NET_Llvm_RelocationMode_Ubiquity_NET_Llvm_CodeModel_
  name: FromTriple
  nameWithType: TargetMachine.FromTriple
  fullName: Ubiquity.NET.Llvm.TargetMachine.FromTriple
