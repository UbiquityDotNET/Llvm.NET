### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions
  commentId: T:Ubiquity.NET.Llvm.Values.ValueExtensions
  id: ValueExtensions
  parent: Ubiquity.NET.Llvm.Values
  children:
  - Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  langs:
  - csharp
  - vb
  name: ValueExtensions
  nameWithType: ValueExtensions
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ValueExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ValueExtensions
    path: ../src/Ubiquity.NET.Llvm/Values/ValueExtensions.cs
    startLine: 15
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Provides extension methods to <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref> that cannot be achieved as members of the class
  remarks: >-
    Using generic static extension methods allows for fluent coding while retaining the type of the "this" parameter.

    If these were members of the <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref> class then the only return type could be <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>,

    thus losing the original type and requiring a cast to get back to it.
  example: []
  syntax:
    content: public static class ValueExtensions
    content.vb: Public Module ValueExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  id: RegisterName``1(``0,System.String)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.ValueExtensions
  langs:
  - csharp
  - vb
  name: RegisterName<T>(T, string)
  nameWithType: ValueExtensions.RegisterName<T>(T, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<T>(T, string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ValueExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: RegisterName
    path: ../src/Ubiquity.NET.Llvm/Values/ValueExtensions.cs
    startLine: 41
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Sets the virtual register name for a value
  remarks: >-
    <p>Technically speaking only an <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref> can have register name

    information. However, since LLVM will perform constant folding in the <xref href="Ubiquity.NET.Llvm.Instructions.InstructionBuilder" data-throw-if-not-resolved="false"></xref>

    most of the methods in <xref href="Ubiquity.NET.Llvm.Instructions.InstructionBuilder" data-throw-if-not-resolved="false"></xref> return a <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref> rather

    than a more specific <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref>. Thus, without this extension method here,

    code would need to know ahead of time that an actual instruction would be produced then cast the result

    to an <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref> and then set the debug location. This makes the code rather

    ugly and tedious to manage. Placing this as a generic extension method ensures that the return type matches

    the original and no additional casting is needed, which would defeat the purpose of doing this. For

    <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref> types that are not instructions this does nothing. This allows for a simpler fluent

    style of programming where the actual type is retained even in cases where an <xref href="Ubiquity.NET.Llvm.Instructions.InstructionBuilder" data-throw-if-not-resolved="false"></xref>

    method will always return an actual instruction.</p>

    <p>Since the <xref href="Ubiquity.NET.Llvm.Values.Value.Name" data-throw-if-not-resolved="false"></xref> property is available on all <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>s this is slightly

    redundant. It is useful for maintaining the fluent style of coding along with expressing intent more clearly.

    (e.g. using this makes it expressly clear that the intent is to set the virtual register name and not the

    name of a local variable etc...) Using the fluent style allows a significant reduction in the number of

    overloaded methods in <xref href="Ubiquity.NET.Llvm.Instructions.InstructionBuilder" data-throw-if-not-resolved="false"></xref> to account for all variations with or without a name.

    </p>
  example: []
  syntax:
    content: 'public static T RegisterName<T>(this T value, string name) where T : Value'
    parameters:
    - id: value
      type: '{T}'
      description: Value to set register name for
    - id: name
      type: System.String
      description: Name for the virtual register the value represents
    typeParameters:
    - id: T
      description: Type of the value to set the name for
    return:
      type: '{T}'
      description: <code class="paramref">value</code> for fluent usage
    content.vb: Public Shared Function RegisterName(Of T As Value)(value As T, name As String) As T
  overload: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName*
  nameWithType.vb: ValueExtensions.RegisterName(Of T)(T, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of T)(T, String)
  name.vb: RegisterName(Of T)(T, String)
references:
- uid: Ubiquity.NET.Llvm.Values.Value
  commentId: T:Ubiquity.NET.Llvm.Values.Value
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Value.html
  name: Value
  nameWithType: Value
  fullName: Ubiquity.NET.Llvm.Values.Value
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.Instructions.Instruction
  commentId: T:Ubiquity.NET.Llvm.Instructions.Instruction
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.Instruction.html
  name: Instruction
  nameWithType: Instruction
  fullName: Ubiquity.NET.Llvm.Instructions.Instruction
- uid: Ubiquity.NET.Llvm.Instructions.InstructionBuilder
  commentId: T:Ubiquity.NET.Llvm.Instructions.InstructionBuilder
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.InstructionBuilder.html
  name: InstructionBuilder
  nameWithType: InstructionBuilder
  fullName: Ubiquity.NET.Llvm.Instructions.InstructionBuilder
- uid: Ubiquity.NET.Llvm.Values.Value.Name
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Name
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Name
  name: Name
  nameWithType: Value.Name
  fullName: Ubiquity.NET.Llvm.Values.Value.Name
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName*
  commentId: Overload:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName
  nameWithType: ValueExtensions.RegisterName
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.Instructions
  commentId: N:Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Instructions
  nameWithType: Ubiquity.NET.Llvm.Instructions
  fullName: Ubiquity.NET.Llvm.Instructions
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
- uid: T
  name: T
  nameWithType: T
  fullName: T
