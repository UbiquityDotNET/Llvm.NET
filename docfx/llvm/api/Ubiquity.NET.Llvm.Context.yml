### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Context
  commentId: T:Ubiquity.NET.Llvm.Context
  id: Context
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.Context.#ctor
  - Ubiquity.NET.Llvm.Context.BoolType
  - Ubiquity.NET.Llvm.Context.CreateAttribute(System.String)
  - Ubiquity.NET.Llvm.Context.CreateAttribute(System.String,System.String)
  - Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
  - Ubiquity.NET.Llvm.Context.CreateBasicBlock(System.String)
  - Ubiquity.NET.Llvm.Context.CreateBitcodeModule
  - Ubiquity.NET.Llvm.Context.CreateBitcodeModule(System.String)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.Boolean)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.Byte)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.Double)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.Int16)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.Int32)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.Int64)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.SByte)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.Single)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt16)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt32)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
  - Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt64)
  - Ubiquity.NET.Llvm.Context.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
  - Ubiquity.NET.Llvm.Context.CreateConstantString(System.String)
  - Ubiquity.NET.Llvm.Context.CreateConstantString(System.String,System.Boolean)
  - Ubiquity.NET.Llvm.Context.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  - Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  - Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  - Ubiquity.NET.Llvm.Context.CreateMDNode(System.String)
  - Ubiquity.NET.Llvm.Context.CreateMetadataString(System.String)
  - Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  - Ubiquity.NET.Llvm.Context.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  - Ubiquity.NET.Llvm.Context.CreateStructType(System.String)
  - Ubiquity.NET.Llvm.Context.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  - Ubiquity.NET.Llvm.Context.DiscardValueName
  - Ubiquity.NET.Llvm.Context.Dispose
  - Ubiquity.NET.Llvm.Context.DoubleType
  - Ubiquity.NET.Llvm.Context.Equals(System.Object)
  - Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.Context)
  - Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.IContext)
  - Ubiquity.NET.Llvm.Context.Float128Type
  - Ubiquity.NET.Llvm.Context.FloatType
  - Ubiquity.NET.Llvm.Context.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  - Ubiquity.NET.Llvm.Context.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  - Ubiquity.NET.Llvm.Context.GetHashCode
  - Ubiquity.NET.Llvm.Context.GetIntType(System.UInt32)
  - Ubiquity.NET.Llvm.Context.GetMDKindId(System.String)
  - Ubiquity.NET.Llvm.Context.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Context.HalfFloatType
  - Ubiquity.NET.Llvm.Context.Int128Type
  - Ubiquity.NET.Llvm.Context.Int16Type
  - Ubiquity.NET.Llvm.Context.Int32Type
  - Ubiquity.NET.Llvm.Context.Int64Type
  - Ubiquity.NET.Llvm.Context.Int8Type
  - Ubiquity.NET.Llvm.Context.IsDisposed
  - Ubiquity.NET.Llvm.Context.MetadataType
  - Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes
  - Ubiquity.NET.Llvm.Context.OpenBinary(System.String)
  - Ubiquity.NET.Llvm.Context.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
  - Ubiquity.NET.Llvm.Context.PpcFloat128Type
  - Ubiquity.NET.Llvm.Context.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  - Ubiquity.NET.Llvm.Context.TokenType
  - Ubiquity.NET.Llvm.Context.VoidType
  - Ubiquity.NET.Llvm.Context.X86Float80Type
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: Context
  fullName: Ubiquity.NET.Llvm.Context
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Context
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 28
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Encapsulates an LLVM context
  remarks: >-
    <p>A context in LLVM is a container for interning (LLVM refers to this as "uniqueing") various types

    and values in the system. This allows running multiple LLVM tool transforms etc.. on different threads

    without causing them to collide namespaces and types even if they use the same name (e.g. module one

    may have a type Foo, and so does module two but they are completely distinct from each other)</p>


    <p>LLVM Debug information is ultimately all parented to a top level <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompileUnit" data-throw-if-not-resolved="false"></xref> as

    the scope, and a compilation unit is bound to a <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref>, even though, technically

    the types are owned by a Context. Thus to keep things simpler and help make working with debug information

    easier. Ubiquity.NET.Llvm encapsulates the native type and the debug type in separate classes that are

    instances of the <xref href="Ubiquity.NET.Llvm.DebugInfo.IDebugType%602" data-throw-if-not-resolved="false"></xref> interface</p>


    <div class="NOTE"><h5>note</h5><p>It is important to be aware of the fact that a Context is not thread safe. The context

    itself and the object instances it owns are intended for use by a single thread only. Accessing and

    manipulating LLVM objects from multiple threads may lead to race conditions corrupted state and any number

    of other undefined issues.</p></div>
  example: []
  syntax:
    content: 'public sealed class Context : IContext, IDisposable, IEquatable<IContext>, IEquatable<Context>'
    content.vb: Public NotInheritable Class Context Implements IContext, IDisposable, IEquatable(Of IContext), IEquatable(Of Context)
  inheritance:
  - System.Object
  implements:
  - Ubiquity.NET.Llvm.IContext
  - System.IDisposable
  - System.IEquatable{Ubiquity.NET.Llvm.IContext}
  - System.IEquatable{Ubiquity.NET.Llvm.Context}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.IContext)
  commentId: M:Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.IContext)
  id: Equals(Ubiquity.NET.Llvm.IContext)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Equals(IContext?)
  nameWithType: Context.Equals(IContext?)
  fullName: Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.IContext?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 37
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(IContext? other)
    parameters:
    - id: other
      type: Ubiquity.NET.Llvm.IContext
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As IContext) As Boolean
  overload: Ubiquity.NET.Llvm.Context.Equals*
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.IContext}.Equals(Ubiquity.NET.Llvm.IContext)
  nameWithType.vb: Context.Equals(IContext)
  fullName.vb: Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.IContext)
  name.vb: Equals(IContext)
- uid: Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.Context)
  commentId: M:Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.Context)
  id: Equals(Ubiquity.NET.Llvm.Context)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Equals(Context?)
  nameWithType: Context.Equals(Context?)
  fullName: Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.Context?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 40
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Context? other)
    parameters:
    - id: other
      type: Ubiquity.NET.Llvm.Context
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Context) As Boolean
  overload: Ubiquity.NET.Llvm.Context.Equals*
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Context}.Equals(Ubiquity.NET.Llvm.Context)
  nameWithType.vb: Context.Equals(Context)
  fullName.vb: Ubiquity.NET.Llvm.Context.Equals(Ubiquity.NET.Llvm.Context)
  name.vb: Equals(Context)
- uid: Ubiquity.NET.Llvm.Context.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.Context.Equals(System.Object)
  id: Equals(System.Object)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Context.Equals(object?)
  fullName: Ubiquity.NET.Llvm.Context.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 43
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Ubiquity.NET.Llvm.Context.Equals*
  nameWithType.vb: Context.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.Context.Equals(Object)
  name.vb: Equals(Object)
- uid: Ubiquity.NET.Llvm.Context.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.Context.GetHashCode
  id: GetHashCode
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Context.GetHashCode()
  fullName: Ubiquity.NET.Llvm.Context.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetHashCode
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 48
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Ubiquity.NET.Llvm.Context.GetHashCode*
- uid: Ubiquity.NET.Llvm.Context.#ctor
  commentId: M:Ubiquity.NET.Llvm.Context.#ctor
  id: '#ctor'
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Context()
  nameWithType: Context.Context()
  fullName: Ubiquity.NET.Llvm.Context.Context()
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 68
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.Context" data-throw-if-not-resolved="false"></xref> class.
  remarks: >-
    This creates an underlying native LLVM context handle and wraps it in this instance.

    Callers should call <xref href="Ubiquity.NET.Llvm.Context.Dispose" data-throw-if-not-resolved="false"></xref> to release the native allocation as early

    as possible. Anything owned by this context is destroyed by the call to <xref href="Ubiquity.NET.Llvm.Context.Dispose" data-throw-if-not-resolved="false"></xref>,

    thus any references to those items are invalid once the context is destroyed. This is

    particularly relevant for any IDisposable items (like a <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref>). If those

    are left to linger at the mercy of the garbage collector/finalization then problems

    can happen. Since .NET uses a non-deterministic finalization design there is no guarantee

    that an element is finalized **BEFORE** the container that owns it. Thus if the finalizer

    destroys the container and then attempts to destroy the element - BOOM access violation

    and app crash occur. The location of such a crash is well after the problem occurred.

    This is a VERY difficult situation to debug. (Though in a debug build the call stack of

    the creator of any owned handle is captured to make it easier to find the cause of such

    things.) <xref href="Ubiquity.NET.Llvm.Interop.GlobalHandleBase" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Context()
    content.vb: Public Sub New()
  overload: Ubiquity.NET.Llvm.Context.#ctor*
  nameWithType.vb: Context.New()
  fullName.vb: Ubiquity.NET.Llvm.Context.New()
  name.vb: New()
- uid: Ubiquity.NET.Llvm.Context.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  commentId: M:Ubiquity.NET.Llvm.Context.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  id: SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: SetDiagnosticHandler(DiagnosticInfoCallbackAction)
  nameWithType: Context.SetDiagnosticHandler(DiagnosticInfoCallbackAction)
  fullName: Ubiquity.NET.Llvm.Context.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SetDiagnosticHandler
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 79
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Set a custom diagnostic handler
  example: []
  syntax:
    content: public void SetDiagnosticHandler(DiagnosticInfoCallbackAction handler)
    parameters:
    - id: handler
      type: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction
      description: handler
    content.vb: Public Sub SetDiagnosticHandler(handler As DiagnosticInfoCallbackAction)
  overload: Ubiquity.NET.Llvm.Context.SetDiagnosticHandler*
  implements:
  - Ubiquity.NET.Llvm.IContext.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
- uid: Ubiquity.NET.Llvm.Context.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Context.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  id: GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: GetPointerTypeFor(ITypeRef)
  nameWithType: Context.GetPointerTypeFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Context.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetPointerTypeFor
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 82
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Get a type that is a pointer to a value of a given type
  example: []
  syntax:
    content: public IPointerType GetPointerTypeFor(ITypeRef elementType)
    parameters:
    - id: elementType
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Type of value the pointer points to
    return:
      type: Ubiquity.NET.Llvm.Types.IPointerType
      description: <xref href="Ubiquity.NET.Llvm.Types.IPointerType" data-throw-if-not-resolved="false"></xref> for a pointer that references a value of type <code class="paramref">elementType</code>
    content.vb: Public Function GetPointerTypeFor(elementType As ITypeRef) As IPointerType
  overload: Ubiquity.NET.Llvm.Context.GetPointerTypeFor*
  implements:
  - Ubiquity.NET.Llvm.IContext.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
- uid: Ubiquity.NET.Llvm.Context.GetIntType(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.Context.GetIntType(System.UInt32)
  id: GetIntType(System.UInt32)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: GetIntType(uint)
  nameWithType: Context.GetIntType(uint)
  fullName: Ubiquity.NET.Llvm.Context.GetIntType(uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetIntType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 85
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Get's an LLVM integer type of arbitrary bit width
  remarks: >-
    For standard integer bit widths (e.g. 1,8,16,32,64) this will return

    the same type as the corresponding specialized property.

    (e.g. GetIntType(1) is the same as <xref href="Ubiquity.NET.Llvm.IContext.BoolType" data-throw-if-not-resolved="false"></xref>,
     GetIntType(16) is the same as <xref href="Ubiquity.NET.Llvm.IContext.Int16Type" data-throw-if-not-resolved="false"></xref>, etc... )
  example: []
  syntax:
    content: public ITypeRef GetIntType(uint bitWidth)
    parameters:
    - id: bitWidth
      type: System.UInt32
      description: Width of the integer type in bits
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Integer <xref href="Ubiquity.NET.Llvm.Types.ITypeRef" data-throw-if-not-resolved="false"></xref> for the specified width
    content.vb: Public Function GetIntType(bitWidth As UInteger) As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.GetIntType*
  implements:
  - Ubiquity.NET.Llvm.IContext.GetIntType(System.UInt32)
  nameWithType.vb: Context.GetIntType(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.Context.GetIntType(UInteger)
  name.vb: GetIntType(UInteger)
- uid: Ubiquity.NET.Llvm.Context.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.Context.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  id: GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: GetFunctionType(ITypeRef, params IEnumerable<ITypeRef>)
  nameWithType: Context.GetFunctionType(ITypeRef, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.Context.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetFunctionType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 88
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Get an LLVM Function type (e.g. signature)
  example: []
  syntax:
    content: public IFunctionType GetFunctionType(ITypeRef returnType, params IEnumerable<ITypeRef> args)
    parameters:
    - id: returnType
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Return type of the function
    - id: args
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef}
      description: Potentially empty set of function argument types
    return:
      type: Ubiquity.NET.Llvm.Types.IFunctionType
      description: Signature type for the specified signature
    content.vb: Public Function GetFunctionType(returnType As ITypeRef, args As IEnumerable(Of ITypeRef)) As IFunctionType
  overload: Ubiquity.NET.Llvm.Context.GetFunctionType*
  implements:
  - Ubiquity.NET.Llvm.IContext.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  nameWithType.vb: Context.GetFunctionType(ITypeRef, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.Context.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: GetFunctionType(ITypeRef, IEnumerable(Of ITypeRef))
- uid: Ubiquity.NET.Llvm.Context.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.Context.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  id: GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: GetFunctionType(bool, ITypeRef, params IEnumerable<ITypeRef>)
  nameWithType: Context.GetFunctionType(bool, ITypeRef, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.Context.GetFunctionType(bool, Ubiquity.NET.Llvm.Types.ITypeRef, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetFunctionType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 91
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Get an LLVM Function type (e.g. signature)
  example: []
  syntax:
    content: public IFunctionType GetFunctionType(bool isVarArgs, ITypeRef returnType, params IEnumerable<ITypeRef> args)
    parameters:
    - id: isVarArgs
      type: System.Boolean
      description: Flag to indicate if the method supports C/C++ style VarArgs
    - id: returnType
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Return type of the function
    - id: args
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef}
      description: Potentially empty set of function argument types
    return:
      type: Ubiquity.NET.Llvm.Types.IFunctionType
      description: Signature type for the specified signature
    content.vb: Public Function GetFunctionType(isVarArgs As Boolean, returnType As ITypeRef, args As IEnumerable(Of ITypeRef)) As IFunctionType
  overload: Ubiquity.NET.Llvm.Context.GetFunctionType*
  implements:
  - Ubiquity.NET.Llvm.IContext.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  nameWithType.vb: Context.GetFunctionType(Boolean, ITypeRef, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.Context.GetFunctionType(Boolean, Ubiquity.NET.Llvm.Types.ITypeRef, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: GetFunctionType(Boolean, ITypeRef, IEnumerable(Of ITypeRef))
- uid: Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  commentId: M:Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  id: CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateFunctionType(ref readonly DIBuilder, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  nameWithType: Context.CreateFunctionType(ref readonly DIBuilder, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  fullName: Ubiquity.NET.Llvm.Context.CreateFunctionType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateFunctionType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 94
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a FunctionType with Debug information
  example: []
  syntax:
    content: public DebugFunctionType CreateFunctionType(ref readonly DIBuilder diBuilder, IDebugType<ITypeRef, DIType> retType, params IEnumerable<IDebugType<ITypeRef, DIType>> argTypes)
    parameters:
    - id: diBuilder
      type: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIBuilder" data-throw-if-not-resolved="false"></xref>to use to create the debug information
    - id: retType
      type: Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}
      description: Return type of the function
    - id: argTypes
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}}
      description: Argument types of the function
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugFunctionType
      description: Function signature
    content.vb: Public Function CreateFunctionType(diBuilder As DIBuilder, retType As IDebugType(Of ITypeRef, DIType), argTypes As IEnumerable(Of IDebugType(Of ITypeRef, DIType))) As DebugFunctionType
  overload: Ubiquity.NET.Llvm.Context.CreateFunctionType*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  nameWithType.vb: Context.CreateFunctionType(DIBuilder, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType), System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType)))
  name.vb: CreateFunctionType(DIBuilder, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
- uid: Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  commentId: M:Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  id: CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateFunctionType(ref readonly DIBuilder, bool, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  nameWithType: Context.CreateFunctionType(ref readonly DIBuilder, bool, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  fullName: Ubiquity.NET.Llvm.Context.CreateFunctionType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, bool, Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateFunctionType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 97
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a FunctionType with Debug information
  example: []
  syntax:
    content: public DebugFunctionType CreateFunctionType(ref readonly DIBuilder diBuilder, bool isVarArg, IDebugType<ITypeRef, DIType> retType, params IEnumerable<IDebugType<ITypeRef, DIType>> argTypes)
    parameters:
    - id: diBuilder
      type: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIBuilder" data-throw-if-not-resolved="false"></xref>to use to create the debug information
    - id: isVarArg
      type: System.Boolean
      description: Flag to indicate if this function is variadic
    - id: retType
      type: Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}
      description: Return type of the function
    - id: argTypes
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}}
      description: Argument types of the function
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugFunctionType
      description: Function signature
    content.vb: Public Function CreateFunctionType(diBuilder As DIBuilder, isVarArg As Boolean, retType As IDebugType(Of ITypeRef, DIType), argTypes As IEnumerable(Of IDebugType(Of ITypeRef, DIType))) As DebugFunctionType
  overload: Ubiquity.NET.Llvm.Context.CreateFunctionType*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  nameWithType.vb: Context.CreateFunctionType(DIBuilder, Boolean, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, Boolean, Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType), System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType)))
  name.vb: CreateFunctionType(DIBuilder, Boolean, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
- uid: Ubiquity.NET.Llvm.Context.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  id: CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstantStruct(bool, params IEnumerable<Constant>)
  nameWithType: Context.CreateConstantStruct(bool, params IEnumerable<Constant>)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstantStruct(bool, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.Constant>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstantStruct
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 100
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a constant structure from a set of values
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The actual concrete return type depends on the parameters provided and will be one of the following:

    <table><thead><tr><th class="term"><xref href="Ubiquity.NET.Llvm.Values.Constant" data-throw-if-not-resolved="false"></xref> derived type</th><th class="description">Description</th></tr></thead><tbody><tr><td class="term">ConstantAggregateZero</td><td class="description">If all the member values are zero constants</td></tr><tr><td class="term">UndefValue</td><td class="description">If all the member values are UndefValue</td></tr><tr><td class="term">ConstantStruct</td><td class="description">All other cases</td></tr></tbody></table>

    </p></div>
  example: []
  syntax:
    content: public Constant CreateConstantStruct(bool packed, params IEnumerable<Constant> values)
    parameters:
    - id: packed
      type: System.Boolean
      description: Flag to indicate if the structure is packed and no alignment should be applied to the members
    - id: values
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant}
      description: Set of values to use in forming the structure
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: Newly created <xref href="Ubiquity.NET.Llvm.Values.Constant" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateConstantStruct(packed As Boolean, values As IEnumerable(Of Constant)) As Constant
  overload: Ubiquity.NET.Llvm.Context.CreateConstantStruct*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  nameWithType.vb: Context.CreateConstantStruct(Boolean, IEnumerable(Of Constant))
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstantStruct(Boolean, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.Constant))
  name.vb: CreateConstantStruct(Boolean, IEnumerable(Of Constant))
- uid: Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  commentId: M:Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  id: CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateNamedConstantStruct(IStructType, params IEnumerable<Constant>)
  nameWithType: Context.CreateNamedConstantStruct(IStructType, params IEnumerable<Constant>)
  fullName: Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.Constant>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateNamedConstantStruct
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 103
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a constant instance of a specified structure type from a set of values
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>The actual concrete return type depends on the parameters provided and will be one of the following:

    <table><thead><tr><th class="term"><xref href="Ubiquity.NET.Llvm.Values.Constant" data-throw-if-not-resolved="false"></xref> derived type</th><th class="description">Description</th></tr></thead><tbody><tr><td class="term">ConstantAggregateZero</td><td class="description">If all the member values are zero constants</td></tr><tr><td class="term">UndefValue</td><td class="description">If all the member values are UndefValue</td></tr><tr><td class="term">ConstantStruct</td><td class="description">All other cases</td></tr></tbody></table>

    </p></div>
  example: []
  syntax:
    content: public Constant CreateNamedConstantStruct(IStructType type, params IEnumerable<Constant> values)
    parameters:
    - id: type
      type: Ubiquity.NET.Llvm.Types.IStructType
      description: Type of the structure to create
    - id: values
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant}
      description: Set of values to use in forming the structure
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: Newly created <xref href="Ubiquity.NET.Llvm.Values.Constant" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateNamedConstantStruct(type As IStructType, values As IEnumerable(Of Constant)) As Constant
  overload: Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  nameWithType.vb: Context.CreateNamedConstantStruct(IStructType, IEnumerable(Of Constant))
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.Constant))
  name.vb: CreateNamedConstantStruct(IStructType, IEnumerable(Of Constant))
- uid: Ubiquity.NET.Llvm.Context.CreateStructType(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateStructType(System.String)
  id: CreateStructType(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateStructType(string)
  nameWithType: Context.CreateStructType(string)
  fullName: Ubiquity.NET.Llvm.Context.CreateStructType(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateStructType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 106
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Create an opaque structure type (e.g. a forward reference)
  remarks: >-
    This method creates an opaque type. The <xref href="Ubiquity.NET.Llvm.Types.IStructType.SetBody(System.Boolean%2cSystem.Collections.Generic.IEnumerable%7bUbiquity.NET.Llvm.Types.ITypeRef%7d)" data-throw-if-not-resolved="false"></xref> method provides a means

    to add a body, including indication of packed status, to an opaque type at a later time if the

    details of the body are required. (If only pointers to the type are required then the body isn't

    required)
  example: []
  syntax:
    content: public IStructType CreateStructType(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    return:
      type: Ubiquity.NET.Llvm.Types.IStructType
      description: New type
    content.vb: Public Function CreateStructType(name As String) As IStructType
  overload: Ubiquity.NET.Llvm.Context.CreateStructType*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateStructType(System.String)
  nameWithType.vb: Context.CreateStructType(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateStructType(String)
  name.vb: CreateStructType(String)
- uid: Ubiquity.NET.Llvm.Context.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.Context.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  id: CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateStructType(bool, params IEnumerable<ITypeRef>)
  nameWithType: Context.CreateStructType(bool, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.Context.CreateStructType(bool, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateStructType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 109
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Create an anonymous structure type (e.g. Tuple)
  example: []
  syntax:
    content: public IStructType CreateStructType(bool packed, params IEnumerable<ITypeRef> elements)
    parameters:
    - id: packed
      type: System.Boolean
      description: Flag to indicate if the structure is "packed"
    - id: elements
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef}
      description: Types of the fields of the structure
    return:
      type: Ubiquity.NET.Llvm.Types.IStructType
      description: <xref href="Ubiquity.NET.Llvm.Types.IStructType" data-throw-if-not-resolved="false"></xref> with the specified body defined.
    content.vb: Public Function CreateStructType(packed As Boolean, elements As IEnumerable(Of ITypeRef)) As IStructType
  overload: Ubiquity.NET.Llvm.Context.CreateStructType*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  nameWithType.vb: Context.CreateStructType(Boolean, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateStructType(Boolean, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: CreateStructType(Boolean, IEnumerable(Of ITypeRef))
- uid: Ubiquity.NET.Llvm.Context.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.Context.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  id: CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateStructType(string, bool, params IEnumerable<ITypeRef>)
  nameWithType: Context.CreateStructType(string, bool, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.Context.CreateStructType(string, bool, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateStructType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 112
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new structure type in this <xref href="Ubiquity.NET.Llvm.ContextAlias" data-throw-if-not-resolved="false"></xref>
  remarks: If the elements argument list is empty then a complete 0 sized struct is created
  example: []
  syntax:
    content: public IStructType CreateStructType(string name, bool packed, params IEnumerable<ITypeRef> elements)
    parameters:
    - id: name
      type: System.String
      description: Name of the structure (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: packed
      type: System.Boolean
      description: Flag indicating if the structure is packed
    - id: elements
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef}
      description: Types for the structures elements in layout order
    return:
      type: Ubiquity.NET.Llvm.Types.IStructType
      description: <xref href="Ubiquity.NET.Llvm.Types.IStructType" data-throw-if-not-resolved="false"></xref> with the specified body defined.
    content.vb: Public Function CreateStructType(name As String, packed As Boolean, elements As IEnumerable(Of ITypeRef)) As IStructType
  overload: Ubiquity.NET.Llvm.Context.CreateStructType*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  nameWithType.vb: Context.CreateStructType(String, Boolean, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateStructType(String, Boolean, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: CreateStructType(String, Boolean, IEnumerable(Of ITypeRef))
- uid: Ubiquity.NET.Llvm.Context.CreateMetadataString(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateMetadataString(System.String)
  id: CreateMetadataString(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateMetadataString(string?)
  nameWithType: Context.CreateMetadataString(string?)
  fullName: Ubiquity.NET.Llvm.Context.CreateMetadataString(string?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateMetadataString
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 115
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a metadata string from the given string
  remarks: >-
    if <code class="paramref">value</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> then the result

    represents an empty string.
  example: []
  syntax:
    content: public MDString CreateMetadataString(string? value)
    parameters:
    - id: value
      type: System.String
      description: string to create as metadata
    return:
      type: Ubiquity.NET.Llvm.Metadata.MDString
      description: new metadata string
    content.vb: Public Function CreateMetadataString(value As String) As MDString
  overload: Ubiquity.NET.Llvm.Context.CreateMetadataString*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateMetadataString(System.String)
  nameWithType.vb: Context.CreateMetadataString(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateMetadataString(String)
  name.vb: CreateMetadataString(String)
- uid: Ubiquity.NET.Llvm.Context.CreateMDNode(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateMDNode(System.String)
  id: CreateMDNode(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateMDNode(string)
  nameWithType: Context.CreateMDNode(string)
  fullName: Ubiquity.NET.Llvm.Context.CreateMDNode(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateMDNode
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 118
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Create an <xref href="Ubiquity.NET.Llvm.Metadata.MDNode" data-throw-if-not-resolved="false"></xref> from a string
  example: []
  syntax:
    content: public MDNode CreateMDNode(string value)
    parameters:
    - id: value
      type: System.String
      description: String value
    return:
      type: Ubiquity.NET.Llvm.Metadata.MDNode
      description: New node with the string as the first element of the <xref href="Ubiquity.NET.Llvm.Metadata.MDNode.Operands" data-throw-if-not-resolved="false"></xref> property (as an MDString)
    content.vb: Public Function CreateMDNode(value As String) As MDNode
  overload: Ubiquity.NET.Llvm.Context.CreateMDNode*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateMDNode(System.String)
  nameWithType.vb: Context.CreateMDNode(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateMDNode(String)
  name.vb: CreateMDNode(String)
- uid: Ubiquity.NET.Llvm.Context.CreateConstantString(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstantString(System.String)
  id: CreateConstantString(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstantString(string)
  nameWithType: Context.CreateConstantString(string)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstantString(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstantString
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 121
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Create a constant data string value
  remarks: >-
    This converts the string to ANSI form and creates an LLVM constant array of i8

    characters for the data with a terminating null character. To control the enforcement

    of a terminating null character, use the <xref href="Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    overload to specify the intended behavior.
  example: []
  syntax:
    content: public ConstantDataArray CreateConstantString(string value)
    parameters:
    - id: value
      type: System.String
      description: string to convert into an LLVM constant value
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantDataArray
      description: new <xref href="Ubiquity.NET.Llvm.Values.ConstantDataArray" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateConstantString(value As String) As ConstantDataArray
  overload: Ubiquity.NET.Llvm.Context.CreateConstantString*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String)
  nameWithType.vb: Context.CreateConstantString(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstantString(String)
  name.vb: CreateConstantString(String)
- uid: Ubiquity.NET.Llvm.Context.CreateConstantString(System.String,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstantString(System.String,System.Boolean)
  id: CreateConstantString(System.String,System.Boolean)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstantString(string, bool)
  nameWithType: Context.CreateConstantString(string, bool)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstantString(string, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstantString
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 124
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Create a constant data string value
  remarks: >-
    This converts the string to ANSI form and creates an LLVM constant array of i8

    characters for the data. Enforcement of a null terminator depends on the value of <code class="paramref">nullTerminate</code>
  example: []
  syntax:
    content: public ConstantDataArray CreateConstantString(string value, bool nullTerminate)
    parameters:
    - id: value
      type: System.String
      description: string to convert into an LLVM constant value
    - id: nullTerminate
      type: System.Boolean
      description: flag to indicate if the string should include a null terminator
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantDataArray
      description: new <xref href="Ubiquity.NET.Llvm.Values.ConstantDataArray" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateConstantString(value As String, nullTerminate As Boolean) As ConstantDataArray
  overload: Ubiquity.NET.Llvm.Context.CreateConstantString*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String,System.Boolean)
  nameWithType.vb: Context.CreateConstantString(String, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstantString(String, Boolean)
  name.vb: CreateConstantString(String, Boolean)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.Boolean)
  id: CreateConstant(System.Boolean)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(bool)
  nameWithType: Context.CreateConstant(bool)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 127
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 1
  example: []
  syntax:
    content: public ConstantInt CreateConstant(bool constValue)
    parameters:
    - id: constValue
      type: System.Boolean
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As Boolean) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.Boolean)
  nameWithType.vb: Context.CreateConstant(Boolean)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Boolean)
  name.vb: CreateConstant(Boolean)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.Byte)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.Byte)
  id: CreateConstant(System.Byte)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(byte)
  nameWithType: Context.CreateConstant(byte)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(byte)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 130
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 8
  example: []
  syntax:
    content: public ConstantInt CreateConstant(byte constValue)
    parameters:
    - id: constValue
      type: System.Byte
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As Byte) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.Byte)
  nameWithType.vb: Context.CreateConstant(Byte)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Byte)
  name.vb: CreateConstant(Byte)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.SByte)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.SByte)
  id: CreateConstant(System.SByte)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(sbyte)
  nameWithType: Context.CreateConstant(sbyte)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(sbyte)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 133
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 8
  example: []
  syntax:
    content: public Constant CreateConstant(sbyte constValue)
    parameters:
    - id: constValue
      type: System.SByte
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As SByte) As Constant
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.SByte)
  nameWithType.vb: Context.CreateConstant(SByte)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(SByte)
  name.vb: CreateConstant(SByte)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.Int16)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.Int16)
  id: CreateConstant(System.Int16)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(short)
  nameWithType: Context.CreateConstant(short)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(short)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 136
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 16
  example: []
  syntax:
    content: public ConstantInt CreateConstant(short constValue)
    parameters:
    - id: constValue
      type: System.Int16
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As Short) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int16)
  nameWithType.vb: Context.CreateConstant(Short)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Short)
  name.vb: CreateConstant(Short)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt16)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt16)
  id: CreateConstant(System.UInt16)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(ushort)
  nameWithType: Context.CreateConstant(ushort)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(ushort)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 139
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 16
  example: []
  syntax:
    content: public ConstantInt CreateConstant(ushort constValue)
    parameters:
    - id: constValue
      type: System.UInt16
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As UShort) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt16)
  nameWithType.vb: Context.CreateConstant(UShort)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(UShort)
  name.vb: CreateConstant(UShort)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.Int32)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.Int32)
  id: CreateConstant(System.Int32)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(int)
  nameWithType: Context.CreateConstant(int)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(int)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 142
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 32
  example: []
  syntax:
    content: public ConstantInt CreateConstant(int constValue)
    parameters:
    - id: constValue
      type: System.Int32
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As Integer) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int32)
  nameWithType.vb: Context.CreateConstant(Integer)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Integer)
  name.vb: CreateConstant(Integer)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt32)
  id: CreateConstant(System.UInt32)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(uint)
  nameWithType: Context.CreateConstant(uint)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 145
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 32
  example: []
  syntax:
    content: public ConstantInt CreateConstant(uint constValue)
    parameters:
    - id: constValue
      type: System.UInt32
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As UInteger) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32)
  nameWithType.vb: Context.CreateConstant(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(UInteger)
  name.vb: CreateConstant(UInteger)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.Int64)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.Int64)
  id: CreateConstant(System.Int64)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(long)
  nameWithType: Context.CreateConstant(long)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(long)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 148
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 64
  example: []
  syntax:
    content: public ConstantInt CreateConstant(long constValue)
    parameters:
    - id: constValue
      type: System.Int64
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As Long) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int64)
  nameWithType.vb: Context.CreateConstant(Long)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Long)
  name.vb: CreateConstant(Long)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt64)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt64)
  id: CreateConstant(System.UInt64)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(ulong)
  nameWithType: Context.CreateConstant(ulong)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(ulong)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 151
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 64
  example: []
  syntax:
    content: public ConstantInt CreateConstant(ulong constValue)
    parameters:
    - id: constValue
      type: System.UInt64
      description: Value for the constant
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(constValue As ULong) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt64)
  nameWithType.vb: Context.CreateConstant(ULong)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(ULong)
  name.vb: CreateConstant(ULong)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
  id: CreateConstant(System.UInt32,System.UInt64,System.Boolean)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(uint, ulong, bool)
  nameWithType: Context.CreateConstant(uint, ulong, bool)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(uint, ulong, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 154
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> with a bit length of 64
  example: []
  syntax:
    content: public ConstantInt CreateConstant(uint bitWidth, ulong constValue, bool signExtend)
    parameters:
    - id: bitWidth
      type: System.UInt32
      description: Bit width of the integer
    - id: constValue
      type: System.UInt64
      description: Value for the constant
    - id: signExtend
      type: System.Boolean
      description: flag to indicate if the constant value should be sign extended
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref> representing the value
    content.vb: Public Function CreateConstant(bitWidth As UInteger, constValue As ULong, signExtend As Boolean) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
  nameWithType.vb: Context.CreateConstant(UInteger, ULong, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(UInteger, ULong, Boolean)
  name.vb: CreateConstant(UInteger, ULong, Boolean)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
  id: CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(ITypeRef, ulong, bool)
  nameWithType: Context.CreateConstant(ITypeRef, ulong, bool)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef, ulong, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 157
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Create a constant value of the specified integer type
  example: []
  syntax:
    content: public ConstantInt CreateConstant(ITypeRef intType, ulong constValue, bool signExtend)
    parameters:
    - id: intType
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Integer type
    - id: constValue
      type: System.UInt64
      description: value
    - id: signExtend
      type: System.Boolean
      description: flag to indicate if <code class="paramref">constValue</code> is sign extended
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantInt
      description: Constant for the specified value
    content.vb: Public Function CreateConstant(intType As ITypeRef, constValue As ULong, signExtend As Boolean) As ConstantInt
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
  nameWithType.vb: Context.CreateConstant(ITypeRef, ULong, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef, ULong, Boolean)
  name.vb: CreateConstant(ITypeRef, ULong, Boolean)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.Single)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.Single)
  id: CreateConstant(System.Single)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(float)
  nameWithType: Context.CreateConstant(float)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(float)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 160
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a constant floating point value for a given value
  example: []
  syntax:
    content: public ConstantFP CreateConstant(float constValue)
    parameters:
    - id: constValue
      type: System.Single
      description: Value to make into a <xref href="Ubiquity.NET.Llvm.Values.ConstantFP" data-throw-if-not-resolved="false"></xref>
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantFP
      description: Constant value
    content.vb: Public Function CreateConstant(constValue As Single) As ConstantFP
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.Single)
  nameWithType.vb: Context.CreateConstant(Single)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Single)
  name.vb: CreateConstant(Single)
- uid: Ubiquity.NET.Llvm.Context.CreateConstant(System.Double)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateConstant(System.Double)
  id: CreateConstant(System.Double)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateConstant(double)
  nameWithType: Context.CreateConstant(double)
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant(double)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstant
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 163
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a constant floating point value for a given value
  example: []
  syntax:
    content: public ConstantFP CreateConstant(double constValue)
    parameters:
    - id: constValue
      type: System.Double
      description: Value to make into a <xref href="Ubiquity.NET.Llvm.Values.ConstantFP" data-throw-if-not-resolved="false"></xref>
    return:
      type: Ubiquity.NET.Llvm.Values.ConstantFP
      description: Constant value
    content.vb: Public Function CreateConstant(constValue As Double) As ConstantFP
  overload: Ubiquity.NET.Llvm.Context.CreateConstant*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateConstant(System.Double)
  nameWithType.vb: Context.CreateConstant(Double)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateConstant(Double)
  name.vb: CreateConstant(Double)
- uid: Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateAttribute(AttributeKind)
  nameWithType: Context.CreateAttribute(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateAttribute
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 166
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a simple boolean attribute
  example: []
  syntax:
    content: public AttributeValue CreateAttribute(AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: Id of attribute
    return:
      type: Ubiquity.NET.Llvm.Values.AttributeValue
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref> with the specified Id set
    content.vb: Public Function CreateAttribute(kind As AttributeKind) As AttributeValue
  overload: Ubiquity.NET.Llvm.Context.CreateAttribute*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
- uid: Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
  id: CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateAttribute(AttributeKind, ulong)
  nameWithType: Context.CreateAttribute(AttributeKind, ulong)
  fullName: Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind, ulong)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateAttribute
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 169
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates an attribute with an integer value parameter
  remarks: >-
    <p>Not all attributes support a value and those that do don't all support

    a full 64bit value. The following table provides the kinds of attributes

    accepting a value and the allowed size of the values.</p>

    <table><thead><tr><th class="term"><xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref></th><th class="term">Bit Length</th></tr></thead><tbody><tr><td class="term"><xref href="Ubiquity.NET.Llvm.Values.AttributeKind.Alignment" data-throw-if-not-resolved="false"></xref></td><td class="term">32</td></tr><tr><td class="term"><xref href="Ubiquity.NET.Llvm.Values.AttributeKind.StackAlignment" data-throw-if-not-resolved="false"></xref></td><td class="term">32</td></tr><tr><td class="term"><xref href="Ubiquity.NET.Llvm.Values.AttributeKind.Dereferenceable" data-throw-if-not-resolved="false"></xref></td><td class="term">64</td></tr><tr><td class="term"><xref href="Ubiquity.NET.Llvm.Values.AttributeKind.DereferenceableOrNull" data-throw-if-not-resolved="false"></xref></td><td class="term">64</td></tr></tbody></table>
  example: []
  syntax:
    content: public AttributeValue CreateAttribute(AttributeKind kind, ulong value)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: The kind of attribute
    - id: value
      type: System.UInt64
      description: Value for the attribute
    return:
      type: Ubiquity.NET.Llvm.Values.AttributeValue
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref> with the specified kind and value
    content.vb: Public Function CreateAttribute(kind As AttributeKind, value As ULong) As AttributeValue
  overload: Ubiquity.NET.Llvm.Context.CreateAttribute*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
  nameWithType.vb: Context.CreateAttribute(AttributeKind, ULong)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind, ULong)
  name.vb: CreateAttribute(AttributeKind, ULong)
- uid: Ubiquity.NET.Llvm.Context.CreateAttribute(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateAttribute(System.String)
  id: CreateAttribute(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateAttribute(string)
  nameWithType: Context.CreateAttribute(string)
  fullName: Ubiquity.NET.Llvm.Context.CreateAttribute(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateAttribute
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 172
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Adds a valueless named attribute
  example: []
  syntax:
    content: public AttributeValue CreateAttribute(string name)
    parameters:
    - id: name
      type: System.String
      description: Attribute name
    return:
      type: Ubiquity.NET.Llvm.Values.AttributeValue
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref> with the specified name
    content.vb: Public Function CreateAttribute(name As String) As AttributeValue
  overload: Ubiquity.NET.Llvm.Context.CreateAttribute*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String)
  nameWithType.vb: Context.CreateAttribute(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateAttribute(String)
  name.vb: CreateAttribute(String)
- uid: Ubiquity.NET.Llvm.Context.CreateAttribute(System.String,System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateAttribute(System.String,System.String)
  id: CreateAttribute(System.String,System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateAttribute(string, string)
  nameWithType: Context.CreateAttribute(string, string)
  fullName: Ubiquity.NET.Llvm.Context.CreateAttribute(string, string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateAttribute
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 175
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Adds a Target specific named attribute with value
  example: []
  syntax:
    content: public AttributeValue CreateAttribute(string name, string value)
    parameters:
    - id: name
      type: System.String
      description: Name of the attribute
    - id: value
      type: System.String
      description: Value of the attribute
    return:
      type: Ubiquity.NET.Llvm.Values.AttributeValue
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref> with the specified name and value
    content.vb: Public Function CreateAttribute(name As String, value As String) As AttributeValue
  overload: Ubiquity.NET.Llvm.Context.CreateAttribute*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String,System.String)
  nameWithType.vb: Context.CreateAttribute(String, String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateAttribute(String, String)
  name.vb: CreateAttribute(String, String)
- uid: Ubiquity.NET.Llvm.Context.CreateBasicBlock(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateBasicBlock(System.String)
  id: CreateBasicBlock(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateBasicBlock(string)
  nameWithType: Context.CreateBasicBlock(string)
  fullName: Ubiquity.NET.Llvm.Context.CreateBasicBlock(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateBasicBlock
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 178
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Create a named <xref href="Ubiquity.NET.Llvm.Values.BasicBlock" data-throw-if-not-resolved="false"></xref> without inserting it into a function
  example: []
  syntax:
    content: public BasicBlock CreateBasicBlock(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the block to create
    return:
      type: Ubiquity.NET.Llvm.Values.BasicBlock
      description: <xref href="Ubiquity.NET.Llvm.Values.BasicBlock" data-throw-if-not-resolved="false"></xref> created
    content.vb: Public Function CreateBasicBlock(name As String) As BasicBlock
  overload: Ubiquity.NET.Llvm.Context.CreateBasicBlock*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateBasicBlock(System.String)
  nameWithType.vb: Context.CreateBasicBlock(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateBasicBlock(String)
  name.vb: CreateBasicBlock(String)
- uid: Ubiquity.NET.Llvm.Context.CreateBitcodeModule
  commentId: M:Ubiquity.NET.Llvm.Context.CreateBitcodeModule
  id: CreateBitcodeModule
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateBitcodeModule()
  nameWithType: Context.CreateBitcodeModule()
  fullName: Ubiquity.NET.Llvm.Context.CreateBitcodeModule()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateBitcodeModule
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 181
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new instance of the <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref> class in this context
  example: []
  syntax:
    content: public Module CreateBitcodeModule()
    return:
      type: Ubiquity.NET.Llvm.Module
      description: <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateBitcodeModule() As [Module]
  overload: Ubiquity.NET.Llvm.Context.CreateBitcodeModule*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateBitcodeModule
- uid: Ubiquity.NET.Llvm.Context.CreateBitcodeModule(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.CreateBitcodeModule(System.String)
  id: CreateBitcodeModule(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: CreateBitcodeModule(string)
  nameWithType: Context.CreateBitcodeModule(string)
  fullName: Ubiquity.NET.Llvm.Context.CreateBitcodeModule(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateBitcodeModule
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 184
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Creates a new instance of the <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref> class in a given context
  example: []
  syntax:
    content: public Module CreateBitcodeModule(string moduleId)
    parameters:
    - id: moduleId
      type: System.String
      description: ModuleHandle's ID
    return:
      type: Ubiquity.NET.Llvm.Module
      description: <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateBitcodeModule(moduleId As String) As [Module]
  overload: Ubiquity.NET.Llvm.Context.CreateBitcodeModule*
  implements:
  - Ubiquity.NET.Llvm.IContext.CreateBitcodeModule(System.String)
  nameWithType.vb: Context.CreateBitcodeModule(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.CreateBitcodeModule(String)
  name.vb: CreateBitcodeModule(String)
- uid: Ubiquity.NET.Llvm.Context.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
  commentId: M:Ubiquity.NET.Llvm.Context.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
  id: ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: ParseModule(LazyEncodedString, LazyEncodedString)
  nameWithType: Context.ParseModule(LazyEncodedString, LazyEncodedString)
  fullName: Ubiquity.NET.Llvm.Context.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString, Ubiquity.NET.InteropHelpers.LazyEncodedString)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ParseModule
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 187
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Parse LLVM IR source for a module, into this context
  example: []
  syntax:
    content: public Module ParseModule(LazyEncodedString src, LazyEncodedString name)
    parameters:
    - id: src
      type: Ubiquity.NET.InteropHelpers.LazyEncodedString
      description: LLVM IR Source code of the module
    - id: name
      type: Ubiquity.NET.InteropHelpers.LazyEncodedString
      description: Name of the module buffer
    return:
      type: Ubiquity.NET.Llvm.Module
      description: Newly created module parsed from the IR
    content.vb: Public Function ParseModule(src As LazyEncodedString, name As LazyEncodedString) As [Module]
  overload: Ubiquity.NET.Llvm.Context.ParseModule*
  exceptions:
  - type: Ubiquity.NET.Llvm.Interop.LlvmException
    commentId: T:Ubiquity.NET.Llvm.Interop.LlvmException
    description: Any errors parsing the IR
  implements:
  - Ubiquity.NET.Llvm.IContext.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
- uid: Ubiquity.NET.Llvm.Context.GetMDKindId(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.GetMDKindId(System.String)
  id: GetMDKindId(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: GetMDKindId(string)
  nameWithType: Context.GetMDKindId(string)
  fullName: Ubiquity.NET.Llvm.Context.GetMDKindId(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetMDKindId
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 190
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets non-zero IrMetadata kind ID for a given name
  remarks: These IDs are uniqued across all modules in this context.
  example: []
  syntax:
    content: public uint GetMDKindId(string name)
    parameters:
    - id: name
      type: System.String
      description: name of the metadata kind
    return:
      type: System.UInt32
      description: integral constant for the ID
    content.vb: Public Function GetMDKindId(name As String) As UInteger
  overload: Ubiquity.NET.Llvm.Context.GetMDKindId*
  implements:
  - Ubiquity.NET.Llvm.IContext.GetMDKindId(System.String)
  nameWithType.vb: Context.GetMDKindId(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.GetMDKindId(String)
  name.vb: GetMDKindId(String)
- uid: Ubiquity.NET.Llvm.Context.OpenBinary(System.String)
  commentId: M:Ubiquity.NET.Llvm.Context.OpenBinary(System.String)
  id: OpenBinary(System.String)
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: OpenBinary(string)
  nameWithType: Context.OpenBinary(string)
  fullName: Ubiquity.NET.Llvm.Context.OpenBinary(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: OpenBinary
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 193
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Opens a <xref href="Ubiquity.NET.Llvm.ObjectFile.TargetBinary" data-throw-if-not-resolved="false"></xref> from a path
  example: []
  syntax:
    content: public TargetBinary OpenBinary(string path)
    parameters:
    - id: path
      type: System.String
      description: path to the object file binary
    return:
      type: Ubiquity.NET.Llvm.ObjectFile.TargetBinary
      description: new object file
    content.vb: Public Function OpenBinary(path As String) As TargetBinary
  overload: Ubiquity.NET.Llvm.Context.OpenBinary*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: File IO failures
  implements:
  - Ubiquity.NET.Llvm.IContext.OpenBinary(System.String)
  nameWithType.vb: Context.OpenBinary(String)
  fullName.vb: Ubiquity.NET.Llvm.Context.OpenBinary(String)
  name.vb: OpenBinary(String)
- uid: Ubiquity.NET.Llvm.Context.VoidType
  commentId: P:Ubiquity.NET.Llvm.Context.VoidType
  id: VoidType
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: VoidType
  nameWithType: Context.VoidType
  fullName: Ubiquity.NET.Llvm.Context.VoidType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: VoidType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 196
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM void type for this context
  example: []
  syntax:
    content: public ITypeRef VoidType { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property VoidType As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.VoidType*
  implements:
  - Ubiquity.NET.Llvm.IContext.VoidType
- uid: Ubiquity.NET.Llvm.Context.BoolType
  commentId: P:Ubiquity.NET.Llvm.Context.BoolType
  id: BoolType
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: BoolType
  nameWithType: Context.BoolType
  fullName: Ubiquity.NET.Llvm.Context.BoolType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: BoolType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 199
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM boolean type for this context
  example: []
  syntax:
    content: public ITypeRef BoolType { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property BoolType As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.BoolType*
  implements:
  - Ubiquity.NET.Llvm.IContext.BoolType
- uid: Ubiquity.NET.Llvm.Context.Int8Type
  commentId: P:Ubiquity.NET.Llvm.Context.Int8Type
  id: Int8Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Int8Type
  nameWithType: Context.Int8Type
  fullName: Ubiquity.NET.Llvm.Context.Int8Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Int8Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 202
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM 8 bit integer type for this context
  example: []
  syntax:
    content: public ITypeRef Int8Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property Int8Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.Int8Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.Int8Type
- uid: Ubiquity.NET.Llvm.Context.Int16Type
  commentId: P:Ubiquity.NET.Llvm.Context.Int16Type
  id: Int16Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Int16Type
  nameWithType: Context.Int16Type
  fullName: Ubiquity.NET.Llvm.Context.Int16Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Int16Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 205
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM 16 bit integer type for this context
  example: []
  syntax:
    content: public ITypeRef Int16Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property Int16Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.Int16Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.Int16Type
- uid: Ubiquity.NET.Llvm.Context.Int32Type
  commentId: P:Ubiquity.NET.Llvm.Context.Int32Type
  id: Int32Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Int32Type
  nameWithType: Context.Int32Type
  fullName: Ubiquity.NET.Llvm.Context.Int32Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Int32Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 208
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM 32 bit integer type for this context
  example: []
  syntax:
    content: public ITypeRef Int32Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property Int32Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.Int32Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.Int32Type
- uid: Ubiquity.NET.Llvm.Context.Int64Type
  commentId: P:Ubiquity.NET.Llvm.Context.Int64Type
  id: Int64Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Int64Type
  nameWithType: Context.Int64Type
  fullName: Ubiquity.NET.Llvm.Context.Int64Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Int64Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 211
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM 64 bit integer type for this context
  example: []
  syntax:
    content: public ITypeRef Int64Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property Int64Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.Int64Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.Int64Type
- uid: Ubiquity.NET.Llvm.Context.Int128Type
  commentId: P:Ubiquity.NET.Llvm.Context.Int128Type
  id: Int128Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Int128Type
  nameWithType: Context.Int128Type
  fullName: Ubiquity.NET.Llvm.Context.Int128Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Int128Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 214
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM 128 bit integer type for this context
  example: []
  syntax:
    content: public ITypeRef Int128Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property Int128Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.Int128Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.Int128Type
- uid: Ubiquity.NET.Llvm.Context.HalfFloatType
  commentId: P:Ubiquity.NET.Llvm.Context.HalfFloatType
  id: HalfFloatType
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: HalfFloatType
  nameWithType: Context.HalfFloatType
  fullName: Ubiquity.NET.Llvm.Context.HalfFloatType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: HalfFloatType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 217
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM half precision floating point type for this context
  example: []
  syntax:
    content: public ITypeRef HalfFloatType { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property HalfFloatType As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.HalfFloatType*
  implements:
  - Ubiquity.NET.Llvm.IContext.HalfFloatType
- uid: Ubiquity.NET.Llvm.Context.FloatType
  commentId: P:Ubiquity.NET.Llvm.Context.FloatType
  id: FloatType
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: FloatType
  nameWithType: Context.FloatType
  fullName: Ubiquity.NET.Llvm.Context.FloatType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: FloatType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 220
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM single precision floating point type for this context
  example: []
  syntax:
    content: public ITypeRef FloatType { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property FloatType As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.FloatType*
  implements:
  - Ubiquity.NET.Llvm.IContext.FloatType
- uid: Ubiquity.NET.Llvm.Context.DoubleType
  commentId: P:Ubiquity.NET.Llvm.Context.DoubleType
  id: DoubleType
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: DoubleType
  nameWithType: Context.DoubleType
  fullName: Ubiquity.NET.Llvm.Context.DoubleType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DoubleType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 223
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM double precision floating point type for this context
  example: []
  syntax:
    content: public ITypeRef DoubleType { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property DoubleType As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.DoubleType*
  implements:
  - Ubiquity.NET.Llvm.IContext.DoubleType
- uid: Ubiquity.NET.Llvm.Context.TokenType
  commentId: P:Ubiquity.NET.Llvm.Context.TokenType
  id: TokenType
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: Context.TokenType
  fullName: Ubiquity.NET.Llvm.Context.TokenType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: TokenType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 226
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM token type for this context
  example: []
  syntax:
    content: public ITypeRef TokenType { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property TokenType As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.TokenType*
  implements:
  - Ubiquity.NET.Llvm.IContext.TokenType
- uid: Ubiquity.NET.Llvm.Context.MetadataType
  commentId: P:Ubiquity.NET.Llvm.Context.MetadataType
  id: MetadataType
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: MetadataType
  nameWithType: Context.MetadataType
  fullName: Ubiquity.NET.Llvm.Context.MetadataType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: MetadataType
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 229
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM IrMetadata type for this context
  example: []
  syntax:
    content: public ITypeRef MetadataType { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property MetadataType As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.MetadataType*
  implements:
  - Ubiquity.NET.Llvm.IContext.MetadataType
- uid: Ubiquity.NET.Llvm.Context.X86Float80Type
  commentId: P:Ubiquity.NET.Llvm.Context.X86Float80Type
  id: X86Float80Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: X86Float80Type
  nameWithType: Context.X86Float80Type
  fullName: Ubiquity.NET.Llvm.Context.X86Float80Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: X86Float80Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 232
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM X86 80-bit floating point type for this context
  example: []
  syntax:
    content: public ITypeRef X86Float80Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property X86Float80Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.X86Float80Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.X86Float80Type
- uid: Ubiquity.NET.Llvm.Context.Float128Type
  commentId: P:Ubiquity.NET.Llvm.Context.Float128Type
  id: Float128Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Float128Type
  nameWithType: Context.Float128Type
  fullName: Ubiquity.NET.Llvm.Context.Float128Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Float128Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 235
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM 128-Bit floating point type
  example: []
  syntax:
    content: public ITypeRef Float128Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property Float128Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.Float128Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.Float128Type
- uid: Ubiquity.NET.Llvm.Context.PpcFloat128Type
  commentId: P:Ubiquity.NET.Llvm.Context.PpcFloat128Type
  id: PpcFloat128Type
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: PpcFloat128Type
  nameWithType: Context.PpcFloat128Type
  fullName: Ubiquity.NET.Llvm.Context.PpcFloat128Type
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: PpcFloat128Type
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 238
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets the LLVM PPC 128-bit floating point type
  example: []
  syntax:
    content: public ITypeRef PpcFloat128Type { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.ITypeRef
    content.vb: Public ReadOnly Property PpcFloat128Type As ITypeRef
  overload: Ubiquity.NET.Llvm.Context.PpcFloat128Type*
  implements:
  - Ubiquity.NET.Llvm.IContext.PpcFloat128Type
- uid: Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes
  commentId: P:Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes
  id: OdrUniqueDebugTypes
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: OdrUniqueDebugTypes
  nameWithType: Context.OdrUniqueDebugTypes
  fullName: Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: OdrUniqueDebugTypes
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 241
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or sets a value indicating whether the context keeps a map for uniqueing debug info identifiers across the context
  example: []
  syntax:
    content: public bool OdrUniqueDebugTypes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OdrUniqueDebugTypes As Boolean
  overload: Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes*
  implements:
  - Ubiquity.NET.Llvm.IContext.OdrUniqueDebugTypes
- uid: Ubiquity.NET.Llvm.Context.DiscardValueName
  commentId: P:Ubiquity.NET.Llvm.Context.DiscardValueName
  id: DiscardValueName
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: DiscardValueName
  nameWithType: Context.DiscardValueName
  fullName: Ubiquity.NET.Llvm.Context.DiscardValueName
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DiscardValueName
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 248
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or sets a value indicating whether this context is configured to discard value names
  example: []
  syntax:
    content: public bool DiscardValueName { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DiscardValueName As Boolean
  overload: Ubiquity.NET.Llvm.Context.DiscardValueName*
  implements:
  - Ubiquity.NET.Llvm.IContext.DiscardValueName
- uid: Ubiquity.NET.Llvm.Context.IsDisposed
  commentId: P:Ubiquity.NET.Llvm.Context.IsDisposed
  id: IsDisposed
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: Context.IsDisposed
  fullName: Ubiquity.NET.Llvm.Context.IsDisposed
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsDisposed
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 256
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a value indicating whether this instance is already disposed
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: Ubiquity.NET.Llvm.Context.IsDisposed*
- uid: Ubiquity.NET.Llvm.Context.Dispose
  commentId: M:Ubiquity.NET.Llvm.Context.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.Context
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Context.Dispose()
  fullName: Ubiquity.NET.Llvm.Context.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Context.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/Context.cs
    startLine: 259
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.Context.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit.html
  name: DICompileUnit
  nameWithType: DICompileUnit
  fullName: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
- uid: Ubiquity.NET.Llvm.Module
  commentId: T:Ubiquity.NET.Llvm.Module
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Module.html
  name: Module
  nameWithType: Module
  fullName: Ubiquity.NET.Llvm.Module
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  name: IDebugType<TNative, TDebug>
  nameWithType: IDebugType<TNative, TDebug>
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>
  nameWithType.vb: IDebugType(Of TNative, TDebug)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug)
  name.vb: IDebugType(Of TNative, TDebug)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: '>'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: )
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.IContext
  commentId: T:Ubiquity.NET.Llvm.IContext
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.IContext.html
  name: IContext
  nameWithType: IContext
  fullName: Ubiquity.NET.Llvm.IContext
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IEquatable{Ubiquity.NET.Llvm.IContext}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.IContext}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<IContext>
  nameWithType: IEquatable<IContext>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.IContext>
  nameWithType.vb: IEquatable(Of IContext)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.IContext)
  name.vb: IEquatable(Of IContext)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.IContext
    name: IContext
    href: Ubiquity.NET.Llvm.IContext.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.IContext
    name: IContext
    href: Ubiquity.NET.Llvm.IContext.html
  - name: )
- uid: System.IEquatable{Ubiquity.NET.Llvm.Context}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Context}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Context>
  nameWithType: IEquatable<Context>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Context>
  nameWithType.vb: IEquatable(Of Context)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Context)
  name.vb: IEquatable(Of Context)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Context
    name: Context
    href: Ubiquity.NET.Llvm.Context.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Context
    name: Context
    href: Ubiquity.NET.Llvm.Context.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo
  commentId: N:Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.DebugInfo
  nameWithType: Ubiquity.NET.Llvm.DebugInfo
  fullName: Ubiquity.NET.Llvm.DebugInfo
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Context.Equals*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Equals
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Equals_Ubiquity_NET_Llvm_IContext_
  name: Equals
  nameWithType: Context.Equals
  fullName: Ubiquity.NET.Llvm.Context.Equals
- uid: System.IEquatable{Ubiquity.NET.Llvm.IContext}.Equals(Ubiquity.NET.Llvm.IContext)
  commentId: M:System.IEquatable{Ubiquity.NET.Llvm.IContext}.Equals(Ubiquity.NET.Llvm.IContext)
  parent: System.IEquatable{Ubiquity.NET.Llvm.IContext}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(IContext)
  nameWithType: IEquatable<IContext>.Equals(IContext)
  fullName: System.IEquatable<Ubiquity.NET.Llvm.IContext>.Equals(Ubiquity.NET.Llvm.IContext)
  nameWithType.vb: IEquatable(Of IContext).Equals(IContext)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.IContext).Equals(Ubiquity.NET.Llvm.IContext)
  spec.csharp:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.IContext}.Equals(Ubiquity.NET.Llvm.IContext)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.IContext
    name: IContext
    href: Ubiquity.NET.Llvm.IContext.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.IContext}.Equals(Ubiquity.NET.Llvm.IContext)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.IContext
    name: IContext
    href: Ubiquity.NET.Llvm.IContext.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.IEquatable{Ubiquity.NET.Llvm.Context}.Equals(Ubiquity.NET.Llvm.Context)
  commentId: M:System.IEquatable{Ubiquity.NET.Llvm.Context}.Equals(Ubiquity.NET.Llvm.Context)
  parent: System.IEquatable{Ubiquity.NET.Llvm.Context}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Context)
  nameWithType: IEquatable<Context>.Equals(Context)
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Context>.Equals(Ubiquity.NET.Llvm.Context)
  nameWithType.vb: IEquatable(Of Context).Equals(Context)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Context).Equals(Ubiquity.NET.Llvm.Context)
  spec.csharp:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.Context}.Equals(Ubiquity.NET.Llvm.Context)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.Context
    name: Context
    href: Ubiquity.NET.Llvm.Context.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.Context}.Equals(Ubiquity.NET.Llvm.Context)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.Context
    name: Context
    href: Ubiquity.NET.Llvm.Context.html
  - name: )
- uid: Ubiquity.NET.Llvm.Context
  commentId: T:Ubiquity.NET.Llvm.Context
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Context.html
  name: Context
  nameWithType: Context
  fullName: Ubiquity.NET.Llvm.Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Context.GetHashCode*
  commentId: Overload:Ubiquity.NET.Llvm.Context.GetHashCode
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_GetHashCode
  name: GetHashCode
  nameWithType: Context.GetHashCode
  fullName: Ubiquity.NET.Llvm.Context.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Ubiquity.NET.Llvm.Context.Dispose
  commentId: M:Ubiquity.NET.Llvm.Context.Dispose
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Dispose
  name: Dispose()
  nameWithType: Context.Dispose()
  fullName: Ubiquity.NET.Llvm.Context.Dispose()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Context.Dispose
    name: Dispose
    href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Context.Dispose
    name: Dispose
    href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Interop.GlobalHandleBase
  commentId: T:Ubiquity.NET.Llvm.Interop.GlobalHandleBase
  name: GlobalHandleBase
  nameWithType: GlobalHandleBase
  fullName: Ubiquity.NET.Llvm.Interop.GlobalHandleBase
- uid: Ubiquity.NET.Llvm.Context.#ctor*
  commentId: Overload:Ubiquity.NET.Llvm.Context.#ctor
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context__ctor
  name: Context
  nameWithType: Context.Context
  fullName: Ubiquity.NET.Llvm.Context.Context
  nameWithType.vb: Context.New
  fullName.vb: Ubiquity.NET.Llvm.Context.New
  name.vb: New
- uid: Ubiquity.NET.Llvm.Context.SetDiagnosticHandler*
  commentId: Overload:Ubiquity.NET.Llvm.Context.SetDiagnosticHandler
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_SetDiagnosticHandler_Ubiquity_NET_Llvm_DiagnosticInfoCallbackAction_
  name: SetDiagnosticHandler
  nameWithType: Context.SetDiagnosticHandler
  fullName: Ubiquity.NET.Llvm.Context.SetDiagnosticHandler
- uid: Ubiquity.NET.Llvm.IContext.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  commentId: M:Ubiquity.NET.Llvm.IContext.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_SetDiagnosticHandler_Ubiquity_NET_Llvm_DiagnosticInfoCallbackAction_
  name: SetDiagnosticHandler(DiagnosticInfoCallbackAction)
  nameWithType: IContext.SetDiagnosticHandler(DiagnosticInfoCallbackAction)
  fullName: Ubiquity.NET.Llvm.IContext.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
    name: SetDiagnosticHandler
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_SetDiagnosticHandler_Ubiquity_NET_Llvm_DiagnosticInfoCallbackAction_
  - name: (
  - uid: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction
    name: DiagnosticInfoCallbackAction
    href: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.SetDiagnosticHandler(Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction)
    name: SetDiagnosticHandler
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_SetDiagnosticHandler_Ubiquity_NET_Llvm_DiagnosticInfoCallbackAction_
  - name: (
  - uid: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction
    name: DiagnosticInfoCallbackAction
    href: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction.html
  - name: )
- uid: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction
  commentId: T:Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction.html
  name: DiagnosticInfoCallbackAction
  nameWithType: DiagnosticInfoCallbackAction
  fullName: Ubiquity.NET.Llvm.DiagnosticInfoCallbackAction
- uid: Ubiquity.NET.Llvm.Types.IPointerType
  commentId: T:Ubiquity.NET.Llvm.Types.IPointerType
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.IPointerType.html
  name: IPointerType
  nameWithType: IPointerType
  fullName: Ubiquity.NET.Llvm.Types.IPointerType
- uid: Ubiquity.NET.Llvm.Context.GetPointerTypeFor*
  commentId: Overload:Ubiquity.NET.Llvm.Context.GetPointerTypeFor
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_GetPointerTypeFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: GetPointerTypeFor
  nameWithType: Context.GetPointerTypeFor
  fullName: Ubiquity.NET.Llvm.Context.GetPointerTypeFor
- uid: Ubiquity.NET.Llvm.IContext.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.IContext.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetPointerTypeFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: GetPointerTypeFor(ITypeRef)
  nameWithType: IContext.GetPointerTypeFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.IContext.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: GetPointerTypeFor
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetPointerTypeFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.GetPointerTypeFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: GetPointerTypeFor
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetPointerTypeFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
- uid: Ubiquity.NET.Llvm.Types.ITypeRef
  commentId: T:Ubiquity.NET.Llvm.Types.ITypeRef
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  name: ITypeRef
  nameWithType: ITypeRef
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef
- uid: Ubiquity.NET.Llvm.Types
  commentId: N:Ubiquity.NET.Llvm.Types
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Types
  nameWithType: Ubiquity.NET.Llvm.Types
  fullName: Ubiquity.NET.Llvm.Types
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Types
    name: Types
    href: Ubiquity.NET.Llvm.Types.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Types
    name: Types
    href: Ubiquity.NET.Llvm.Types.html
- uid: Ubiquity.NET.Llvm.IContext.BoolType
  commentId: P:Ubiquity.NET.Llvm.IContext.BoolType
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_BoolType
  name: BoolType
  nameWithType: IContext.BoolType
  fullName: Ubiquity.NET.Llvm.IContext.BoolType
- uid: Ubiquity.NET.Llvm.IContext.Int16Type
  commentId: P:Ubiquity.NET.Llvm.IContext.Int16Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_Int16Type
  name: Int16Type
  nameWithType: IContext.Int16Type
  fullName: Ubiquity.NET.Llvm.IContext.Int16Type
- uid: Ubiquity.NET.Llvm.Context.GetIntType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.GetIntType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_GetIntType_System_UInt32_
  name: GetIntType
  nameWithType: Context.GetIntType
  fullName: Ubiquity.NET.Llvm.Context.GetIntType
- uid: Ubiquity.NET.Llvm.IContext.GetIntType(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.IContext.GetIntType(System.UInt32)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetIntType_System_UInt32_
  name: GetIntType(uint)
  nameWithType: IContext.GetIntType(uint)
  fullName: Ubiquity.NET.Llvm.IContext.GetIntType(uint)
  nameWithType.vb: IContext.GetIntType(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.IContext.GetIntType(UInteger)
  name.vb: GetIntType(UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.GetIntType(System.UInt32)
    name: GetIntType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetIntType_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.GetIntType(System.UInt32)
    name: GetIntType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetIntType_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Ubiquity.NET.Llvm.Context.GetFunctionType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.GetFunctionType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_GetFunctionType_Ubiquity_NET_Llvm_Types_ITypeRef_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  name: GetFunctionType
  nameWithType: Context.GetFunctionType
  fullName: Ubiquity.NET.Llvm.Context.GetFunctionType
- uid: Ubiquity.NET.Llvm.IContext.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.IContext.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetFunctionType_Ubiquity_NET_Llvm_Types_ITypeRef_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  name: GetFunctionType(ITypeRef, params IEnumerable<ITypeRef>)
  nameWithType: IContext.GetFunctionType(ITypeRef, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.IContext.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  nameWithType.vb: IContext.GetFunctionType(ITypeRef, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.IContext.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: GetFunctionType(ITypeRef, IEnumerable(Of ITypeRef))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: GetFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetFunctionType_Ubiquity_NET_Llvm_Types_ITypeRef_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.GetFunctionType(Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: GetFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetFunctionType_Ubiquity_NET_Llvm_Types_ITypeRef_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ITypeRef>
  nameWithType: IEnumerable<ITypeRef>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>
  nameWithType.vb: IEnumerable(Of ITypeRef)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef)
  name.vb: IEnumerable(Of ITypeRef)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
- uid: Ubiquity.NET.Llvm.Types.IFunctionType
  commentId: T:Ubiquity.NET.Llvm.Types.IFunctionType
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.IFunctionType.html
  name: IFunctionType
  nameWithType: IFunctionType
  fullName: Ubiquity.NET.Llvm.Types.IFunctionType
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Ubiquity.NET.Llvm.IContext.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.IContext.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetFunctionType_System_Boolean_Ubiquity_NET_Llvm_Types_ITypeRef_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  name: GetFunctionType(bool, ITypeRef, params IEnumerable<ITypeRef>)
  nameWithType: IContext.GetFunctionType(bool, ITypeRef, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.IContext.GetFunctionType(bool, Ubiquity.NET.Llvm.Types.ITypeRef, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  nameWithType.vb: IContext.GetFunctionType(Boolean, ITypeRef, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.IContext.GetFunctionType(Boolean, Ubiquity.NET.Llvm.Types.ITypeRef, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: GetFunctionType(Boolean, ITypeRef, IEnumerable(Of ITypeRef))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: GetFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetFunctionType_System_Boolean_Ubiquity_NET_Llvm_Types_ITypeRef_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.GetFunctionType(System.Boolean,Ubiquity.NET.Llvm.Types.ITypeRef,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: GetFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetFunctionType_System_Boolean_Ubiquity_NET_Llvm_Types_ITypeRef_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  name: DIBuilder
  nameWithType: DIBuilder
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
- uid: Ubiquity.NET.Llvm.Context.CreateFunctionType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateFunctionType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateFunctionType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType___
  name: CreateFunctionType
  nameWithType: Context.CreateFunctionType
  fullName: Ubiquity.NET.Llvm.Context.CreateFunctionType
- uid: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateFunctionType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType___
  name: CreateFunctionType(ref readonly DIBuilder, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  nameWithType: IContext.CreateFunctionType(ref readonly DIBuilder, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  fullName: Ubiquity.NET.Llvm.IContext.CreateFunctionType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>>)
  nameWithType.vb: IContext.CreateFunctionType(DIBuilder, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType), System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType)))
  name.vb: CreateFunctionType(DIBuilder, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
    name: CreateFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateFunctionType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType___
  - name: (
  - name: ref
  - name: " "
  - name: readonly
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
    name: CreateFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateFunctionType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType___
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}
  parent: Ubiquity.NET.Llvm.DebugInfo
  definition: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  name: IDebugType<ITypeRef, DIType>
  nameWithType: IDebugType<ITypeRef, DIType>
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>
  nameWithType.vb: IDebugType(Of ITypeRef, DIType)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType)
  name.vb: IDebugType(Of ITypeRef, DIType)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IDebugType<ITypeRef, DIType>>
  nameWithType: IEnumerable<IDebugType<ITypeRef, DIType>>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>>
  nameWithType.vb: IEnumerable(Of IDebugType(Of ITypeRef, DIType))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType))
  name.vb: IEnumerable(Of IDebugType(Of ITypeRef, DIType))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugFunctionType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugFunctionType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DebugFunctionType.html
  name: DebugFunctionType
  nameWithType: DebugFunctionType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugFunctionType
- uid: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateFunctionType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_Boolean_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType___
  name: CreateFunctionType(ref readonly DIBuilder, bool, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  nameWithType: IContext.CreateFunctionType(ref readonly DIBuilder, bool, IDebugType<ITypeRef, DIType>, params IEnumerable<IDebugType<ITypeRef, DIType>>)
  fullName: Ubiquity.NET.Llvm.IContext.CreateFunctionType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, bool, Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>>)
  nameWithType.vb: IContext.CreateFunctionType(DIBuilder, Boolean, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, Boolean, Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType), System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType)))
  name.vb: CreateFunctionType(DIBuilder, Boolean, IDebugType(Of ITypeRef, DIType), IEnumerable(Of IDebugType(Of ITypeRef, DIType)))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
    name: CreateFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateFunctionType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_Boolean_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType___
  - name: (
  - name: ref
  - name: " "
  - name: readonly
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateFunctionType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType},System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}})
    name: CreateFunctionType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateFunctionType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_Boolean_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType___
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Constant
  commentId: T:Ubiquity.NET.Llvm.Values.Constant
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Constant.html
  name: Constant
  nameWithType: Constant
  fullName: Ubiquity.NET.Llvm.Values.Constant
- uid: Ubiquity.NET.Llvm.Context.CreateConstantStruct*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateConstantStruct
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateConstantStruct_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  name: CreateConstantStruct
  nameWithType: Context.CreateConstantStruct
  fullName: Ubiquity.NET.Llvm.Context.CreateConstantStruct
- uid: Ubiquity.NET.Llvm.IContext.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantStruct_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  name: CreateConstantStruct(bool, params IEnumerable<Constant>)
  nameWithType: IContext.CreateConstantStruct(bool, params IEnumerable<Constant>)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstantStruct(bool, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.Constant>)
  nameWithType.vb: IContext.CreateConstantStruct(Boolean, IEnumerable(Of Constant))
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstantStruct(Boolean, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.Constant))
  name.vb: CreateConstantStruct(Boolean, IEnumerable(Of Constant))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
    name: CreateConstantStruct
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantStruct_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstantStruct(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
    name: CreateConstantStruct
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantStruct_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Constant>
  nameWithType: IEnumerable<Constant>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.Constant>
  nameWithType.vb: IEnumerable(Of Constant)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.Constant)
  name.vb: IEnumerable(Of Constant)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateNamedConstantStruct_Ubiquity_NET_Llvm_Types_IStructType_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  name: CreateNamedConstantStruct
  nameWithType: Context.CreateNamedConstantStruct
  fullName: Ubiquity.NET.Llvm.Context.CreateNamedConstantStruct
- uid: Ubiquity.NET.Llvm.IContext.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateNamedConstantStruct_Ubiquity_NET_Llvm_Types_IStructType_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  name: CreateNamedConstantStruct(IStructType, params IEnumerable<Constant>)
  nameWithType: IContext.CreateNamedConstantStruct(IStructType, params IEnumerable<Constant>)
  fullName: Ubiquity.NET.Llvm.IContext.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.Constant>)
  nameWithType.vb: IContext.CreateNamedConstantStruct(IStructType, IEnumerable(Of Constant))
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.Constant))
  name.vb: CreateNamedConstantStruct(IStructType, IEnumerable(Of Constant))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
    name: CreateNamedConstantStruct
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateNamedConstantStruct_Ubiquity_NET_Llvm_Types_IStructType_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.IStructType
    name: IStructType
    href: Ubiquity.NET.Llvm.Types.IStructType.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateNamedConstantStruct(Ubiquity.NET.Llvm.Types.IStructType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.Constant})
    name: CreateNamedConstantStruct
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateNamedConstantStruct_Ubiquity_NET_Llvm_Types_IStructType_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Values_Constant__
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.IStructType
    name: IStructType
    href: Ubiquity.NET.Llvm.Types.IStructType.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.Types.IStructType
  commentId: T:Ubiquity.NET.Llvm.Types.IStructType
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.IStructType.html
  name: IStructType
  nameWithType: IStructType
  fullName: Ubiquity.NET.Llvm.Types.IStructType
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string.empty
  name: Empty
  nameWithType: string.Empty
  fullName: string.Empty
  nameWithType.vb: String.Empty
  fullName.vb: String.Empty
- uid: Ubiquity.NET.Llvm.Types.IStructType.SetBody(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.Types.IStructType.SetBody(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.Types.IStructType
  isExternal: true
  href: Ubiquity.NET.Llvm.Types.IStructType.html#Ubiquity_NET_Llvm_Types_IStructType_SetBody_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  name: SetBody(bool, params IEnumerable<ITypeRef>)
  nameWithType: IStructType.SetBody(bool, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.Types.IStructType.SetBody(bool, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  nameWithType.vb: IStructType.SetBody(Boolean, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.Types.IStructType.SetBody(Boolean, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: SetBody(Boolean, IEnumerable(Of ITypeRef))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Types.IStructType.SetBody(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: SetBody
    href: Ubiquity.NET.Llvm.Types.IStructType.html#Ubiquity_NET_Llvm_Types_IStructType_SetBody_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Types.IStructType.SetBody(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: SetBody
    href: Ubiquity.NET.Llvm.Types.IStructType.html#Ubiquity_NET_Llvm_Types_IStructType_SetBody_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.Context.CreateStructType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateStructType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateStructType_System_String_
  name: CreateStructType
  nameWithType: Context.CreateStructType
  fullName: Ubiquity.NET.Llvm.Context.CreateStructType
- uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateStructType(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_String_
  name: CreateStructType(string)
  nameWithType: IContext.CreateStructType(string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateStructType(string)
  nameWithType.vb: IContext.CreateStructType(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateStructType(String)
  name.vb: CreateStructType(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.String)
    name: CreateStructType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.String)
    name: CreateStructType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  name: CreateStructType(bool, params IEnumerable<ITypeRef>)
  nameWithType: IContext.CreateStructType(bool, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.IContext.CreateStructType(bool, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  nameWithType.vb: IContext.CreateStructType(Boolean, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateStructType(Boolean, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: CreateStructType(Boolean, IEnumerable(Of ITypeRef))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: CreateStructType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: CreateStructType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.ContextAlias
  commentId: T:Ubiquity.NET.Llvm.ContextAlias
  name: ContextAlias
  nameWithType: ContextAlias
  fullName: Ubiquity.NET.Llvm.ContextAlias
- uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_String_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  name: CreateStructType(string, bool, params IEnumerable<ITypeRef>)
  nameWithType: IContext.CreateStructType(string, bool, params IEnumerable<ITypeRef>)
  fullName: Ubiquity.NET.Llvm.IContext.CreateStructType(string, bool, params System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Types.ITypeRef>)
  nameWithType.vb: IContext.CreateStructType(String, Boolean, IEnumerable(Of ITypeRef))
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateStructType(String, Boolean, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Types.ITypeRef))
  name.vb: CreateStructType(String, Boolean, IEnumerable(Of ITypeRef))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: CreateStructType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_String_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateStructType(System.String,System.Boolean,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Types.ITypeRef})
    name: CreateStructType
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateStructType_System_String_System_Boolean_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_Types_ITypeRef__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.Context.CreateMetadataString*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateMetadataString
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateMetadataString_System_String_
  name: CreateMetadataString
  nameWithType: Context.CreateMetadataString
  fullName: Ubiquity.NET.Llvm.Context.CreateMetadataString
- uid: Ubiquity.NET.Llvm.IContext.CreateMetadataString(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateMetadataString(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateMetadataString_System_String_
  name: CreateMetadataString(string)
  nameWithType: IContext.CreateMetadataString(string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateMetadataString(string)
  nameWithType.vb: IContext.CreateMetadataString(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateMetadataString(String)
  name.vb: CreateMetadataString(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateMetadataString(System.String)
    name: CreateMetadataString
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateMetadataString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateMetadataString(System.String)
    name: CreateMetadataString
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateMetadataString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.MDString
  commentId: T:Ubiquity.NET.Llvm.Metadata.MDString
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.MDString.html
  name: MDString
  nameWithType: MDString
  fullName: Ubiquity.NET.Llvm.Metadata.MDString
- uid: Ubiquity.NET.Llvm.Metadata
  commentId: N:Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Metadata
  nameWithType: Ubiquity.NET.Llvm.Metadata
  fullName: Ubiquity.NET.Llvm.Metadata
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
- uid: Ubiquity.NET.Llvm.Metadata.MDNode
  commentId: T:Ubiquity.NET.Llvm.Metadata.MDNode
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html
  name: MDNode
  nameWithType: MDNode
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.Operands
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.Operands
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_Operands
  name: Operands
  nameWithType: MDNode.Operands
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.Operands
- uid: Ubiquity.NET.Llvm.Context.CreateMDNode*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateMDNode
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateMDNode_System_String_
  name: CreateMDNode
  nameWithType: Context.CreateMDNode
  fullName: Ubiquity.NET.Llvm.Context.CreateMDNode
- uid: Ubiquity.NET.Llvm.IContext.CreateMDNode(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateMDNode(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateMDNode_System_String_
  name: CreateMDNode(string)
  nameWithType: IContext.CreateMDNode(string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateMDNode(string)
  nameWithType.vb: IContext.CreateMDNode(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateMDNode(String)
  name.vb: CreateMDNode(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateMDNode(System.String)
    name: CreateMDNode
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateMDNode_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateMDNode(System.String)
    name: CreateMDNode
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateMDNode_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ConstantDataArray
  commentId: T:Ubiquity.NET.Llvm.Values.ConstantDataArray
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ConstantDataArray.html
  name: ConstantDataArray
  nameWithType: ConstantDataArray
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataArray
- uid: Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String,System.Boolean)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantString_System_String_System_Boolean_
  name: CreateConstantString(string, bool)
  nameWithType: IContext.CreateConstantString(string, bool)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstantString(string, bool)
  nameWithType.vb: IContext.CreateConstantString(String, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstantString(String, Boolean)
  name.vb: CreateConstantString(String, Boolean)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String,System.Boolean)
    name: CreateConstantString
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantString_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String,System.Boolean)
    name: CreateConstantString
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantString_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Ubiquity.NET.Llvm.Context.CreateConstantString*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateConstantString
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateConstantString_System_String_
  name: CreateConstantString
  nameWithType: Context.CreateConstantString
  fullName: Ubiquity.NET.Llvm.Context.CreateConstantString
- uid: Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantString_System_String_
  name: CreateConstantString(string)
  nameWithType: IContext.CreateConstantString(string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstantString(string)
  nameWithType.vb: IContext.CreateConstantString(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstantString(String)
  name.vb: CreateConstantString(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String)
    name: CreateConstantString
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstantString(System.String)
    name: CreateConstantString
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstantString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ConstantInt
  commentId: T:Ubiquity.NET.Llvm.Values.ConstantInt
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ConstantInt.html
  name: ConstantInt
  nameWithType: ConstantInt
  fullName: Ubiquity.NET.Llvm.Values.ConstantInt
- uid: Ubiquity.NET.Llvm.Context.CreateConstant*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateConstant
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateConstant_System_Boolean_
  name: CreateConstant
  nameWithType: Context.CreateConstant
  fullName: Ubiquity.NET.Llvm.Context.CreateConstant
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.Boolean)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Boolean_
  name: CreateConstant(bool)
  nameWithType: IContext.CreateConstant(bool)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(bool)
  nameWithType.vb: IContext.CreateConstant(Boolean)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Boolean)
  name.vb: CreateConstant(Boolean)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Boolean)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Boolean)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Byte)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.Byte)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Byte_
  name: CreateConstant(byte)
  nameWithType: IContext.CreateConstant(byte)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(byte)
  nameWithType.vb: IContext.CreateConstant(Byte)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Byte)
  name.vb: CreateConstant(Byte)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Byte)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Byte_
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Byte)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Byte_
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.SByte)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.SByte)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_SByte_
  name: CreateConstant(sbyte)
  nameWithType: IContext.CreateConstant(sbyte)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(sbyte)
  nameWithType.vb: IContext.CreateConstant(SByte)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(SByte)
  name.vb: CreateConstant(SByte)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.SByte)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_SByte_
  - name: (
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.SByte)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_SByte_
  - name: (
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: )
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int16)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int16)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int16_
  name: CreateConstant(short)
  nameWithType: IContext.CreateConstant(short)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(short)
  nameWithType.vb: IContext.CreateConstant(Short)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Short)
  name.vb: CreateConstant(Short)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int16)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int16_
  - name: (
  - uid: System.Int16
    name: short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int16)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int16_
  - name: (
  - uid: System.Int16
    name: Short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: )
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt16)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt16)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt16_
  name: CreateConstant(ushort)
  nameWithType: IContext.CreateConstant(ushort)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(ushort)
  nameWithType.vb: IContext.CreateConstant(UShort)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(UShort)
  name.vb: CreateConstant(UShort)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt16)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt16_
  - name: (
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt16)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt16_
  - name: (
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: )
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int32)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int32)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int32_
  name: CreateConstant(int)
  nameWithType: IContext.CreateConstant(int)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(int)
  nameWithType.vb: IContext.CreateConstant(Integer)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Integer)
  name.vb: CreateConstant(Integer)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int32)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int32)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt32_
  name: CreateConstant(uint)
  nameWithType: IContext.CreateConstant(uint)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(uint)
  nameWithType.vb: IContext.CreateConstant(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(UInteger)
  name.vb: CreateConstant(UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int64)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int64)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int64_
  name: CreateConstant(long)
  nameWithType: IContext.CreateConstant(long)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(long)
  nameWithType.vb: IContext.CreateConstant(Long)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Long)
  name.vb: CreateConstant(Long)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int64)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int64_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Int64)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Int64_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt64)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt64)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt64_
  name: CreateConstant(ulong)
  nameWithType: IContext.CreateConstant(ulong)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(ulong)
  nameWithType.vb: IContext.CreateConstant(ULong)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(ULong)
  name.vb: CreateConstant(ULong)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt64)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt64)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt32_System_UInt64_System_Boolean_
  name: CreateConstant(uint, ulong, bool)
  nameWithType: IContext.CreateConstant(uint, ulong, bool)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(uint, ulong, bool)
  nameWithType.vb: IContext.CreateConstant(UInteger, ULong, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(UInteger, ULong, Boolean)
  name.vb: CreateConstant(UInteger, ULong, Boolean)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt32_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.UInt32,System.UInt64,System.Boolean)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_UInt32_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_Ubiquity_NET_Llvm_Types_ITypeRef_System_UInt64_System_Boolean_
  name: CreateConstant(ITypeRef, ulong, bool)
  nameWithType: IContext.CreateConstant(ITypeRef, ulong, bool)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef, ulong, bool)
  nameWithType.vb: IContext.CreateConstant(ITypeRef, ULong, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef, ULong, Boolean)
  name.vb: CreateConstant(ITypeRef, ULong, Boolean)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_Ubiquity_NET_Llvm_Types_ITypeRef_System_UInt64_System_Boolean_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(Ubiquity.NET.Llvm.Types.ITypeRef,System.UInt64,System.Boolean)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_Ubiquity_NET_Llvm_Types_ITypeRef_System_UInt64_System_Boolean_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ConstantFP
  commentId: T:Ubiquity.NET.Llvm.Values.ConstantFP
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ConstantFP.html
  name: ConstantFP
  nameWithType: ConstantFP
  fullName: Ubiquity.NET.Llvm.Values.ConstantFP
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Single)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.Single)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Single_
  name: CreateConstant(float)
  nameWithType: IContext.CreateConstant(float)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(float)
  nameWithType.vb: IContext.CreateConstant(Single)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Single)
  name.vb: CreateConstant(Single)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Single)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Single)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Double)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateConstant(System.Double)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Double_
  name: CreateConstant(double)
  nameWithType: IContext.CreateConstant(double)
  fullName: Ubiquity.NET.Llvm.IContext.CreateConstant(double)
  nameWithType.vb: IContext.CreateConstant(Double)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateConstant(Double)
  name.vb: CreateConstant(Double)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Double)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateConstant(System.Double)
    name: CreateConstant
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateConstant_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Ubiquity.NET.Llvm.Values.AttributeValue
  commentId: T:Ubiquity.NET.Llvm.Values.AttributeValue
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  name: AttributeValue
  nameWithType: AttributeValue
  fullName: Ubiquity.NET.Llvm.Values.AttributeValue
- uid: Ubiquity.NET.Llvm.Context.CreateAttribute*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateAttribute
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: CreateAttribute
  nameWithType: Context.CreateAttribute
  fullName: Ubiquity.NET.Llvm.Context.CreateAttribute
- uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: CreateAttribute(AttributeKind)
  nameWithType: IContext.CreateAttribute(AttributeKind)
  fullName: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.AttributeKind
    name: AttributeKind
    href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.AttributeKind
    name: AttributeKind
    href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.AttributeKind
  commentId: T:Ubiquity.NET.Llvm.Values.AttributeKind
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  name: AttributeKind
  nameWithType: AttributeKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind
- uid: Ubiquity.NET.Llvm.Values.AttributeKind.Alignment
  commentId: F:Ubiquity.NET.Llvm.Values.AttributeKind.Alignment
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html#Ubiquity_NET_Llvm_Values_AttributeKind_Alignment
  name: Alignment
  nameWithType: AttributeKind.Alignment
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind.Alignment
- uid: Ubiquity.NET.Llvm.Values.AttributeKind.StackAlignment
  commentId: F:Ubiquity.NET.Llvm.Values.AttributeKind.StackAlignment
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html#Ubiquity_NET_Llvm_Values_AttributeKind_StackAlignment
  name: StackAlignment
  nameWithType: AttributeKind.StackAlignment
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind.StackAlignment
- uid: Ubiquity.NET.Llvm.Values.AttributeKind.Dereferenceable
  commentId: F:Ubiquity.NET.Llvm.Values.AttributeKind.Dereferenceable
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html#Ubiquity_NET_Llvm_Values_AttributeKind_Dereferenceable
  name: Dereferenceable
  nameWithType: AttributeKind.Dereferenceable
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind.Dereferenceable
- uid: Ubiquity.NET.Llvm.Values.AttributeKind.DereferenceableOrNull
  commentId: F:Ubiquity.NET.Llvm.Values.AttributeKind.DereferenceableOrNull
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html#Ubiquity_NET_Llvm_Values_AttributeKind_DereferenceableOrNull
  name: DereferenceableOrNull
  nameWithType: AttributeKind.DereferenceableOrNull
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind.DereferenceableOrNull
- uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_System_UInt64_
  name: CreateAttribute(AttributeKind, ulong)
  nameWithType: IContext.CreateAttribute(AttributeKind, ulong)
  fullName: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind, ulong)
  nameWithType.vb: IContext.CreateAttribute(AttributeKind, ULong)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind, ULong)
  name.vb: CreateAttribute(AttributeKind, ULong)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_System_UInt64_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.AttributeKind
    name: AttributeKind
    href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(Ubiquity.NET.Llvm.Values.AttributeKind,System.UInt64)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_System_UInt64_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.AttributeKind
    name: AttributeKind
    href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_System_String_
  name: CreateAttribute(string)
  nameWithType: IContext.CreateAttribute(string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateAttribute(string)
  nameWithType.vb: IContext.CreateAttribute(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateAttribute(String)
  name.vb: CreateAttribute(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String,System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String,System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_System_String_System_String_
  name: CreateAttribute(string, string)
  nameWithType: IContext.CreateAttribute(string, string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateAttribute(string, string)
  nameWithType.vb: IContext.CreateAttribute(String, String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateAttribute(String, String)
  name.vb: CreateAttribute(String, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String,System.String)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateAttribute(System.String,System.String)
    name: CreateAttribute
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateAttribute_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Values.BasicBlock
  commentId: T:Ubiquity.NET.Llvm.Values.BasicBlock
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  name: BasicBlock
  nameWithType: BasicBlock
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock
- uid: Ubiquity.NET.Llvm.Context.CreateBasicBlock*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateBasicBlock
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateBasicBlock_System_String_
  name: CreateBasicBlock
  nameWithType: Context.CreateBasicBlock
  fullName: Ubiquity.NET.Llvm.Context.CreateBasicBlock
- uid: Ubiquity.NET.Llvm.IContext.CreateBasicBlock(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateBasicBlock(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBasicBlock_System_String_
  name: CreateBasicBlock(string)
  nameWithType: IContext.CreateBasicBlock(string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateBasicBlock(string)
  nameWithType.vb: IContext.CreateBasicBlock(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateBasicBlock(String)
  name.vb: CreateBasicBlock(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateBasicBlock(System.String)
    name: CreateBasicBlock
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBasicBlock_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateBasicBlock(System.String)
    name: CreateBasicBlock
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBasicBlock_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Context.CreateBitcodeModule*
  commentId: Overload:Ubiquity.NET.Llvm.Context.CreateBitcodeModule
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_CreateBitcodeModule
  name: CreateBitcodeModule
  nameWithType: Context.CreateBitcodeModule
  fullName: Ubiquity.NET.Llvm.Context.CreateBitcodeModule
- uid: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateBitcodeModule
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBitcodeModule
  name: CreateBitcodeModule()
  nameWithType: IContext.CreateBitcodeModule()
  fullName: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule
    name: CreateBitcodeModule
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBitcodeModule
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule
    name: CreateBitcodeModule
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBitcodeModule
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.CreateBitcodeModule(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBitcodeModule_System_String_
  name: CreateBitcodeModule(string)
  nameWithType: IContext.CreateBitcodeModule(string)
  fullName: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule(string)
  nameWithType.vb: IContext.CreateBitcodeModule(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule(String)
  name.vb: CreateBitcodeModule(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule(System.String)
    name: CreateBitcodeModule
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBitcodeModule_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.CreateBitcodeModule(System.String)
    name: CreateBitcodeModule
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_CreateBitcodeModule_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Interop.LlvmException
  commentId: T:Ubiquity.NET.Llvm.Interop.LlvmException
  name: LlvmException
  nameWithType: LlvmException
  fullName: Ubiquity.NET.Llvm.Interop.LlvmException
- uid: Ubiquity.NET.Llvm.Context.ParseModule*
  commentId: Overload:Ubiquity.NET.Llvm.Context.ParseModule
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_ParseModule_Ubiquity_NET_InteropHelpers_LazyEncodedString_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  name: ParseModule
  nameWithType: Context.ParseModule
  fullName: Ubiquity.NET.Llvm.Context.ParseModule
- uid: Ubiquity.NET.Llvm.IContext.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
  commentId: M:Ubiquity.NET.Llvm.IContext.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_ParseModule_Ubiquity_NET_InteropHelpers_LazyEncodedString_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  name: ParseModule(LazyEncodedString, LazyEncodedString)
  nameWithType: IContext.ParseModule(LazyEncodedString, LazyEncodedString)
  fullName: Ubiquity.NET.Llvm.IContext.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString, Ubiquity.NET.InteropHelpers.LazyEncodedString)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
    name: ParseModule
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_ParseModule_Ubiquity_NET_InteropHelpers_LazyEncodedString_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  - name: (
  - uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
    name: LazyEncodedString
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
    name: LazyEncodedString
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.ParseModule(Ubiquity.NET.InteropHelpers.LazyEncodedString,Ubiquity.NET.InteropHelpers.LazyEncodedString)
    name: ParseModule
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_ParseModule_Ubiquity_NET_InteropHelpers_LazyEncodedString_Ubiquity_NET_InteropHelpers_LazyEncodedString_
  - name: (
  - uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
    name: LazyEncodedString
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
    name: LazyEncodedString
  - name: )
- uid: Ubiquity.NET.InteropHelpers.LazyEncodedString
  commentId: T:Ubiquity.NET.InteropHelpers.LazyEncodedString
  parent: Ubiquity.NET.InteropHelpers
  name: LazyEncodedString
  nameWithType: LazyEncodedString
  fullName: Ubiquity.NET.InteropHelpers.LazyEncodedString
- uid: Ubiquity.NET.InteropHelpers
  commentId: N:Ubiquity.NET.InteropHelpers
  name: Ubiquity.NET.InteropHelpers
  nameWithType: Ubiquity.NET.InteropHelpers
  fullName: Ubiquity.NET.InteropHelpers
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
  - name: .
  - uid: Ubiquity.NET
    name: NET
  - name: .
  - uid: Ubiquity.NET.InteropHelpers
    name: InteropHelpers
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
  - name: .
  - uid: Ubiquity.NET
    name: NET
  - name: .
  - uid: Ubiquity.NET.InteropHelpers
    name: InteropHelpers
- uid: Ubiquity.NET.Llvm.Context.GetMDKindId*
  commentId: Overload:Ubiquity.NET.Llvm.Context.GetMDKindId
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_GetMDKindId_System_String_
  name: GetMDKindId
  nameWithType: Context.GetMDKindId
  fullName: Ubiquity.NET.Llvm.Context.GetMDKindId
- uid: Ubiquity.NET.Llvm.IContext.GetMDKindId(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.GetMDKindId(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetMDKindId_System_String_
  name: GetMDKindId(string)
  nameWithType: IContext.GetMDKindId(string)
  fullName: Ubiquity.NET.Llvm.IContext.GetMDKindId(string)
  nameWithType.vb: IContext.GetMDKindId(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.GetMDKindId(String)
  name.vb: GetMDKindId(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.GetMDKindId(System.String)
    name: GetMDKindId
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetMDKindId_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.GetMDKindId(System.String)
    name: GetMDKindId
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_GetMDKindId_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.ObjectFile.TargetBinary
  commentId: T:Ubiquity.NET.Llvm.ObjectFile.TargetBinary
  parent: Ubiquity.NET.Llvm.ObjectFile
  href: Ubiquity.NET.Llvm.ObjectFile.TargetBinary.html
  name: TargetBinary
  nameWithType: TargetBinary
  fullName: Ubiquity.NET.Llvm.ObjectFile.TargetBinary
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.ioexception
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: Ubiquity.NET.Llvm.Context.OpenBinary*
  commentId: Overload:Ubiquity.NET.Llvm.Context.OpenBinary
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_OpenBinary_System_String_
  name: OpenBinary
  nameWithType: Context.OpenBinary
  fullName: Ubiquity.NET.Llvm.Context.OpenBinary
- uid: Ubiquity.NET.Llvm.IContext.OpenBinary(System.String)
  commentId: M:Ubiquity.NET.Llvm.IContext.OpenBinary(System.String)
  parent: Ubiquity.NET.Llvm.IContext
  isExternal: true
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_OpenBinary_System_String_
  name: OpenBinary(string)
  nameWithType: IContext.OpenBinary(string)
  fullName: Ubiquity.NET.Llvm.IContext.OpenBinary(string)
  nameWithType.vb: IContext.OpenBinary(String)
  fullName.vb: Ubiquity.NET.Llvm.IContext.OpenBinary(String)
  name.vb: OpenBinary(String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IContext.OpenBinary(System.String)
    name: OpenBinary
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_OpenBinary_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IContext.OpenBinary(System.String)
    name: OpenBinary
    href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_OpenBinary_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.ObjectFile
  commentId: N:Ubiquity.NET.Llvm.ObjectFile
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.ObjectFile
  nameWithType: Ubiquity.NET.Llvm.ObjectFile
  fullName: Ubiquity.NET.Llvm.ObjectFile
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.ObjectFile
    name: ObjectFile
    href: Ubiquity.NET.Llvm.ObjectFile.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.ObjectFile
    name: ObjectFile
    href: Ubiquity.NET.Llvm.ObjectFile.html
- uid: Ubiquity.NET.Llvm.Context.VoidType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.VoidType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_VoidType
  name: VoidType
  nameWithType: Context.VoidType
  fullName: Ubiquity.NET.Llvm.Context.VoidType
- uid: Ubiquity.NET.Llvm.IContext.VoidType
  commentId: P:Ubiquity.NET.Llvm.IContext.VoidType
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_VoidType
  name: VoidType
  nameWithType: IContext.VoidType
  fullName: Ubiquity.NET.Llvm.IContext.VoidType
- uid: Ubiquity.NET.Llvm.Context.BoolType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.BoolType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_BoolType
  name: BoolType
  nameWithType: Context.BoolType
  fullName: Ubiquity.NET.Llvm.Context.BoolType
- uid: Ubiquity.NET.Llvm.Context.Int8Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Int8Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Int8Type
  name: Int8Type
  nameWithType: Context.Int8Type
  fullName: Ubiquity.NET.Llvm.Context.Int8Type
- uid: Ubiquity.NET.Llvm.IContext.Int8Type
  commentId: P:Ubiquity.NET.Llvm.IContext.Int8Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_Int8Type
  name: Int8Type
  nameWithType: IContext.Int8Type
  fullName: Ubiquity.NET.Llvm.IContext.Int8Type
- uid: Ubiquity.NET.Llvm.Context.Int16Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Int16Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Int16Type
  name: Int16Type
  nameWithType: Context.Int16Type
  fullName: Ubiquity.NET.Llvm.Context.Int16Type
- uid: Ubiquity.NET.Llvm.Context.Int32Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Int32Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Int32Type
  name: Int32Type
  nameWithType: Context.Int32Type
  fullName: Ubiquity.NET.Llvm.Context.Int32Type
- uid: Ubiquity.NET.Llvm.IContext.Int32Type
  commentId: P:Ubiquity.NET.Llvm.IContext.Int32Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_Int32Type
  name: Int32Type
  nameWithType: IContext.Int32Type
  fullName: Ubiquity.NET.Llvm.IContext.Int32Type
- uid: Ubiquity.NET.Llvm.Context.Int64Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Int64Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Int64Type
  name: Int64Type
  nameWithType: Context.Int64Type
  fullName: Ubiquity.NET.Llvm.Context.Int64Type
- uid: Ubiquity.NET.Llvm.IContext.Int64Type
  commentId: P:Ubiquity.NET.Llvm.IContext.Int64Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_Int64Type
  name: Int64Type
  nameWithType: IContext.Int64Type
  fullName: Ubiquity.NET.Llvm.IContext.Int64Type
- uid: Ubiquity.NET.Llvm.Context.Int128Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Int128Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Int128Type
  name: Int128Type
  nameWithType: Context.Int128Type
  fullName: Ubiquity.NET.Llvm.Context.Int128Type
- uid: Ubiquity.NET.Llvm.IContext.Int128Type
  commentId: P:Ubiquity.NET.Llvm.IContext.Int128Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_Int128Type
  name: Int128Type
  nameWithType: IContext.Int128Type
  fullName: Ubiquity.NET.Llvm.IContext.Int128Type
- uid: Ubiquity.NET.Llvm.Context.HalfFloatType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.HalfFloatType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_HalfFloatType
  name: HalfFloatType
  nameWithType: Context.HalfFloatType
  fullName: Ubiquity.NET.Llvm.Context.HalfFloatType
- uid: Ubiquity.NET.Llvm.IContext.HalfFloatType
  commentId: P:Ubiquity.NET.Llvm.IContext.HalfFloatType
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_HalfFloatType
  name: HalfFloatType
  nameWithType: IContext.HalfFloatType
  fullName: Ubiquity.NET.Llvm.IContext.HalfFloatType
- uid: Ubiquity.NET.Llvm.Context.FloatType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.FloatType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_FloatType
  name: FloatType
  nameWithType: Context.FloatType
  fullName: Ubiquity.NET.Llvm.Context.FloatType
- uid: Ubiquity.NET.Llvm.IContext.FloatType
  commentId: P:Ubiquity.NET.Llvm.IContext.FloatType
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_FloatType
  name: FloatType
  nameWithType: IContext.FloatType
  fullName: Ubiquity.NET.Llvm.IContext.FloatType
- uid: Ubiquity.NET.Llvm.Context.DoubleType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.DoubleType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_DoubleType
  name: DoubleType
  nameWithType: Context.DoubleType
  fullName: Ubiquity.NET.Llvm.Context.DoubleType
- uid: Ubiquity.NET.Llvm.IContext.DoubleType
  commentId: P:Ubiquity.NET.Llvm.IContext.DoubleType
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_DoubleType
  name: DoubleType
  nameWithType: IContext.DoubleType
  fullName: Ubiquity.NET.Llvm.IContext.DoubleType
- uid: Ubiquity.NET.Llvm.Context.TokenType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.TokenType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_TokenType
  name: TokenType
  nameWithType: Context.TokenType
  fullName: Ubiquity.NET.Llvm.Context.TokenType
- uid: Ubiquity.NET.Llvm.IContext.TokenType
  commentId: P:Ubiquity.NET.Llvm.IContext.TokenType
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_TokenType
  name: TokenType
  nameWithType: IContext.TokenType
  fullName: Ubiquity.NET.Llvm.IContext.TokenType
- uid: Ubiquity.NET.Llvm.Context.MetadataType*
  commentId: Overload:Ubiquity.NET.Llvm.Context.MetadataType
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_MetadataType
  name: MetadataType
  nameWithType: Context.MetadataType
  fullName: Ubiquity.NET.Llvm.Context.MetadataType
- uid: Ubiquity.NET.Llvm.IContext.MetadataType
  commentId: P:Ubiquity.NET.Llvm.IContext.MetadataType
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_MetadataType
  name: MetadataType
  nameWithType: IContext.MetadataType
  fullName: Ubiquity.NET.Llvm.IContext.MetadataType
- uid: Ubiquity.NET.Llvm.Context.X86Float80Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.X86Float80Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_X86Float80Type
  name: X86Float80Type
  nameWithType: Context.X86Float80Type
  fullName: Ubiquity.NET.Llvm.Context.X86Float80Type
- uid: Ubiquity.NET.Llvm.IContext.X86Float80Type
  commentId: P:Ubiquity.NET.Llvm.IContext.X86Float80Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_X86Float80Type
  name: X86Float80Type
  nameWithType: IContext.X86Float80Type
  fullName: Ubiquity.NET.Llvm.IContext.X86Float80Type
- uid: Ubiquity.NET.Llvm.Context.Float128Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Float128Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Float128Type
  name: Float128Type
  nameWithType: Context.Float128Type
  fullName: Ubiquity.NET.Llvm.Context.Float128Type
- uid: Ubiquity.NET.Llvm.IContext.Float128Type
  commentId: P:Ubiquity.NET.Llvm.IContext.Float128Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_Float128Type
  name: Float128Type
  nameWithType: IContext.Float128Type
  fullName: Ubiquity.NET.Llvm.IContext.Float128Type
- uid: Ubiquity.NET.Llvm.Context.PpcFloat128Type*
  commentId: Overload:Ubiquity.NET.Llvm.Context.PpcFloat128Type
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_PpcFloat128Type
  name: PpcFloat128Type
  nameWithType: Context.PpcFloat128Type
  fullName: Ubiquity.NET.Llvm.Context.PpcFloat128Type
- uid: Ubiquity.NET.Llvm.IContext.PpcFloat128Type
  commentId: P:Ubiquity.NET.Llvm.IContext.PpcFloat128Type
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_PpcFloat128Type
  name: PpcFloat128Type
  nameWithType: IContext.PpcFloat128Type
  fullName: Ubiquity.NET.Llvm.IContext.PpcFloat128Type
- uid: Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes*
  commentId: Overload:Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_OdrUniqueDebugTypes
  name: OdrUniqueDebugTypes
  nameWithType: Context.OdrUniqueDebugTypes
  fullName: Ubiquity.NET.Llvm.Context.OdrUniqueDebugTypes
- uid: Ubiquity.NET.Llvm.IContext.OdrUniqueDebugTypes
  commentId: P:Ubiquity.NET.Llvm.IContext.OdrUniqueDebugTypes
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_OdrUniqueDebugTypes
  name: OdrUniqueDebugTypes
  nameWithType: IContext.OdrUniqueDebugTypes
  fullName: Ubiquity.NET.Llvm.IContext.OdrUniqueDebugTypes
- uid: Ubiquity.NET.Llvm.Context.DiscardValueName*
  commentId: Overload:Ubiquity.NET.Llvm.Context.DiscardValueName
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_DiscardValueName
  name: DiscardValueName
  nameWithType: Context.DiscardValueName
  fullName: Ubiquity.NET.Llvm.Context.DiscardValueName
- uid: Ubiquity.NET.Llvm.IContext.DiscardValueName
  commentId: P:Ubiquity.NET.Llvm.IContext.DiscardValueName
  parent: Ubiquity.NET.Llvm.IContext
  href: Ubiquity.NET.Llvm.IContext.html#Ubiquity_NET_Llvm_IContext_DiscardValueName
  name: DiscardValueName
  nameWithType: IContext.DiscardValueName
  fullName: Ubiquity.NET.Llvm.IContext.DiscardValueName
- uid: Ubiquity.NET.Llvm.Context.IsDisposed*
  commentId: Overload:Ubiquity.NET.Llvm.Context.IsDisposed
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_IsDisposed
  name: IsDisposed
  nameWithType: Context.IsDisposed
  fullName: Ubiquity.NET.Llvm.Context.IsDisposed
- uid: Ubiquity.NET.Llvm.Context.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.Context.Dispose
  href: Ubiquity.NET.Llvm.Context.html#Ubiquity_NET_Llvm_Context_Dispose
  name: Dispose
  nameWithType: Context.Dispose
  fullName: Ubiquity.NET.Llvm.Context.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
