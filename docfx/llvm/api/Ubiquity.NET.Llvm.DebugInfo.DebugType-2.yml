### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  id: DebugType`2
  parent: Ubiquity.NET.Llvm.DebugInfo
  children:
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Context
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType(System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType(System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.GetNullValue
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IntegerBitWidth
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsDouble
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloat
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloatingPoint
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsInteger
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsPointer
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSequence
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSized
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsStruct
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsVoid
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Kind
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType
  - Ubiquity.NET.Llvm.DebugInfo.DebugType`2.op_Implicit(Ubiquity.NET.Llvm.DebugInfo.DebugType{`0,`1})~`1
  langs:
  - csharp
  - vb
  name: DebugType<TNative, TDebug>
  nameWithType: DebugType<TNative, TDebug>
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DebugType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 30
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Base class for Debug types bound with an LLVM type
  remarks: >-
    <p>This is a generic type that represents a binding between a specific LLVM type AND a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIType" data-throw-if-not-resolved="false"></xref>

    that describes it. This maintains the relationship between the two different reals and types systems.</p>


    <p>Primitive types and function signature types are all interned in LLVM, thus there won't be a

    strict one to one relationship between an LLVM type and corresponding language specific debug

    type. (e.g. unsigned char, char, byte and signed byte might all be 8 bit integgral values as far

    as LLVM is concerned.) Also, when using the pointer+alloca+memcpy pattern to pass by value the

    actual source debug info type is different than the LLVM function signature. This interface and

    it's implementations are used to construct native type and debug info pairing to allow applications

    to maintain a link from their AST or IR types into the LLVM native type and debug information.</p>


    <div class="NOTE"><h5>note</h5><p>

    It is important to note that the relationship from the <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugType%602.DebugInfoType" data-throw-if-not-resolved="false"></xref> to it's <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugType%602.NativeType" data-throw-if-not-resolved="false"></xref>

    properties is strictly ***one way***. That is, there is no way to take an arbitrary <xref href="Ubiquity.NET.Llvm.Types.ITypeRef" data-throw-if-not-resolved="false"></xref>

    and re-associate it with the DebugInfoType or an implementation of this interface as there may be many such

    mappings to choose from.

    </p></div>
  example: []
  syntax:
    content: 'public class DebugType<TNative, TDebug> : IDebugType<TNative, TDebug>, ITypeRef, IEquatable<ITypeRef>, IEquatable<ITypeHandleOwner> where TNative : class, ITypeRef where TDebug : DIType'
    typeParameters:
    - id: TNative
      description: Native LLVM type
    - id: TDebug
      description: Debug type
    content.vb: Public Class DebugType(Of TNative As {Class, ITypeRef}, TDebug As DIType) Implements IDebugType(Of TNative, TDebug), ITypeRef, IEquatable(Of ITypeRef), IEquatable(Of ITypeHandleOwner)
  inheritance:
  - System.Object
  derivedClasses:
  - Ubiquity.NET.Llvm.DebugInfo.DebugArrayType
  - Ubiquity.NET.Llvm.DebugInfo.DebugBasicType
  - Ubiquity.NET.Llvm.DebugInfo.DebugFunctionType
  - Ubiquity.NET.Llvm.DebugInfo.DebugPointerType
  - Ubiquity.NET.Llvm.DebugInfo.DebugStructType
  - Ubiquity.NET.Llvm.DebugInfo.DebugUnionType
  implements:
  - Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}
  - Ubiquity.NET.Llvm.Types.ITypeRef
  - System.IEquatable{Ubiquity.NET.Llvm.Types.ITypeRef}
  - System.IEquatable{Ubiquity.NET.Llvm.Types.ITypeHandleOwner}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}.Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo
  nameWithType.vb: DebugType(Of TNative, TDebug)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug)
  name.vb: DebugType(Of TNative, TDebug)
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType
  id: DebugInfoType
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: DebugInfoType
  nameWithType: DebugType<TNative, TDebug>.DebugInfoType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.DebugInfoType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DebugInfoType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 53
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets or sets the Debug information type for this binding
  remarks: >-
    <p>Setting the debug type is only allowed when the debug type is null or <xref href="Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary" data-throw-if-not-resolved="false"></xref>

    is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>. If the debug type node is a temporary setting the type will replace all uses

    of the temporary type automatically, via <xref href="Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)" data-throw-if-not-resolved="false"></xref></p>

    <p>Since setting this property will replace all uses with (RAUW) the new value then setting this property

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> is not allowed. However, until set this property will be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a></p>
  example: []
  syntax:
    content: public TDebug? DebugInfoType { get; set; }
    parameters: []
    return:
      type: '{TDebug}'
    content.vb: Public Property DebugInfoType As TDebug
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The type is not <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or not a temporary
  implements:
  - Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.DebugInfoType
  nameWithType.vb: DebugType(Of TNative, TDebug).DebugInfoType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).DebugInfoType
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType
  id: NativeType
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: NativeType
  nameWithType: DebugType<TNative, TDebug>.NativeType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.NativeType
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: NativeType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 79
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the native LLVM type for this debug type binding
  example: []
  syntax:
    content: public TNative NativeType { get; init; }
    parameters: []
    return:
      type: '{TNative}'
    content.vb: Public Property NativeType As TNative
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType*
  implements:
  - Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.NativeType
  nameWithType.vb: DebugType(Of TNative, TDebug).NativeType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).NativeType
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSized
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSized
  id: IsSized
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsSized
  nameWithType: DebugType<TNative, TDebug>.IsSized
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsSized
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsSized
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 86
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether the type is sized
  example: []
  syntax:
    content: public bool IsSized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSized As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSized*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsSized
  nameWithType.vb: DebugType(Of TNative, TDebug).IsSized
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsSized
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Kind
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Kind
  id: Kind
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: DebugType<TNative, TDebug>.Kind
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.Kind
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Kind
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 89
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the LLVM Type kind for this type
  example: []
  syntax:
    content: public TypeKind Kind { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Types.TypeKind
    content.vb: Public ReadOnly Property Kind As TypeKind
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Kind*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.Kind
  nameWithType.vb: DebugType(Of TNative, TDebug).Kind
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).Kind
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Context
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Context
  id: Context
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: DebugType<TNative, TDebug>.Context
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.Context
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Context
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 92
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the ContextAlias that owns this type
  example: []
  syntax:
    content: public IContext Context { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.IContext
    content.vb: Public ReadOnly Property Context As IContext
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Context*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.Context
  nameWithType.vb: DebugType(Of TNative, TDebug).Context
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).Context
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IntegerBitWidth
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IntegerBitWidth
  id: IntegerBitWidth
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IntegerBitWidth
  nameWithType: DebugType<TNative, TDebug>.IntegerBitWidth
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IntegerBitWidth
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IntegerBitWidth
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 95
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the integer bit width of this type or 0 for non integer types
  example: []
  syntax:
    content: public uint IntegerBitWidth { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property IntegerBitWidth As UInteger
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IntegerBitWidth*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IntegerBitWidth
  nameWithType.vb: DebugType(Of TNative, TDebug).IntegerBitWidth
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IntegerBitWidth
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsInteger
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsInteger
  id: IsInteger
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsInteger
  nameWithType: DebugType<TNative, TDebug>.IsInteger
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsInteger
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsInteger
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 98
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether this type is an integer
  example: []
  syntax:
    content: public bool IsInteger { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInteger As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsInteger*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsInteger
  nameWithType.vb: DebugType(Of TNative, TDebug).IsInteger
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsInteger
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloat
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloat
  id: IsFloat
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsFloat
  nameWithType: DebugType<TNative, TDebug>.IsFloat
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsFloat
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsFloat
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 101
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether the type is a 32-bit IEEE floating point type
  example: []
  syntax:
    content: public bool IsFloat { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFloat As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloat*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsFloat
  nameWithType.vb: DebugType(Of TNative, TDebug).IsFloat
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsFloat
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsDouble
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsDouble
  id: IsDouble
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsDouble
  nameWithType: DebugType<TNative, TDebug>.IsDouble
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsDouble
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsDouble
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 104
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether the type is a 64-bit IEEE floating point type
  example: []
  syntax:
    content: public bool IsDouble { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDouble As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsDouble*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsDouble
  nameWithType.vb: DebugType(Of TNative, TDebug).IsDouble
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsDouble
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsVoid
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsVoid
  id: IsVoid
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsVoid
  nameWithType: DebugType<TNative, TDebug>.IsVoid
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsVoid
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsVoid
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 107
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether this type represents the void type
  example: []
  syntax:
    content: public bool IsVoid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVoid As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsVoid*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsVoid
  nameWithType.vb: DebugType(Of TNative, TDebug).IsVoid
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsVoid
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsStruct
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsStruct
  id: IsStruct
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsStruct
  nameWithType: DebugType<TNative, TDebug>.IsStruct
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsStruct
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsStruct
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 110
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether this type is a structure type
  example: []
  syntax:
    content: public bool IsStruct { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStruct As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsStruct*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsStruct
  nameWithType.vb: DebugType(Of TNative, TDebug).IsStruct
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsStruct
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsPointer
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsPointer
  id: IsPointer
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsPointer
  nameWithType: DebugType<TNative, TDebug>.IsPointer
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsPointer
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsPointer
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 113
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether this type is a pointer
  example: []
  syntax:
    content: public bool IsPointer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPointer As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsPointer*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsPointer
  nameWithType.vb: DebugType(Of TNative, TDebug).IsPointer
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsPointer
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSequence
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSequence
  id: IsSequence
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsSequence
  nameWithType: DebugType<TNative, TDebug>.IsSequence
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsSequence
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsSequence
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 116
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether this type is a sequence type
  example: []
  syntax:
    content: public bool IsSequence { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSequence As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSequence*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsSequence
  nameWithType.vb: DebugType(Of TNative, TDebug).IsSequence
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsSequence
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloatingPoint
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloatingPoint
  id: IsFloatingPoint
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: IsFloatingPoint
  nameWithType: DebugType<TNative, TDebug>.IsFloatingPoint
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsFloatingPoint
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsFloatingPoint
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 119
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value indicating whether this type is a floating point type
  example: []
  syntax:
    content: public bool IsFloatingPoint { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFloatingPoint As Boolean
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloatingPoint*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.IsFloatingPoint
  nameWithType.vb: DebugType(Of TNative, TDebug).IsFloatingPoint
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsFloatingPoint
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.GetNullValue
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.GetNullValue
  id: GetNullValue
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: GetNullValue()
  nameWithType: DebugType<TNative, TDebug>.GetNullValue()
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.GetNullValue()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetNullValue
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 122
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a null value (e.g. all bits == 0 ) for the type
  remarks: >-
    This is a getter function instead of a property as it can throw exceptions

    for types that don't support such a thing (i.e. void )
  example: []
  syntax:
    content: public Constant GetNullValue()
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: <xref href="Ubiquity.NET.Llvm.Values.Constant" data-throw-if-not-resolved="false"></xref> that represents a null (0) value of this type
    content.vb: Public Function GetNullValue() As Constant
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.GetNullValue*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.GetNullValue
  nameWithType.vb: DebugType(Of TNative, TDebug).GetNullValue()
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).GetNullValue()
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType(System.UInt32)
  id: CreateArrayType(System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: CreateArrayType(uint)
  nameWithType: DebugType<TNative, TDebug>.CreateArrayType(uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.CreateArrayType(uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateArrayType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 125
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Array type factory for an array with elements of this type
  example: []
  syntax:
    content: public IArrayType CreateArrayType(uint count)
    parameters:
    - id: count
      type: System.UInt32
      description: Number of elements in the array
    return:
      type: Ubiquity.NET.Llvm.Types.IArrayType
      description: <xref href="Ubiquity.NET.Llvm.Types.IArrayType" data-throw-if-not-resolved="false"></xref> for the array
    content.vb: Public Function CreateArrayType(count As UInteger) As IArrayType
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.CreateArrayType(System.UInt32)
  nameWithType.vb: DebugType(Of TNative, TDebug).CreateArrayType(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CreateArrayType(UInteger)
  name.vb: CreateArrayType(UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType
  id: CreatePointerType
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: CreatePointerType()
  nameWithType: DebugType<TNative, TDebug>.CreatePointerType()
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.CreatePointerType()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreatePointerType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 128
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Get a <xref href="Ubiquity.NET.Llvm.Types.IPointerType" data-throw-if-not-resolved="false"></xref> for a type that points to elements of this type in the default (0) address space
  example: []
  syntax:
    content: public IPointerType CreatePointerType()
    return:
      type: Ubiquity.NET.Llvm.Types.IPointerType
      description: <xref href="Ubiquity.NET.Llvm.Types.IPointerType" data-throw-if-not-resolved="false"></xref>corresponding to the type of a pointer that refers to elements of this type
    content.vb: Public Function CreatePointerType() As IPointerType
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType
  nameWithType.vb: DebugType(Of TNative, TDebug).CreatePointerType()
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CreatePointerType()
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType(System.UInt32)
  id: CreatePointerType(System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: CreatePointerType(uint)
  nameWithType: DebugType<TNative, TDebug>.CreatePointerType(uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.CreatePointerType(uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreatePointerType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 131
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Get a <xref href="Ubiquity.NET.Llvm.Types.IPointerType" data-throw-if-not-resolved="false"></xref> for a type that points to elements of this type in the specified address space
  example: []
  syntax:
    content: public IPointerType CreatePointerType(uint addressSpace)
    parameters:
    - id: addressSpace
      type: System.UInt32
      description: Address space for the pointer
    return:
      type: Ubiquity.NET.Llvm.Types.IPointerType
      description: <xref href="Ubiquity.NET.Llvm.Types.IPointerType" data-throw-if-not-resolved="false"></xref>corresponding to the type of a pointer that refers to elements of this type
    content.vb: Public Function CreatePointerType(addressSpace As UInteger) As IPointerType
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType*
  implements:
  - Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType(System.UInt32)
  nameWithType.vb: DebugType(Of TNative, TDebug).CreatePointerType(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CreatePointerType(UInteger)
  name.vb: CreatePointerType(UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  id: CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: CreatePointerType(ref readonly DIBuilder, uint)
  nameWithType: DebugType<TNative, TDebug>.CreatePointerType(ref readonly DIBuilder, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.CreatePointerType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreatePointerType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 134
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a pointer to this type for a given module and address space
  example: []
  syntax:
    content: public DebugPointerType CreatePointerType(ref readonly DIBuilder diBuilder, uint addressSpace)
    parameters:
    - id: diBuilder
      type: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
      description: Debug information builder to use
    - id: addressSpace
      type: System.UInt32
      description: Address space for the pointer
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugPointerType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugPointerType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreatePointerType(diBuilder As DIBuilder, addressSpace As UInteger) As DebugPointerType
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType*
  implements:
  - Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  nameWithType.vb: DebugType(Of TNative, TDebug).CreatePointerType(DIBuilder, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, UInteger)
  name.vb: CreatePointerType(DIBuilder, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  id: CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: CreateArrayType(ref readonly DIBuilder, uint, uint)
  nameWithType: DebugType<TNative, TDebug>.CreateArrayType(ref readonly DIBuilder, uint, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.CreateArrayType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, uint, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateArrayType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 146
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a type defining an array of elements of this type
  example: []
  syntax:
    content: public DebugArrayType CreateArrayType(ref readonly DIBuilder diBuilder, uint lowerBound, uint count)
    parameters:
    - id: diBuilder
      type: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
      description: Debug information builder to use
    - id: lowerBound
      type: System.UInt32
      description: Lower bound of the array
    - id: count
      type: System.UInt32
      description: Count of elements in the array
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugArrayType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugArrayType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateArrayType(diBuilder As DIBuilder, lowerBound As UInteger, count As UInteger) As DebugArrayType
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType*
  implements:
  - Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  nameWithType.vb: DebugType(Of TNative, TDebug).CreateArrayType(DIBuilder, UInteger, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, UInteger, UInteger)
  name.vb: CreateArrayType(DIBuilder, UInteger, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.op_Implicit(Ubiquity.NET.Llvm.DebugInfo.DebugType{`0,`1})~`1
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.op_Implicit(Ubiquity.NET.Llvm.DebugInfo.DebugType{`0,`1})~`1
  id: op_Implicit(Ubiquity.NET.Llvm.DebugInfo.DebugType{`0,`1})~`1
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  langs:
  - csharp
  - vb
  name: implicit operator TDebug?(DebugType<TNative, TDebug>)
  nameWithType: DebugType<TNative, TDebug>.implicit operator TDebug?(DebugType<TNative, TDebug>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.implicit operator TDebug?(Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>)
  type: Operator
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: op_Implicit
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DebugType.cs
    startLine: 159
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Converts a <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugType%602" data-throw-if-not-resolved="false"></xref> to <code class="typeparamref">TDebug</code> by accessing the <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugType%602.DebugInfoType" data-throw-if-not-resolved="false"></xref> property
  example: []
  syntax:
    content: public static implicit operator TDebug?(DebugType<TNative, TDebug> self)
    parameters:
    - id: self
      type: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
      description: The type to convert
    return:
      type: '{TDebug}'
    content.vb: Public Shared Widening Operator CType(self As DebugType(Of TNative, TDebug)) As TDebug
  overload: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.op_Implicit*
  nameWithType.vb: DebugType(Of TNative, TDebug).CType(DebugType(Of TNative, TDebug))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CType(Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug))
  name.vb: CType(DebugType(Of TNative, TDebug))
references:
- uid: Ubiquity.NET.Llvm.DebugInfo.DIType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  name: DIType
  nameWithType: DIType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIType
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_DebugInfoType
  name: DebugInfoType
  nameWithType: DebugType<TNative, TDebug>.DebugInfoType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.DebugInfoType
  nameWithType.vb: DebugType(Of TNative, TDebug).DebugInfoType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).DebugInfoType
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_NativeType
  name: NativeType
  nameWithType: DebugType<TNative, TDebug>.NativeType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.NativeType
  nameWithType.vb: DebugType(Of TNative, TDebug).NativeType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).NativeType
- uid: Ubiquity.NET.Llvm.Types.ITypeRef
  commentId: T:Ubiquity.NET.Llvm.Types.ITypeRef
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  name: ITypeRef
  nameWithType: ITypeRef
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef
- uid: Ubiquity.NET.Llvm.DebugInfo
  commentId: N:Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.DebugInfo
  nameWithType: Ubiquity.NET.Llvm.DebugInfo
  fullName: Ubiquity.NET.Llvm.DebugInfo
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}
  parent: Ubiquity.NET.Llvm.DebugInfo
  definition: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  name: IDebugType<TNative, TDebug>
  nameWithType: IDebugType<TNative, TDebug>
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>
  nameWithType.vb: IDebugType(Of TNative, TDebug)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug)
  name.vb: IDebugType(Of TNative, TDebug)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: '>'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: )
- uid: System.IEquatable{Ubiquity.NET.Llvm.Types.ITypeRef}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Types.ITypeRef}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ITypeRef>
  nameWithType: IEquatable<ITypeRef>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Types.ITypeRef>
  nameWithType.vb: IEquatable(Of ITypeRef)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Types.ITypeRef)
  name.vb: IEquatable(Of ITypeRef)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
- uid: System.IEquatable{Ubiquity.NET.Llvm.Types.ITypeHandleOwner}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Types.ITypeHandleOwner}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ITypeHandleOwner>
  nameWithType: IEquatable<ITypeHandleOwner>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Types.ITypeHandleOwner>
  nameWithType.vb: IEquatable(Of ITypeHandleOwner)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Types.ITypeHandleOwner)
  name.vb: IEquatable(Of ITypeHandleOwner)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeHandleOwner
    name: ITypeHandleOwner
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeHandleOwner
    name: ITypeHandleOwner
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType}.Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
  parent: Ubiquity.NET.Llvm.DebugInfo.DebugType
  definition: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_HasDebugInfo_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__
  name: HasDebugInfo(IDebugType<ITypeRef, DIType>)
  nameWithType: DebugType.HasDebugInfo(IDebugType<ITypeRef, DIType>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>)
  nameWithType.vb: DebugType.HasDebugInfo(IDebugType(Of ITypeRef, DIType))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType))
  name.vb: HasDebugInfo(IDebugType(Of ITypeRef, DIType))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
    name: HasDebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.DebugType.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_HasDebugInfo_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
    name: HasDebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.DebugType.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_HasDebugInfo_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.Types
  commentId: N:Ubiquity.NET.Llvm.Types
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Types
  nameWithType: Ubiquity.NET.Llvm.Types
  fullName: Ubiquity.NET.Llvm.Types
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Types
    name: Types
    href: Ubiquity.NET.Llvm.Types.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Types
    name: Types
    href: Ubiquity.NET.Llvm.Types.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  name: IDebugType<TNative, TDebug>
  nameWithType: IDebugType<TNative, TDebug>
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>
  nameWithType.vb: IDebugType(Of TNative, TDebug)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug)
  name.vb: IDebugType(Of TNative, TDebug)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: '>'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_HasDebugInfo_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__
  name: HasDebugInfo(IDebugType<ITypeRef, DIType>)
  nameWithType: DebugType.HasDebugInfo(IDebugType<ITypeRef, DIType>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType<Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType>)
  nameWithType.vb: DebugType.HasDebugInfo(IDebugType(Of ITypeRef, DIType))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of Ubiquity.NET.Llvm.Types.ITypeRef, Ubiquity.NET.Llvm.DebugInfo.DIType))
  name.vb: HasDebugInfo(IDebugType(Of ITypeRef, DIType))
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
    name: HasDebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.DebugType.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_HasDebugInfo_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DebugType.HasDebugInfo(Ubiquity.NET.Llvm.DebugInfo.IDebugType{Ubiquity.NET.Llvm.Types.ITypeRef,Ubiquity.NET.Llvm.DebugInfo.DIType})
    name: HasDebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.DebugType.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_HasDebugInfo_Ubiquity_NET_Llvm_DebugInfo_IDebugType_Ubiquity_NET_Llvm_Types_ITypeRef_Ubiquity_NET_Llvm_DebugInfo_DIType__
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2
    name: IDebugType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType.html
  name: DebugType
  nameWithType: DebugType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_IsTemporary
  name: IsTemporary
  nameWithType: MDNode.IsTemporary
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  commentId: M:Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  name: ReplaceAllUsesWith(IrMetadata)
  nameWithType: MDNode.ReplaceAllUsesWith(IrMetadata)
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.DebugInfoType
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_DebugInfoType
  name: DebugInfoType
  nameWithType: DebugType<TNative, TDebug>.DebugInfoType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.DebugInfoType
  nameWithType.vb: DebugType(Of TNative, TDebug).DebugInfoType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).DebugInfoType
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.DebugInfoType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.DebugInfoType
  parent: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}
  definition: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.DebugInfoType
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_DebugInfoType
  name: DebugInfoType
  nameWithType: IDebugType<TNative, TDebug>.DebugInfoType
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.DebugInfoType
  nameWithType.vb: IDebugType(Of TNative, TDebug).DebugInfoType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).DebugInfoType
- uid: '{TDebug}'
  commentId: '!:TDebug'
  definition: TDebug
  name: TDebug
  nameWithType: TDebug
  fullName: TDebug
- uid: Ubiquity.NET.Llvm.Metadata.MDNode
  commentId: T:Ubiquity.NET.Llvm.Metadata.MDNode
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html
  name: MDNode
  nameWithType: MDNode
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.DebugInfoType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.DebugInfoType
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_DebugInfoType
  name: DebugInfoType
  nameWithType: IDebugType<TNative, TDebug>.DebugInfoType
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.DebugInfoType
  nameWithType.vb: IDebugType(Of TNative, TDebug).DebugInfoType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).DebugInfoType
- uid: TDebug
  name: TDebug
  nameWithType: TDebug
  fullName: TDebug
- uid: Ubiquity.NET.Llvm.Metadata
  commentId: N:Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Metadata
  nameWithType: Ubiquity.NET.Llvm.Metadata
  fullName: Ubiquity.NET.Llvm.Metadata
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.NativeType
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_NativeType
  name: NativeType
  nameWithType: DebugType<TNative, TDebug>.NativeType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.NativeType
  nameWithType.vb: DebugType(Of TNative, TDebug).NativeType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).NativeType
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.NativeType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.NativeType
  parent: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}
  definition: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.NativeType
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_NativeType
  name: NativeType
  nameWithType: IDebugType<TNative, TDebug>.NativeType
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.NativeType
  nameWithType.vb: IDebugType(Of TNative, TDebug).NativeType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).NativeType
- uid: '{TNative}'
  commentId: '!:TNative'
  definition: TNative
  name: TNative
  nameWithType: TNative
  fullName: TNative
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.NativeType
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.NativeType
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_NativeType
  name: NativeType
  nameWithType: IDebugType<TNative, TDebug>.NativeType
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.NativeType
  nameWithType.vb: IDebugType(Of TNative, TDebug).NativeType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).NativeType
- uid: TNative
  name: TNative
  nameWithType: TNative
  fullName: TNative
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSized*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSized
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsSized
  name: IsSized
  nameWithType: DebugType<TNative, TDebug>.IsSized
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsSized
  nameWithType.vb: DebugType(Of TNative, TDebug).IsSized
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsSized
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsSized
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsSized
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsSized
  name: IsSized
  nameWithType: ITypeRef.IsSized
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsSized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Kind*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Kind
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_Kind
  name: Kind
  nameWithType: DebugType<TNative, TDebug>.Kind
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.Kind
  nameWithType.vb: DebugType(Of TNative, TDebug).Kind
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).Kind
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.Kind
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.Kind
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_Kind
  name: Kind
  nameWithType: ITypeRef.Kind
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.Kind
- uid: Ubiquity.NET.Llvm.Types.TypeKind
  commentId: T:Ubiquity.NET.Llvm.Types.TypeKind
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.TypeKind.html
  name: TypeKind
  nameWithType: TypeKind
  fullName: Ubiquity.NET.Llvm.Types.TypeKind
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Context*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.Context
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_Context
  name: Context
  nameWithType: DebugType<TNative, TDebug>.Context
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.Context
  nameWithType.vb: DebugType(Of TNative, TDebug).Context
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).Context
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.Context
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.Context
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_Context
  name: Context
  nameWithType: ITypeRef.Context
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.Context
- uid: Ubiquity.NET.Llvm.IContext
  commentId: T:Ubiquity.NET.Llvm.IContext
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.IContext.html
  name: IContext
  nameWithType: IContext
  fullName: Ubiquity.NET.Llvm.IContext
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IntegerBitWidth*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IntegerBitWidth
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IntegerBitWidth
  name: IntegerBitWidth
  nameWithType: DebugType<TNative, TDebug>.IntegerBitWidth
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IntegerBitWidth
  nameWithType.vb: DebugType(Of TNative, TDebug).IntegerBitWidth
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IntegerBitWidth
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IntegerBitWidth
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IntegerBitWidth
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IntegerBitWidth
  name: IntegerBitWidth
  nameWithType: ITypeRef.IntegerBitWidth
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IntegerBitWidth
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsInteger*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsInteger
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsInteger
  name: IsInteger
  nameWithType: DebugType<TNative, TDebug>.IsInteger
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsInteger
  nameWithType.vb: DebugType(Of TNative, TDebug).IsInteger
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsInteger
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsInteger
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsInteger
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsInteger
  name: IsInteger
  nameWithType: ITypeRef.IsInteger
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsInteger
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloat*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloat
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsFloat
  name: IsFloat
  nameWithType: DebugType<TNative, TDebug>.IsFloat
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsFloat
  nameWithType.vb: DebugType(Of TNative, TDebug).IsFloat
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsFloat
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsFloat
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsFloat
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsFloat
  name: IsFloat
  nameWithType: ITypeRef.IsFloat
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsFloat
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsDouble*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsDouble
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsDouble
  name: IsDouble
  nameWithType: DebugType<TNative, TDebug>.IsDouble
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsDouble
  nameWithType.vb: DebugType(Of TNative, TDebug).IsDouble
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsDouble
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsDouble
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsDouble
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsDouble
  name: IsDouble
  nameWithType: ITypeRef.IsDouble
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsDouble
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsVoid*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsVoid
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsVoid
  name: IsVoid
  nameWithType: DebugType<TNative, TDebug>.IsVoid
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsVoid
  nameWithType.vb: DebugType(Of TNative, TDebug).IsVoid
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsVoid
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsVoid
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsVoid
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsVoid
  name: IsVoid
  nameWithType: ITypeRef.IsVoid
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsVoid
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsStruct*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsStruct
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsStruct
  name: IsStruct
  nameWithType: DebugType<TNative, TDebug>.IsStruct
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsStruct
  nameWithType.vb: DebugType(Of TNative, TDebug).IsStruct
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsStruct
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsStruct
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsStruct
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsStruct
  name: IsStruct
  nameWithType: ITypeRef.IsStruct
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsStruct
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsPointer*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsPointer
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsPointer
  name: IsPointer
  nameWithType: DebugType<TNative, TDebug>.IsPointer
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsPointer
  nameWithType.vb: DebugType(Of TNative, TDebug).IsPointer
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsPointer
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsPointer
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsPointer
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsPointer
  name: IsPointer
  nameWithType: ITypeRef.IsPointer
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsPointer
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSequence*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsSequence
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsSequence
  name: IsSequence
  nameWithType: DebugType<TNative, TDebug>.IsSequence
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsSequence
  nameWithType.vb: DebugType(Of TNative, TDebug).IsSequence
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsSequence
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsSequence
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsSequence
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsSequence
  name: IsSequence
  nameWithType: ITypeRef.IsSequence
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsSequence
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloatingPoint*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.IsFloatingPoint
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_IsFloatingPoint
  name: IsFloatingPoint
  nameWithType: DebugType<TNative, TDebug>.IsFloatingPoint
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.IsFloatingPoint
  nameWithType.vb: DebugType(Of TNative, TDebug).IsFloatingPoint
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).IsFloatingPoint
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.IsFloatingPoint
  commentId: P:Ubiquity.NET.Llvm.Types.ITypeRef.IsFloatingPoint
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_IsFloatingPoint
  name: IsFloatingPoint
  nameWithType: ITypeRef.IsFloatingPoint
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.IsFloatingPoint
- uid: Ubiquity.NET.Llvm.Values.Constant
  commentId: T:Ubiquity.NET.Llvm.Values.Constant
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Constant.html
  name: Constant
  nameWithType: Constant
  fullName: Ubiquity.NET.Llvm.Values.Constant
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.GetNullValue*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.GetNullValue
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_GetNullValue
  name: GetNullValue
  nameWithType: DebugType<TNative, TDebug>.GetNullValue
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.GetNullValue
  nameWithType.vb: DebugType(Of TNative, TDebug).GetNullValue
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).GetNullValue
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.GetNullValue
  commentId: M:Ubiquity.NET.Llvm.Types.ITypeRef.GetNullValue
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_GetNullValue
  name: GetNullValue()
  nameWithType: ITypeRef.GetNullValue()
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.GetNullValue()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.GetNullValue
    name: GetNullValue
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_GetNullValue
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.GetNullValue
    name: GetNullValue
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_GetNullValue
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: Ubiquity.NET.Llvm.Types.IArrayType
  commentId: T:Ubiquity.NET.Llvm.Types.IArrayType
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.IArrayType.html
  name: IArrayType
  nameWithType: IArrayType
  fullName: Ubiquity.NET.Llvm.Types.IArrayType
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreateArrayType
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_CreateArrayType_System_UInt32_
  name: CreateArrayType
  nameWithType: DebugType<TNative, TDebug>.CreateArrayType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.CreateArrayType
  nameWithType.vb: DebugType(Of TNative, TDebug).CreateArrayType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CreateArrayType
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreateArrayType(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.Types.ITypeRef.CreateArrayType(System.UInt32)
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  isExternal: true
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreateArrayType_System_UInt32_
  name: CreateArrayType(uint)
  nameWithType: ITypeRef.CreateArrayType(uint)
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.CreateArrayType(uint)
  nameWithType.vb: ITypeRef.CreateArrayType(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.Types.ITypeRef.CreateArrayType(UInteger)
  name.vb: CreateArrayType(UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreateArrayType(System.UInt32)
    name: CreateArrayType
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreateArrayType_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreateArrayType(System.UInt32)
    name: CreateArrayType
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreateArrayType_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Ubiquity.NET.Llvm.Types.IPointerType
  commentId: T:Ubiquity.NET.Llvm.Types.IPointerType
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.IPointerType.html
  name: IPointerType
  nameWithType: IPointerType
  fullName: Ubiquity.NET.Llvm.Types.IPointerType
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.CreatePointerType
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_DebugType_2_CreatePointerType
  name: CreatePointerType
  nameWithType: DebugType<TNative, TDebug>.CreatePointerType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.CreatePointerType
  nameWithType.vb: DebugType(Of TNative, TDebug).CreatePointerType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CreatePointerType
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType
  commentId: M:Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreatePointerType
  name: CreatePointerType()
  nameWithType: ITypeRef.CreatePointerType()
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreatePointerType
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreatePointerType
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType(System.UInt32)
  parent: Ubiquity.NET.Llvm.Types.ITypeRef
  isExternal: true
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreatePointerType_System_UInt32_
  name: CreatePointerType(uint)
  nameWithType: ITypeRef.CreatePointerType(uint)
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType(uint)
  nameWithType.vb: ITypeRef.CreatePointerType(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType(UInteger)
  name.vb: CreatePointerType(UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType(System.UInt32)
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreatePointerType_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef.CreatePointerType(System.UInt32)
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html#Ubiquity_NET_Llvm_Types_ITypeRef_CreatePointerType_System_UInt32_
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugPointerType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugPointerType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DebugPointerType.html
  name: DebugPointerType
  nameWithType: DebugPointerType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugPointerType
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}
  definition: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreatePointerType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_
  name: CreatePointerType(ref readonly DIBuilder, uint)
  nameWithType: IDebugType<TNative, TDebug>.CreatePointerType(ref readonly DIBuilder, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.CreatePointerType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, uint)
  nameWithType.vb: IDebugType(Of TNative, TDebug).CreatePointerType(DIBuilder, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, UInteger)
  name.vb: CreatePointerType(DIBuilder, UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreatePointerType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_
  - name: (
  - name: ref
  - name: " "
  - name: readonly
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreatePointerType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  name: DIBuilder
  nameWithType: DIBuilder
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
  isExternal: true
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreatePointerType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_
  name: CreatePointerType(ref readonly DIBuilder, uint)
  nameWithType: IDebugType<TNative, TDebug>.CreatePointerType(ref readonly DIBuilder, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.CreatePointerType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, uint)
  nameWithType.vb: IDebugType(Of TNative, TDebug).CreatePointerType(DIBuilder, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, UInteger)
  name.vb: CreatePointerType(DIBuilder, UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreatePointerType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_
  - name: (
  - name: ref
  - name: " "
  - name: readonly
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32)
    name: CreatePointerType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreatePointerType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugArrayType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugArrayType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DebugArrayType.html
  name: DebugArrayType
  nameWithType: DebugArrayType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugArrayType
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.IDebugType{{TNative},{TDebug}}
  definition: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreateArrayType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_System_UInt32_
  name: CreateArrayType(ref readonly DIBuilder, uint, uint)
  nameWithType: IDebugType<TNative, TDebug>.CreateArrayType(ref readonly DIBuilder, uint, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.CreateArrayType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, uint, uint)
  nameWithType.vb: IDebugType(Of TNative, TDebug).CreateArrayType(DIBuilder, UInteger, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, UInteger, UInteger)
  name.vb: CreateArrayType(DIBuilder, UInteger, UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
    name: CreateArrayType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreateArrayType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_System_UInt32_
  - name: (
  - name: ref
  - name: " "
  - name: readonly
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType{`0,`1}.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
    name: CreateArrayType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreateArrayType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_System_UInt32_
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
  isExternal: true
  href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreateArrayType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_System_UInt32_
  name: CreateArrayType(ref readonly DIBuilder, uint, uint)
  nameWithType: IDebugType<TNative, TDebug>.CreateArrayType(ref readonly DIBuilder, uint, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.IDebugType<TNative, TDebug>.CreateArrayType(ref readonly Ubiquity.NET.Llvm.DebugInfo.DIBuilder, uint, uint)
  nameWithType.vb: IDebugType(Of TNative, TDebug).CreateArrayType(DIBuilder, UInteger, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.IDebugType(Of TNative, TDebug).CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder, UInteger, UInteger)
  name.vb: CreateArrayType(DIBuilder, UInteger, UInteger)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
    name: CreateArrayType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreateArrayType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_System_UInt32_
  - name: (
  - name: ref
  - name: " "
  - name: readonly
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.IDebugType`2.CreateArrayType(Ubiquity.NET.Llvm.DebugInfo.DIBuilder@,System.UInt32,System.UInt32)
    name: CreateArrayType
    href: Ubiquity.NET.Llvm.DebugInfo.IDebugType-2.html#Ubiquity_NET_Llvm_DebugInfo_IDebugType_2_CreateArrayType_Ubiquity_NET_Llvm_DebugInfo_DIBuilder__System_UInt32_System_UInt32_
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
    name: DIBuilder
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugType`2
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html
  name: DebugType<TNative, TDebug>
  nameWithType: DebugType<TNative, TDebug>
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>
  nameWithType.vb: DebugType(Of TNative, TDebug)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug)
  name.vb: DebugType(Of TNative, TDebug)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
    name: DebugType
    href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html
  - name: <
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: '>'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2
    name: DebugType
    href: Ubiquity.NET.Llvm.DebugInfo.DebugType-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TNative
  - name: ','
  - name: " "
  - name: TDebug
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugType`2.op_Implicit*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DebugType`2.op_Implicit
  name: implicit operator
  nameWithType: DebugType<TNative, TDebug>.implicit operator
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugType<TNative, TDebug>.implicit operator
  nameWithType.vb: DebugType(Of TNative, TDebug).CType
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DebugType(Of TNative, TDebug).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
