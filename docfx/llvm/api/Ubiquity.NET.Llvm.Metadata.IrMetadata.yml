### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
  commentId: T:Ubiquity.NET.Llvm.Metadata.IrMetadata
  id: IrMetadata
  parent: Ubiquity.NET.Llvm.Metadata
  children:
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
  langs:
  - csharp
  - vb
  name: IrMetadata
  nameWithType: IrMetadata
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IrMetadata
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 104
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Root of the LLVM IR Metadata hierarchy
  example: []
  syntax:
    content: 'public abstract class IrMetadata : IEquatable<IrMetadata>'
    content.vb: Public MustInherit Class IrMetadata Implements IEquatable(Of IrMetadata)
  inheritance:
  - System.Object
  derivedClasses:
  - Ubiquity.NET.Llvm.Metadata.MDNode
  - Ubiquity.NET.Llvm.Metadata.MDString
  - Ubiquity.NET.Llvm.Metadata.ValueAsMetadata
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  id: ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  langs:
  - csharp
  - vb
  name: ReplaceAllUsesWith(IrMetadata)
  nameWithType: IrMetadata.ReplaceAllUsesWith(IrMetadata)
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ReplaceAllUsesWith
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 109
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Replace all uses of this descriptor with another
  example: []
  syntax:
    content: public virtual void ReplaceAllUsesWith(IrMetadata other)
    parameters:
    - id: other
      type: Ubiquity.NET.Llvm.Metadata.IrMetadata
      description: New descriptor to replace this one with
    content.vb: Public Overridable Sub ReplaceAllUsesWith(other As IrMetadata)
  overload: Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith*
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
  id: ToString
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IrMetadata.ToString()
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ToString
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 123
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Formats the metadata as a string
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: IrMetadata as a string
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString*
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  id: Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  langs:
  - csharp
  - vb
  name: Equals(IrMetadata?)
  nameWithType: IrMetadata.Equals(IrMetadata?)
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 129
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(IrMetadata? other)
    parameters:
    - id: other
      type: Ubiquity.NET.Llvm.Metadata.IrMetadata
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As IrMetadata) As Boolean
  overload: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals*
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  nameWithType.vb: IrMetadata.Equals(IrMetadata)
  fullName.vb: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  name.vb: Equals(IrMetadata)
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
  id: Equals(System.Object)
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: IrMetadata.Equals(object?)
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 132
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals*
  nameWithType.vb: IrMetadata.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Object)
  name.vb: Equals(Object)
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
  id: GetHashCode
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: IrMetadata.GetHashCode()
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetHashCode
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 135
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode*
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  commentId: P:Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  id: Kind
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: IrMetadata.Kind
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Kind
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 138
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Gets a value indicating this metadata's kind
  example: []
  syntax:
    content: public MetadataKind Kind { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Metadata.MetadataKind
    content.vb: Public ReadOnly Property Kind As MetadataKind
  overload: Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind*
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  commentId: P:Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  id: Handle
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: IrMetadata.Handle
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Handle
    path: ../src/Ubiquity.NET.Llvm/Metadata/IrMetadata.cs
    startLine: 141
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Metadata
  summary: Gets the internal native handle
  example: []
  syntax:
    content: protected LLVMMetadataRef Handle { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Interop.LLVMMetadataRef
    content.vb: Protected ReadOnly Property Handle As LLVMMetadataRef
  overload: Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle*
references:
- uid: Ubiquity.NET.Llvm.Metadata
  commentId: N:Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Metadata
  nameWithType: Ubiquity.NET.Llvm.Metadata
  fullName: Ubiquity.NET.Llvm.Metadata
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<IrMetadata>
  nameWithType: IEquatable<IrMetadata>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Metadata.IrMetadata>
  nameWithType.vb: IEquatable(Of IrMetadata)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Metadata.IrMetadata)
  name.vb: IEquatable(Of IrMetadata)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith*
  commentId: Overload:Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  name: ReplaceAllUsesWith
  nameWithType: IrMetadata.ReplaceAllUsesWith
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.ReplaceAllUsesWith
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
  commentId: T:Ubiquity.NET.Llvm.Metadata.IrMetadata
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  name: IrMetadata
  nameWithType: IrMetadata
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString*
  commentId: Overload:Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_ToString
  name: ToString
  nameWithType: IrMetadata.ToString
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals*
  commentId: Overload:Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Equals_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  name: Equals
  nameWithType: IrMetadata.Equals
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals
- uid: System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  commentId: M:System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  parent: System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(IrMetadata)
  nameWithType: IEquatable<IrMetadata>.Equals(IrMetadata)
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Metadata.IrMetadata>.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  nameWithType.vb: IEquatable(Of IrMetadata).Equals(IrMetadata)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Metadata.IrMetadata).Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  spec.csharp:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode*
  commentId: Overload:Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_GetHashCode
  name: GetHashCode
  nameWithType: IrMetadata.GetHashCode
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind*
  commentId: Overload:Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Kind
  name: Kind
  nameWithType: IrMetadata.Kind
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
- uid: Ubiquity.NET.Llvm.Metadata.MetadataKind
  commentId: T:Ubiquity.NET.Llvm.Metadata.MetadataKind
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.MetadataKind.html
  name: MetadataKind
  nameWithType: MetadataKind
  fullName: Ubiquity.NET.Llvm.Metadata.MetadataKind
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle*
  commentId: Overload:Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Handle
  name: Handle
  nameWithType: IrMetadata.Handle
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
- uid: Ubiquity.NET.Llvm.Interop.LLVMMetadataRef
  commentId: T:Ubiquity.NET.Llvm.Interop.LLVMMetadataRef
  parent: Ubiquity.NET.Llvm.Interop
  name: LLVMMetadataRef
  nameWithType: LLVMMetadataRef
  fullName: Ubiquity.NET.Llvm.Interop.LLVMMetadataRef
- uid: Ubiquity.NET.Llvm.Interop
  commentId: N:Ubiquity.NET.Llvm.Interop
  name: Ubiquity.NET.Llvm.Interop
  nameWithType: Ubiquity.NET.Llvm.Interop
  fullName: Ubiquity.NET.Llvm.Interop
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
  - name: .
  - uid: Ubiquity.NET
    name: NET
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
  - name: .
  - uid: Ubiquity.NET.Llvm.Interop
    name: Interop
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
  - name: .
  - uid: Ubiquity.NET
    name: NET
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
  - name: .
  - uid: Ubiquity.NET.Llvm.Interop
    name: Interop
