### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.ByteOrdering
  commentId: T:Ubiquity.NET.Llvm.ByteOrdering
  id: ByteOrdering
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.ByteOrdering.BigEndian
  - Ubiquity.NET.Llvm.ByteOrdering.LittleEndian
  langs:
  - csharp
  - vb
  name: ByteOrdering
  nameWithType: ByteOrdering
  fullName: Ubiquity.NET.Llvm.ByteOrdering
  type: Enum
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/IDataLayout.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ByteOrdering
    path: ../src/Ubiquity.NET.Llvm/IDataLayout.cs
    startLine: 9
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Byte ordering for target code generation and data type layout
  example: []
  syntax:
    content: public enum ByteOrdering
    content.vb: Public Enum ByteOrdering
- uid: Ubiquity.NET.Llvm.ByteOrdering.LittleEndian
  commentId: F:Ubiquity.NET.Llvm.ByteOrdering.LittleEndian
  id: LittleEndian
  parent: Ubiquity.NET.Llvm.ByteOrdering
  langs:
  - csharp
  - vb
  name: LittleEndian
  nameWithType: ByteOrdering.LittleEndian
  fullName: Ubiquity.NET.Llvm.ByteOrdering.LittleEndian
  type: Field
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/IDataLayout.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LittleEndian
    path: ../src/Ubiquity.NET.Llvm/IDataLayout.cs
    startLine: 12
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Little-Endian layout format
  example: []
  syntax:
    content: LittleEndian = 1
    return:
      type: Ubiquity.NET.Llvm.ByteOrdering
- uid: Ubiquity.NET.Llvm.ByteOrdering.BigEndian
  commentId: F:Ubiquity.NET.Llvm.ByteOrdering.BigEndian
  id: BigEndian
  parent: Ubiquity.NET.Llvm.ByteOrdering
  langs:
  - csharp
  - vb
  name: BigEndian
  nameWithType: ByteOrdering.BigEndian
  fullName: Ubiquity.NET.Llvm.ByteOrdering.BigEndian
  type: Field
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/IDataLayout.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: BigEndian
    path: ../src/Ubiquity.NET.Llvm/IDataLayout.cs
    startLine: 15
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Big-Endian layout format
  example: []
  syntax:
    content: BigEndian = 0
    return:
      type: Ubiquity.NET.Llvm.ByteOrdering
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: Ubiquity.NET.Llvm.ByteOrdering
  commentId: T:Ubiquity.NET.Llvm.ByteOrdering
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.ByteOrdering.html
  name: ByteOrdering
  nameWithType: ByteOrdering
  fullName: Ubiquity.NET.Llvm.ByteOrdering
