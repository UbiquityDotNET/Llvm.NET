### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Values.Constant
  commentId: T:Ubiquity.NET.Llvm.Values.Constant
  id: Constant
  parent: Ubiquity.NET.Llvm.Values
  children:
  - Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  - Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Values.Constant.ToMetadata
  - Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: Constant
  fullName: Ubiquity.NET.Llvm.Values.Constant
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Constant.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Constant
    path: ../src/Ubiquity.NET.Llvm/Values/Constant.cs
    startLine: 11
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Contains an LLVM Constant value
  example: []
  syntax:
    content: 'public class Constant : User, IEquatable<Value>'
    content.vb: Public Class Constant Inherits User Implements IEquatable(Of Value)
  inheritance:
  - System.Object
  - Ubiquity.NET.Llvm.Values.Value
  - Ubiquity.NET.Llvm.Values.User
  derivedClasses:
  - Ubiquity.NET.Llvm.Values.BlockAddress
  - Ubiquity.NET.Llvm.Values.ConstantAggregate
  - Ubiquity.NET.Llvm.Values.ConstantData
  - Ubiquity.NET.Llvm.Values.ConstantExpression
  - Ubiquity.NET.Llvm.Values.GlobalValue
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  inheritedMembers:
  - Ubiquity.NET.Llvm.Values.User.Operands
  - Ubiquity.NET.Llvm.Values.User.Uses
  - Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  - Ubiquity.NET.Llvm.Values.Value.GetHashCode
  - Ubiquity.NET.Llvm.Values.Value.Name
  - Ubiquity.NET.Llvm.Values.Value.IsUndefined
  - Ubiquity.NET.Llvm.Values.Value.IsNull
  - Ubiquity.NET.Llvm.Values.Value.NativeType
  - Ubiquity.NET.Llvm.Values.Value.Context
  - Ubiquity.NET.Llvm.Values.Value.IsInstruction
  - Ubiquity.NET.Llvm.Values.Value.IsFunction
  - Ubiquity.NET.Llvm.Values.Value.IsCallSite
  - Ubiquity.NET.Llvm.Values.Value.ToString
  - Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.DebugRecords
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Ubiquity.NET.Llvm.Values.Constant.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
- uid: Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  commentId: P:Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  id: IsZeroValue
  parent: Ubiquity.NET.Llvm.Values.Constant
  langs:
  - csharp
  - vb
  name: IsZeroValue
  nameWithType: Constant.IsZeroValue
  fullName: Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Constant.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsZeroValue
    path: ../src/Ubiquity.NET.Llvm/Values/Constant.cs
    startLine: 15
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether the constant is a Zero value for the its type
  example: []
  syntax:
    content: public bool IsZeroValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsZeroValue As Boolean
  overload: Ubiquity.NET.Llvm.Values.Constant.IsZeroValue*
- uid: Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  id: NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  langs:
  - csharp
  - vb
  name: NullValueFor(ITypeRef)
  nameWithType: Constant.NullValueFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Constant.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: NullValueFor
    path: ../src/Ubiquity.NET.Llvm/Values/Constant.cs
    startLine: 20
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Create a NULL pointer for a given type
  example: []
  syntax:
    content: public static Constant NullValueFor(ITypeRef typeRef)
    parameters:
    - id: typeRef
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Type of pointer to create a null vale for
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: Constant NULL pointer of the specified type
    content.vb: Public Shared Function NullValueFor(typeRef As ITypeRef) As Constant
  overload: Ubiquity.NET.Llvm.Values.Constant.NullValueFor*
- uid: Ubiquity.NET.Llvm.Values.Constant.ToMetadata
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.ToMetadata
  id: ToMetadata
  parent: Ubiquity.NET.Llvm.Values.Constant
  langs:
  - csharp
  - vb
  name: ToMetadata()
  nameWithType: Constant.ToMetadata()
  fullName: Ubiquity.NET.Llvm.Values.Constant.ToMetadata()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Constant.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ToMetadata
    path: ../src/Ubiquity.NET.Llvm/Values/Constant.cs
    startLine: 32
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the constant as a IrMetadata node
  example: []
  syntax:
    content: public ConstantAsMetadata ToMetadata()
    return:
      type: Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata
      description: Constant value as a metadata constant
    content.vb: Public Function ToMetadata() As ConstantAsMetadata
  overload: Ubiquity.NET.Llvm.Values.Constant.ToMetadata*
- uid: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  id: AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  langs:
  - csharp
  - vb
  name: AllOnesValueFor(ITypeRef)
  nameWithType: Constant.AllOnesValueFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Constant.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AllOnesValueFor
    path: ../src/Ubiquity.NET.Llvm/Values/Constant.cs
    startLine: 38
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Creates a constant instance of <code class="paramref">typeRef</code> with all bits in the instance set to 1
  example: []
  syntax:
    content: public static Constant AllOnesValueFor(ITypeRef typeRef)
    parameters:
    - id: typeRef
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Type of value to create
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: Constant for the type with all instance bits set to 1
    content.vb: Public Shared Function AllOnesValueFor(typeRef As ITypeRef) As Constant
  overload: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor*
- uid: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  id: UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  langs:
  - csharp
  - vb
  name: UndefinedValueFor(ITypeRef)
  nameWithType: Constant.UndefinedValueFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Constant.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: UndefinedValueFor
    path: ../src/Ubiquity.NET.Llvm/Values/Constant.cs
    startLine: 46
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Creates an <xref href="Ubiquity.NET.Llvm.Values.Constant" data-throw-if-not-resolved="false"></xref> representing an undefined value for <code class="paramref">typeRef</code>
  example: []
  syntax:
    content: public static Constant UndefinedValueFor(ITypeRef typeRef)
    parameters:
    - id: typeRef
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Type to create the undefined value for
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: <xref href="Ubiquity.NET.Llvm.Values.Constant" data-throw-if-not-resolved="false"></xref> representing an undefined value of <code class="paramref">typeRef</code>
    content.vb: Public Shared Function UndefinedValueFor(typeRef As ITypeRef) As Constant
  overload: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor*
- uid: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  id: ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  langs:
  - csharp
  - vb
  name: ConstPointerToNullFor(ITypeRef)
  nameWithType: Constant.ConstPointerToNullFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Constant.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ConstPointerToNullFor
    path: ../src/Ubiquity.NET.Llvm/Values/Constant.cs
    startLine: 52
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Create a constant NULL pointer for a given type
  example: []
  syntax:
    content: public static Constant ConstPointerToNullFor(ITypeRef typeRef)
    parameters:
    - id: typeRef
      type: Ubiquity.NET.Llvm.Types.ITypeRef
      description: Type of pointer to create a null value for
    return:
      type: Ubiquity.NET.Llvm.Values.Constant
      description: Constant NULL pointer of the specified type
    content.vb: Public Shared Function ConstPointerToNullFor(typeRef As ITypeRef) As Constant
  overload: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor*
references:
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.Values.Value
  commentId: T:Ubiquity.NET.Llvm.Values.Value
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Value.html
  name: Value
  nameWithType: Value
  fullName: Ubiquity.NET.Llvm.Values.Value
- uid: Ubiquity.NET.Llvm.Values.User
  commentId: T:Ubiquity.NET.Llvm.Values.User
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.User.html
  name: User
  nameWithType: User
  fullName: Ubiquity.NET.Llvm.Values.User
- uid: System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Value>
  nameWithType: IEquatable<Value>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Values.Value>
  nameWithType.vb: IEquatable(Of Value)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Values.Value)
  name.vb: IEquatable(Of Value)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.User.Operands
  commentId: P:Ubiquity.NET.Llvm.Values.User.Operands
  parent: Ubiquity.NET.Llvm.Values.User
  href: Ubiquity.NET.Llvm.Values.User.html#Ubiquity_NET_Llvm_Values_User_Operands
  name: Operands
  nameWithType: User.Operands
  fullName: Ubiquity.NET.Llvm.Values.User.Operands
- uid: Ubiquity.NET.Llvm.Values.User.Uses
  commentId: P:Ubiquity.NET.Llvm.Values.User.Uses
  parent: Ubiquity.NET.Llvm.Values.User
  href: Ubiquity.NET.Llvm.Values.User.html#Ubiquity_NET_Llvm_Values_User_Uses
  name: Uses
  nameWithType: User.Uses
  fullName: Ubiquity.NET.Llvm.Values.User.Uses
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  name: Equals(Value)
  nameWithType: Value.Equals(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  parent: Ubiquity.NET.Llvm.Values.Value
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  name: Equals(object)
  nameWithType: Value.Equals(object)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(object)
  nameWithType.vb: Value.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.Values.Value.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.Values.Value.GetHashCode
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  name: GetHashCode()
  nameWithType: Value.GetHashCode()
  fullName: Ubiquity.NET.Llvm.Values.Value.GetHashCode()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Name
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Name
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Name
  name: Name
  nameWithType: Value.Name
  fullName: Ubiquity.NET.Llvm.Values.Value.Name
- uid: Ubiquity.NET.Llvm.Values.Value.IsUndefined
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsUndefined
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsUndefined
  name: IsUndefined
  nameWithType: Value.IsUndefined
  fullName: Ubiquity.NET.Llvm.Values.Value.IsUndefined
- uid: Ubiquity.NET.Llvm.Values.Value.IsNull
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsNull
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsNull
  name: IsNull
  nameWithType: Value.IsNull
  fullName: Ubiquity.NET.Llvm.Values.Value.IsNull
- uid: Ubiquity.NET.Llvm.Values.Value.NativeType
  commentId: P:Ubiquity.NET.Llvm.Values.Value.NativeType
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_NativeType
  name: NativeType
  nameWithType: Value.NativeType
  fullName: Ubiquity.NET.Llvm.Values.Value.NativeType
- uid: Ubiquity.NET.Llvm.Values.Value.Context
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Context
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Context
  name: Context
  nameWithType: Value.Context
  fullName: Ubiquity.NET.Llvm.Values.Value.Context
- uid: Ubiquity.NET.Llvm.Values.Value.IsInstruction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsInstruction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsInstruction
  name: IsInstruction
  nameWithType: Value.IsInstruction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsInstruction
- uid: Ubiquity.NET.Llvm.Values.Value.IsFunction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsFunction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsFunction
  name: IsFunction
  nameWithType: Value.IsFunction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsFunction
- uid: Ubiquity.NET.Llvm.Values.Value.IsCallSite
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsCallSite
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsCallSite
  name: IsCallSite
  nameWithType: Value.IsCallSite
  fullName: Ubiquity.NET.Llvm.Values.Value.IsCallSite
- uid: Ubiquity.NET.Llvm.Values.Value.ToString
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ToString
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  name: ToString()
  nameWithType: Value.ToString()
  fullName: Ubiquity.NET.Llvm.Values.Value.ToString()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  name: ReplaceAllUsesWith(Value)
  nameWithType: Value.ReplaceAllUsesWith(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.DebugRecords
  commentId: P:Ubiquity.NET.Llvm.Values.Value.DebugRecords
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_DebugRecords
  name: DebugRecords
  nameWithType: Value.DebugRecords
  fullName: Ubiquity.NET.Llvm.Values.Value.DebugRecords
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Constant.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  parent: Ubiquity.NET.Llvm.Values.ValueExtensions
  definition: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<Constant>(Constant, string)
  nameWithType: ValueExtensions.RegisterName<Constant>(Constant, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<Ubiquity.NET.Llvm.Values.Constant>(Ubiquity.NET.Llvm.Values.Constant, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of Constant)(Constant, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of Ubiquity.NET.Llvm.Values.Constant)(Ubiquity.NET.Llvm.Values.Constant, String)
  name.vb: RegisterName(Of Constant)(Constant, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.Constant,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: '>'
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.Constant,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: )
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Constant
    name: Constant
    href: Ubiquity.NET.Llvm.Values.Constant.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<T>(T, string)
  nameWithType: ValueExtensions.RegisterName<T>(T, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<T>(T, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of T)(T, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of T)(T, String)
  name.vb: RegisterName(Of T)(T, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions
  commentId: T:Ubiquity.NET.Llvm.Values.ValueExtensions
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html
  name: ValueExtensions
  nameWithType: ValueExtensions
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions
- uid: Ubiquity.NET.Llvm.Values.Constant.IsZeroValue*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_IsZeroValue
  name: IsZeroValue
  nameWithType: Constant.IsZeroValue
  fullName: Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.Values.Constant.NullValueFor*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Constant.NullValueFor
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_NullValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: NullValueFor
  nameWithType: Constant.NullValueFor
  fullName: Ubiquity.NET.Llvm.Values.Constant.NullValueFor
- uid: Ubiquity.NET.Llvm.Types.ITypeRef
  commentId: T:Ubiquity.NET.Llvm.Types.ITypeRef
  parent: Ubiquity.NET.Llvm.Types
  href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  name: ITypeRef
  nameWithType: ITypeRef
  fullName: Ubiquity.NET.Llvm.Types.ITypeRef
- uid: Ubiquity.NET.Llvm.Values.Constant
  commentId: T:Ubiquity.NET.Llvm.Values.Constant
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Constant.html
  name: Constant
  nameWithType: Constant
  fullName: Ubiquity.NET.Llvm.Values.Constant
- uid: Ubiquity.NET.Llvm.Types
  commentId: N:Ubiquity.NET.Llvm.Types
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Types
  nameWithType: Ubiquity.NET.Llvm.Types
  fullName: Ubiquity.NET.Llvm.Types
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Types
    name: Types
    href: Ubiquity.NET.Llvm.Types.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Types
    name: Types
    href: Ubiquity.NET.Llvm.Types.html
- uid: Ubiquity.NET.Llvm.Values.Constant.ToMetadata*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Constant.ToMetadata
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ToMetadata
  name: ToMetadata
  nameWithType: Constant.ToMetadata
  fullName: Ubiquity.NET.Llvm.Values.Constant.ToMetadata
- uid: Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata
  commentId: T:Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata.html
  name: ConstantAsMetadata
  nameWithType: ConstantAsMetadata
  fullName: Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata
- uid: Ubiquity.NET.Llvm.Metadata
  commentId: N:Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Metadata
  nameWithType: Ubiquity.NET.Llvm.Metadata
  fullName: Ubiquity.NET.Llvm.Metadata
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
- uid: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_AllOnesValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: AllOnesValueFor
  nameWithType: Constant.AllOnesValueFor
  fullName: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor
- uid: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_UndefinedValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: UndefinedValueFor
  nameWithType: Constant.UndefinedValueFor
  fullName: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor
- uid: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ConstPointerToNullFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: ConstPointerToNullFor
  nameWithType: Constant.ConstPointerToNullFor
  fullName: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor
