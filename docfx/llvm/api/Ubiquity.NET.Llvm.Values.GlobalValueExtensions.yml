### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Values.GlobalValueExtensions
  commentId: T:Ubiquity.NET.Llvm.Values.GlobalValueExtensions
  id: GlobalValueExtensions
  parent: Ubiquity.NET.Llvm.Values
  children:
  - Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage``1(``0,Ubiquity.NET.Llvm.Values.Linkage)
  - Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress``1(``0,Ubiquity.NET.Llvm.Values.UnnamedAddressKind)
  - Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility``1(``0,Ubiquity.NET.Llvm.Values.Visibility)
  langs:
  - csharp
  - vb
  name: GlobalValueExtensions
  nameWithType: GlobalValueExtensions
  fullName: Ubiquity.NET.Llvm.Values.GlobalValueExtensions
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GlobalValueExtensions
    path: ../src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
    startLine: 13
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Fluent style extensions for modifying properties of a <xref href="Ubiquity.NET.Llvm.Values.GlobalValue" data-throw-if-not-resolved="false"></xref>
  remarks: >-
    These are not members of <xref href="Ubiquity.NET.Llvm.Values.GlobalValue" data-throw-if-not-resolved="false"></xref> to allow the generic return type so that the return

    is for the specific type provided as input instead of the base type of GlobalValue.
  example: []
  syntax:
    content: public static class GlobalValueExtensions
    content.vb: Public Module GlobalValueExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility``1(``0,Ubiquity.NET.Llvm.Values.Visibility)
  commentId: M:Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility``1(``0,Ubiquity.NET.Llvm.Values.Visibility)
  id: Visibility``1(``0,Ubiquity.NET.Llvm.Values.Visibility)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.GlobalValueExtensions
  langs:
  - csharp
  - vb
  name: Visibility<T>(T, Visibility)
  nameWithType: GlobalValueExtensions.Visibility<T>(T, Visibility)
  fullName: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility<T>(T, Ubiquity.NET.Llvm.Values.Visibility)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Visibility
    path: ../src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
    startLine: 21
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Visibility of this global value
  example: []
  syntax:
    content: 'public static T Visibility<T>(this T self, Visibility value) where T : GlobalValue'
    parameters:
    - id: self
      type: '{T}'
      description: Value to modify
    - id: value
      type: Ubiquity.NET.Llvm.Values.Visibility
      description: New value to set
    typeParameters:
    - id: T
      description: Type of the value (Must be <xref href="Ubiquity.NET.Llvm.Values.GlobalValue" data-throw-if-not-resolved="false"></xref> or a type derived from it)
    return:
      type: '{T}'
      description: <code class="paramref">self</code> for fluent usage patterns
    content.vb: Public Shared Function Visibility(Of T As GlobalValue)(self As T, value As Visibility) As T
  overload: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility*
  seealso:
  - linkId: Ubiquity.NET.Llvm.Values.GlobalValue.Visibility
    commentId: P:Ubiquity.NET.Llvm.Values.GlobalValue.Visibility
  nameWithType.vb: GlobalValueExtensions.Visibility(Of T)(T, Visibility)
  fullName.vb: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility(Of T)(T, Ubiquity.NET.Llvm.Values.Visibility)
  name.vb: Visibility(Of T)(T, Visibility)
- uid: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage``1(``0,Ubiquity.NET.Llvm.Values.Linkage)
  commentId: M:Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage``1(``0,Ubiquity.NET.Llvm.Values.Linkage)
  id: Linkage``1(``0,Ubiquity.NET.Llvm.Values.Linkage)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.GlobalValueExtensions
  langs:
  - csharp
  - vb
  name: Linkage<T>(T, Linkage)
  nameWithType: GlobalValueExtensions.Linkage<T>(T, Linkage)
  fullName: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage<T>(T, Ubiquity.NET.Llvm.Values.Linkage)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Linkage
    path: ../src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
    startLine: 35
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Linkage specification for this symbol
  example: []
  syntax:
    content: 'public static T Linkage<T>(this T self, Linkage value) where T : GlobalValue'
    parameters:
    - id: self
      type: '{T}'
      description: Value to modify
    - id: value
      type: Ubiquity.NET.Llvm.Values.Linkage
      description: New value to set
    typeParameters:
    - id: T
      description: Type of the value (Must be <xref href="Ubiquity.NET.Llvm.Values.GlobalValue" data-throw-if-not-resolved="false"></xref> or a type derived from it)
    return:
      type: '{T}'
      description: <code class="paramref">self</code> for fluent usage patterns
    content.vb: Public Shared Function Linkage(Of T As GlobalValue)(self As T, value As Linkage) As T
  overload: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage*
  seealso:
  - linkId: Ubiquity.NET.Llvm.Values.GlobalValue.Linkage
    commentId: P:Ubiquity.NET.Llvm.Values.GlobalValue.Linkage
  nameWithType.vb: GlobalValueExtensions.Linkage(Of T)(T, Linkage)
  fullName.vb: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage(Of T)(T, Ubiquity.NET.Llvm.Values.Linkage)
  name.vb: Linkage(Of T)(T, Linkage)
- uid: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress``1(``0,Ubiquity.NET.Llvm.Values.UnnamedAddressKind)
  commentId: M:Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress``1(``0,Ubiquity.NET.Llvm.Values.UnnamedAddressKind)
  id: UnnamedAddress``1(``0,Ubiquity.NET.Llvm.Values.UnnamedAddressKind)
  isExtensionMethod: true
  parent: Ubiquity.NET.Llvm.Values.GlobalValueExtensions
  langs:
  - csharp
  - vb
  name: UnnamedAddress<T>(T, UnnamedAddressKind)
  nameWithType: GlobalValueExtensions.UnnamedAddress<T>(T, UnnamedAddressKind)
  fullName: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress<T>(T, Ubiquity.NET.Llvm.Values.UnnamedAddressKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: UnnamedAddress
    path: ../src/Ubiquity.NET.Llvm/Values/GlobalValueExtensions.cs
    startLine: 49
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Sets the UnnamedAddress property of a value
  example: []
  syntax:
    content: 'public static T UnnamedAddress<T>(this T self, UnnamedAddressKind value) where T : GlobalValue'
    parameters:
    - id: self
      type: '{T}'
      description: Value to modify
    - id: value
      type: Ubiquity.NET.Llvm.Values.UnnamedAddressKind
      description: New value to set
    typeParameters:
    - id: T
      description: Type of the value (Must be <xref href="Ubiquity.NET.Llvm.Values.GlobalValue" data-throw-if-not-resolved="false"></xref> or a type derived from it)
    return:
      type: '{T}'
      description: <code class="paramref">self</code> for fluent usage patterns
    content.vb: Public Shared Function UnnamedAddress(Of T As GlobalValue)(self As T, value As UnnamedAddressKind) As T
  overload: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress*
  seealso:
  - linkId: Ubiquity.NET.Llvm.Values.GlobalValue.UnnamedAddress
    commentId: P:Ubiquity.NET.Llvm.Values.GlobalValue.UnnamedAddress
  nameWithType.vb: GlobalValueExtensions.UnnamedAddress(Of T)(T, UnnamedAddressKind)
  fullName.vb: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress(Of T)(T, Ubiquity.NET.Llvm.Values.UnnamedAddressKind)
  name.vb: UnnamedAddress(Of T)(T, UnnamedAddressKind)
references:
- uid: Ubiquity.NET.Llvm.Values.GlobalValue
  commentId: T:Ubiquity.NET.Llvm.Values.GlobalValue
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.GlobalValue.html
  name: GlobalValue
  nameWithType: GlobalValue
  fullName: Ubiquity.NET.Llvm.Values.GlobalValue
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.Values.GlobalValue.Visibility
  commentId: P:Ubiquity.NET.Llvm.Values.GlobalValue.Visibility
  parent: Ubiquity.NET.Llvm.Values.GlobalValue
  href: Ubiquity.NET.Llvm.Values.GlobalValue.html#Ubiquity_NET_Llvm_Values_GlobalValue_Visibility
  name: Visibility
  nameWithType: GlobalValue.Visibility
  fullName: Ubiquity.NET.Llvm.Values.GlobalValue.Visibility
- uid: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility*
  commentId: Overload:Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility
  href: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.html#Ubiquity_NET_Llvm_Values_GlobalValueExtensions_Visibility__1___0_Ubiquity_NET_Llvm_Values_Visibility_
  name: Visibility
  nameWithType: GlobalValueExtensions.Visibility
  fullName: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Visibility
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Ubiquity.NET.Llvm.Values.Visibility
  commentId: T:Ubiquity.NET.Llvm.Values.Visibility
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Visibility.html
  name: Visibility
  nameWithType: Visibility
  fullName: Ubiquity.NET.Llvm.Values.Visibility
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Ubiquity.NET.Llvm.Values.GlobalValue.Linkage
  commentId: P:Ubiquity.NET.Llvm.Values.GlobalValue.Linkage
  parent: Ubiquity.NET.Llvm.Values.GlobalValue
  href: Ubiquity.NET.Llvm.Values.GlobalValue.html#Ubiquity_NET_Llvm_Values_GlobalValue_Linkage
  name: Linkage
  nameWithType: GlobalValue.Linkage
  fullName: Ubiquity.NET.Llvm.Values.GlobalValue.Linkage
- uid: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage*
  commentId: Overload:Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage
  href: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.html#Ubiquity_NET_Llvm_Values_GlobalValueExtensions_Linkage__1___0_Ubiquity_NET_Llvm_Values_Linkage_
  name: Linkage
  nameWithType: GlobalValueExtensions.Linkage
  fullName: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.Linkage
- uid: Ubiquity.NET.Llvm.Values.Linkage
  commentId: T:Ubiquity.NET.Llvm.Values.Linkage
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Linkage.html
  name: Linkage
  nameWithType: Linkage
  fullName: Ubiquity.NET.Llvm.Values.Linkage
- uid: Ubiquity.NET.Llvm.Values.GlobalValue.UnnamedAddress
  commentId: P:Ubiquity.NET.Llvm.Values.GlobalValue.UnnamedAddress
  parent: Ubiquity.NET.Llvm.Values.GlobalValue
  href: Ubiquity.NET.Llvm.Values.GlobalValue.html#Ubiquity_NET_Llvm_Values_GlobalValue_UnnamedAddress
  name: UnnamedAddress
  nameWithType: GlobalValue.UnnamedAddress
  fullName: Ubiquity.NET.Llvm.Values.GlobalValue.UnnamedAddress
- uid: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress*
  commentId: Overload:Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress
  href: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.html#Ubiquity_NET_Llvm_Values_GlobalValueExtensions_UnnamedAddress__1___0_Ubiquity_NET_Llvm_Values_UnnamedAddressKind_
  name: UnnamedAddress
  nameWithType: GlobalValueExtensions.UnnamedAddress
  fullName: Ubiquity.NET.Llvm.Values.GlobalValueExtensions.UnnamedAddress
- uid: Ubiquity.NET.Llvm.Values.UnnamedAddressKind
  commentId: T:Ubiquity.NET.Llvm.Values.UnnamedAddressKind
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.UnnamedAddressKind.html
  name: UnnamedAddressKind
  nameWithType: UnnamedAddressKind
  fullName: Ubiquity.NET.Llvm.Values.UnnamedAddressKind
