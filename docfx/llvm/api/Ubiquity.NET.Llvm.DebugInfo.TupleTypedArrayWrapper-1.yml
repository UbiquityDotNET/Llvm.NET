### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1
  id: TupleTypedArrayWrapper`1
  parent: Ubiquity.NET.Llvm.DebugInfo
  children:
  - Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Count
  - Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.GetEnumerator
  - Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Item(System.Int32)
  - Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Tuple
  langs:
  - csharp
  - vb
  name: TupleTypedArrayWrapper<T>
  nameWithType: TupleTypedArrayWrapper<T>
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: TupleTypedArrayWrapper
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
    startLine: 15
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Generic wrapper to treat an MDTuple as an array of elements of a specific type
  remarks: >-
    This implements a fa√ßade pattern that presents an <xref href="System.Collections.Generic.IReadOnlyCollection%601" data-throw-if-not-resolved="false"></xref> for the

    operands of an <xref href="Ubiquity.NET.Llvm.Metadata.MDTuple" data-throw-if-not-resolved="false"></xref>. This allows treating the tuple like an array of nodes of a

    particular type.
  example: []
  syntax:
    content: 'public class TupleTypedArrayWrapper<T> : IReadOnlyList<T?>, IReadOnlyCollection<T?>, IEnumerable<T?>, IEnumerable where T : IrMetadata'
    typeParameters:
    - id: T
      description: Type of elements
    content.vb: Public Class TupleTypedArrayWrapper(Of T As IrMetadata) Implements IReadOnlyList(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - Ubiquity.NET.Llvm.DebugInfo.DICompositeTypeArray
  - Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpressionArray
  - Ubiquity.NET.Llvm.DebugInfo.DIImportedEntityArray
  - Ubiquity.NET.Llvm.DebugInfo.DILocalVariableArray
  - Ubiquity.NET.Llvm.DebugInfo.DIMacroNodeArray
  - Ubiquity.NET.Llvm.DebugInfo.DINodeArray
  - Ubiquity.NET.Llvm.DebugInfo.DIScopeArray
  - Ubiquity.NET.Llvm.DebugInfo.DITemplateParameterArray
  - Ubiquity.NET.Llvm.DebugInfo.DITypeArray
  implements:
  - System.Collections.Generic.IReadOnlyList{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TupleTypedArrayWrapper(Of T)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T)
  name.vb: TupleTypedArrayWrapper(Of T)
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Tuple
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Tuple
  id: Tuple
  parent: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1
  langs:
  - csharp
  - vb
  name: Tuple
  nameWithType: TupleTypedArrayWrapper<T>.Tuple
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.Tuple
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Tuple
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
    startLine: 21
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the underlying tuple for this wrapper
  example: []
  syntax:
    content: public MDTuple? Tuple { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Metadata.MDTuple
    content.vb: Public ReadOnly Property Tuple As MDTuple
  overload: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Tuple*
  nameWithType.vb: TupleTypedArrayWrapper(Of T).Tuple
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).Tuple
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Count
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Count
  id: Count
  parent: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TupleTypedArrayWrapper<T>.Count
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.Count
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Count
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
    startLine: 24
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the count of operands in the <xref href="Ubiquity.NET.Llvm.Metadata.MDTuple" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Count*
  implements:
  - System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  nameWithType.vb: TupleTypedArrayWrapper(Of T).Count
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).Count
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Item(System.Int32)
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: TupleTypedArrayWrapper<T>.this[int]
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.this[int]
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: this[]
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
    startLine: 29
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets an item from the tuple
  example: []
  syntax:
    content: public T? this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Index of the item to retrieve
    return:
      type: '{T}'
      description: The element at <code class="paramref">index</code> in the tuple
    content.vb: Public ReadOnly Default Property this[](index As Integer) As T
  overload: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Item*
  implements:
  - System.Collections.Generic.IReadOnlyList{{T}}.Item(System.Int32)
  nameWithType.vb: TupleTypedArrayWrapper(Of T).this[](Integer)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).this[](Integer)
  name.vb: this[](Integer)
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.GetEnumerator
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.GetEnumerator
  id: GetEnumerator
  parent: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TupleTypedArrayWrapper<T>.GetEnumerator()
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetEnumerator
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/TupleTypedArrayWrapper.cs
    startLine: 41
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets an enumerator for the items in the <xref href="Ubiquity.NET.Llvm.Metadata.MDTuple" data-throw-if-not-resolved="false"></xref>
  remarks: If the underlying tuple is empty this is an empty enumeration
  example: []
  syntax:
    content: public IEnumerator<T?> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: Enumerator
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: TupleTypedArrayWrapper(Of T).GetEnumerator()
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).GetEnumerator()
references:
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.MDTuple
  commentId: T:Ubiquity.NET.Llvm.Metadata.MDTuple
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.MDTuple.html
  name: MDTuple
  nameWithType: MDTuple
  fullName: Ubiquity.NET.Llvm.Metadata.MDTuple
- uid: Ubiquity.NET.Llvm.DebugInfo
  commentId: N:Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.DebugInfo
  nameWithType: Ubiquity.NET.Llvm.DebugInfo
  fullName: Ubiquity.NET.Llvm.DebugInfo
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IReadOnlyList{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata
  commentId: N:Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Metadata
  nameWithType: Ubiquity.NET.Llvm.Metadata
  fullName: Ubiquity.NET.Llvm.Metadata
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Tuple*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Tuple
  href: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper-1.html#Ubiquity_NET_Llvm_DebugInfo_TupleTypedArrayWrapper_1_Tuple
  name: Tuple
  nameWithType: TupleTypedArrayWrapper<T>.Tuple
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.Tuple
  nameWithType.vb: TupleTypedArrayWrapper(Of T).Tuple
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).Tuple
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Count*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Count
  href: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper-1.html#Ubiquity_NET_Llvm_DebugInfo_TupleTypedArrayWrapper_1_Count
  name: Count
  nameWithType: TupleTypedArrayWrapper<T>.Count
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.Count
  nameWithType.vb: TupleTypedArrayWrapper(Of T).Count
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).Count
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{`0}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{{T}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Item*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.Item
  href: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper-1.html#Ubiquity_NET_Llvm_DebugInfo_TupleTypedArrayWrapper_1_Item_System_Int32_
  name: this
  nameWithType: TupleTypedArrayWrapper<T>.this
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.this
  nameWithType.vb: TupleTypedArrayWrapper(Of T).this[]
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IReadOnlyList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IReadOnlyList{{T}}
  definition: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<T>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<T>.this[int]
  nameWithType.vb: IReadOnlyList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IReadOnlyList<T>.this[int]
  fullName: System.Collections.Generic.IReadOnlyList<T>.this[int]
  nameWithType.vb: IReadOnlyList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.GetEnumerator*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper`1.GetEnumerator
  href: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper-1.html#Ubiquity_NET_Llvm_DebugInfo_TupleTypedArrayWrapper_1_GetEnumerator
  name: GetEnumerator
  nameWithType: TupleTypedArrayWrapper<T>.GetEnumerator
  fullName: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper<T>.GetEnumerator
  nameWithType.vb: TupleTypedArrayWrapper(Of T).GetEnumerator
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.TupleTypedArrayWrapper(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
