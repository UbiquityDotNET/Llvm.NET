### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  commentId: T:Ubiquity.NET.Llvm.Values.ConstantDataSequential
  id: ConstantDataSequential
  parent: Ubiquity.NET.Llvm.Values
  children:
  - Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count
  - Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString
  - Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString(System.Text.Encoding)
  - Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence
  - Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString
  - Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData
  langs:
  - csharp
  - vb
  name: ConstantDataSequential
  nameWithType: ConstantDataSequential
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ConstantDataSequential
    path: ../src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
    startLine: 20
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: >-
    A vector or array constant whose element type is a simple 1/2/4/8-byte integer

    or float/double, and whose elements are just simple data values

    (i.e. ConstantInt/ConstantFP).
  remarks: >-
    This Constant node has no operands because

    it stores all of the elements of the constant as densely packed data, instead

    of as <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>s
  example: []
  syntax:
    content: 'public class ConstantDataSequential : ConstantData, IEquatable<Value>'
    content.vb: Public Class ConstantDataSequential Inherits ConstantData Implements IEquatable(Of Value)
  inheritance:
  - System.Object
  - Ubiquity.NET.Llvm.Values.Value
  - Ubiquity.NET.Llvm.Values.User
  - Ubiquity.NET.Llvm.Values.Constant
  - Ubiquity.NET.Llvm.Values.ConstantData
  derivedClasses:
  - Ubiquity.NET.Llvm.Values.ConstantDataArray
  - Ubiquity.NET.Llvm.Values.ConstantDataVector
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  inheritedMembers:
  - Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  - Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Values.Constant.ToMetadata
  - Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  - Ubiquity.NET.Llvm.Values.User.Operands
  - Ubiquity.NET.Llvm.Values.User.Uses
  - Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  - Ubiquity.NET.Llvm.Values.Value.GetHashCode
  - Ubiquity.NET.Llvm.Values.Value.Name
  - Ubiquity.NET.Llvm.Values.Value.IsUndefined
  - Ubiquity.NET.Llvm.Values.Value.IsNull
  - Ubiquity.NET.Llvm.Values.Value.NativeType
  - Ubiquity.NET.Llvm.Values.Value.Context
  - Ubiquity.NET.Llvm.Values.Value.IsInstruction
  - Ubiquity.NET.Llvm.Values.Value.IsFunction
  - Ubiquity.NET.Llvm.Values.Value.IsCallSite
  - Ubiquity.NET.Llvm.Values.Value.ToString
  - Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.DebugRecords
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Ubiquity.NET.Llvm.Values.ConstantDataSequential.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString
  commentId: P:Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString
  id: IsString
  parent: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  langs:
  - csharp
  - vb
  name: IsString
  nameWithType: ConstantDataSequential.IsString
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsString
    path: ../src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
    startLine: 24
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether this constant is a string
  example: []
  syntax:
    content: public bool IsString { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsString As Boolean
  overload: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString*
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence
  commentId: P:Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence
  id: IsI8Sequence
  parent: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  langs:
  - csharp
  - vb
  name: IsI8Sequence
  nameWithType: ConstantDataSequential.IsI8Sequence
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsI8Sequence
    path: ../src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
    startLine: 27
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets a value indicating whether this constant is a sequence of 8bit integral values
  example: []
  syntax:
    content: public bool IsI8Sequence { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsI8Sequence As Boolean
  overload: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence*
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString
  commentId: M:Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString
  id: ExtractAsString
  parent: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  langs:
  - csharp
  - vb
  name: ExtractAsString()
  nameWithType: ConstantDataSequential.ExtractAsString()
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ExtractAsString
    path: ../src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
    startLine: 32
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Extract a string value from the constant (Assumes encoding ASCII)
  example: []
  syntax:
    content: public string ExtractAsString()
    return:
      type: System.String
      description: Extracted string
    content.vb: Public Function ExtractAsString() As String
  overload: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: If IsI8Sequence isn't <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString(System.Text.Encoding)
  commentId: M:Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString(System.Text.Encoding)
  id: ExtractAsString(System.Text.Encoding)
  parent: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  langs:
  - csharp
  - vb
  name: ExtractAsString(Encoding)
  nameWithType: ConstantDataSequential.ExtractAsString(Encoding)
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString(System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ExtractAsString
    path: ../src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
    startLine: 40
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: summary
  example: []
  syntax:
    content: public string ExtractAsString(Encoding encoding)
    parameters:
    - id: encoding
      type: System.Text.Encoding
      description: encoding
    return:
      type: System.String
      description: string
    content.vb: Public Function ExtractAsString(encoding As Encoding) As String
  overload: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString*
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData
  commentId: P:Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData
  id: RawData
  parent: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  langs:
  - csharp
  - vb
  name: RawData
  nameWithType: ConstantDataSequential.RawData
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: RawData
    path: ../src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
    startLine: 55
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the raw Data for the data sequential as a <xref href="System.ReadOnlySpan%601" data-throw-if-not-resolved="false"></xref> of <xref href="System.Byte" data-throw-if-not-resolved="false"></xref>
  remarks: >-
    This retrieves the underlying data, which may be empty, independent of the actual element type. Thus,

    issues of endian mismatch can occur between host assumptions and target. Thus, caution is warranted

    when using this property.
  example: []
  syntax:
    content: public ReadOnlySpan<byte> RawData { get; }
    parameters: []
    return:
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public ReadOnly Property RawData As ReadOnlySpan(Of Byte)
  overload: Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData*
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count
  commentId: P:Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count
  id: Count
  parent: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ConstantDataSequential.Count
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Count
    path: ../src/Ubiquity.NET.Llvm/Values/ConstantDataSequential.cs
    startLine: 67
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the count of elements in this <xref href="Ubiquity.NET.Llvm.Values.ConstantDataSequential" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public uint Count { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property Count As UInteger
  overload: Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count*
references:
- uid: Ubiquity.NET.Llvm.Values.Value
  commentId: T:Ubiquity.NET.Llvm.Values.Value
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Value.html
  name: Value
  nameWithType: Value
  fullName: Ubiquity.NET.Llvm.Values.Value
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.Values.User
  commentId: T:Ubiquity.NET.Llvm.Values.User
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.User.html
  name: User
  nameWithType: User
  fullName: Ubiquity.NET.Llvm.Values.User
- uid: Ubiquity.NET.Llvm.Values.Constant
  commentId: T:Ubiquity.NET.Llvm.Values.Constant
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Constant.html
  name: Constant
  nameWithType: Constant
  fullName: Ubiquity.NET.Llvm.Values.Constant
- uid: Ubiquity.NET.Llvm.Values.ConstantData
  commentId: T:Ubiquity.NET.Llvm.Values.ConstantData
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ConstantData.html
  name: ConstantData
  nameWithType: ConstantData
  fullName: Ubiquity.NET.Llvm.Values.ConstantData
- uid: System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Value>
  nameWithType: IEquatable<Value>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Values.Value>
  nameWithType.vb: IEquatable(Of Value)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Values.Value)
  name.vb: IEquatable(Of Value)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  commentId: P:Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
  parent: Ubiquity.NET.Llvm.Values.Constant
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_IsZeroValue
  name: IsZeroValue
  nameWithType: Constant.IsZeroValue
  fullName: Ubiquity.NET.Llvm.Values.Constant.IsZeroValue
- uid: Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_NullValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: NullValueFor(ITypeRef)
  nameWithType: Constant.NullValueFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: NullValueFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_NullValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Constant.NullValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: NullValueFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_NullValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Constant.ToMetadata
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.ToMetadata
  parent: Ubiquity.NET.Llvm.Values.Constant
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ToMetadata
  name: ToMetadata()
  nameWithType: Constant.ToMetadata()
  fullName: Ubiquity.NET.Llvm.Values.Constant.ToMetadata()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Constant.ToMetadata
    name: ToMetadata
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ToMetadata
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Constant.ToMetadata
    name: ToMetadata
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ToMetadata
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_AllOnesValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: AllOnesValueFor(ITypeRef)
  nameWithType: Constant.AllOnesValueFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: AllOnesValueFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_AllOnesValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Constant.AllOnesValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: AllOnesValueFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_AllOnesValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_UndefinedValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: UndefinedValueFor(ITypeRef)
  nameWithType: Constant.UndefinedValueFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: UndefinedValueFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_UndefinedValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Constant.UndefinedValueFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: UndefinedValueFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_UndefinedValueFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  commentId: M:Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  parent: Ubiquity.NET.Llvm.Values.Constant
  href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ConstPointerToNullFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  name: ConstPointerToNullFor(ITypeRef)
  nameWithType: Constant.ConstPointerToNullFor(ITypeRef)
  fullName: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: ConstPointerToNullFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ConstPointerToNullFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Constant.ConstPointerToNullFor(Ubiquity.NET.Llvm.Types.ITypeRef)
    name: ConstPointerToNullFor
    href: Ubiquity.NET.Llvm.Values.Constant.html#Ubiquity_NET_Llvm_Values_Constant_ConstPointerToNullFor_Ubiquity_NET_Llvm_Types_ITypeRef_
  - name: (
  - uid: Ubiquity.NET.Llvm.Types.ITypeRef
    name: ITypeRef
    href: Ubiquity.NET.Llvm.Types.ITypeRef.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.User.Operands
  commentId: P:Ubiquity.NET.Llvm.Values.User.Operands
  parent: Ubiquity.NET.Llvm.Values.User
  href: Ubiquity.NET.Llvm.Values.User.html#Ubiquity_NET_Llvm_Values_User_Operands
  name: Operands
  nameWithType: User.Operands
  fullName: Ubiquity.NET.Llvm.Values.User.Operands
- uid: Ubiquity.NET.Llvm.Values.User.Uses
  commentId: P:Ubiquity.NET.Llvm.Values.User.Uses
  parent: Ubiquity.NET.Llvm.Values.User
  href: Ubiquity.NET.Llvm.Values.User.html#Ubiquity_NET_Llvm_Values_User_Uses
  name: Uses
  nameWithType: User.Uses
  fullName: Ubiquity.NET.Llvm.Values.User.Uses
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  name: Equals(Value)
  nameWithType: Value.Equals(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  parent: Ubiquity.NET.Llvm.Values.Value
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  name: Equals(object)
  nameWithType: Value.Equals(object)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(object)
  nameWithType.vb: Value.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.Values.Value.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.Values.Value.GetHashCode
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  name: GetHashCode()
  nameWithType: Value.GetHashCode()
  fullName: Ubiquity.NET.Llvm.Values.Value.GetHashCode()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Name
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Name
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Name
  name: Name
  nameWithType: Value.Name
  fullName: Ubiquity.NET.Llvm.Values.Value.Name
- uid: Ubiquity.NET.Llvm.Values.Value.IsUndefined
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsUndefined
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsUndefined
  name: IsUndefined
  nameWithType: Value.IsUndefined
  fullName: Ubiquity.NET.Llvm.Values.Value.IsUndefined
- uid: Ubiquity.NET.Llvm.Values.Value.IsNull
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsNull
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsNull
  name: IsNull
  nameWithType: Value.IsNull
  fullName: Ubiquity.NET.Llvm.Values.Value.IsNull
- uid: Ubiquity.NET.Llvm.Values.Value.NativeType
  commentId: P:Ubiquity.NET.Llvm.Values.Value.NativeType
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_NativeType
  name: NativeType
  nameWithType: Value.NativeType
  fullName: Ubiquity.NET.Llvm.Values.Value.NativeType
- uid: Ubiquity.NET.Llvm.Values.Value.Context
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Context
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Context
  name: Context
  nameWithType: Value.Context
  fullName: Ubiquity.NET.Llvm.Values.Value.Context
- uid: Ubiquity.NET.Llvm.Values.Value.IsInstruction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsInstruction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsInstruction
  name: IsInstruction
  nameWithType: Value.IsInstruction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsInstruction
- uid: Ubiquity.NET.Llvm.Values.Value.IsFunction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsFunction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsFunction
  name: IsFunction
  nameWithType: Value.IsFunction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsFunction
- uid: Ubiquity.NET.Llvm.Values.Value.IsCallSite
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsCallSite
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsCallSite
  name: IsCallSite
  nameWithType: Value.IsCallSite
  fullName: Ubiquity.NET.Llvm.Values.Value.IsCallSite
- uid: Ubiquity.NET.Llvm.Values.Value.ToString
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ToString
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  name: ToString()
  nameWithType: Value.ToString()
  fullName: Ubiquity.NET.Llvm.Values.Value.ToString()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  name: ReplaceAllUsesWith(Value)
  nameWithType: Value.ReplaceAllUsesWith(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.DebugRecords
  commentId: P:Ubiquity.NET.Llvm.Values.Value.DebugRecords
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_DebugRecords
  name: DebugRecords
  nameWithType: Value.DebugRecords
  fullName: Ubiquity.NET.Llvm.Values.Value.DebugRecords
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  parent: Ubiquity.NET.Llvm.Values.ValueExtensions
  definition: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<ConstantDataSequential>(ConstantDataSequential, string)
  nameWithType: ValueExtensions.RegisterName<ConstantDataSequential>(ConstantDataSequential, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<Ubiquity.NET.Llvm.Values.ConstantDataSequential>(Ubiquity.NET.Llvm.Values.ConstantDataSequential, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of ConstantDataSequential)(ConstantDataSequential, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of Ubiquity.NET.Llvm.Values.ConstantDataSequential)(Ubiquity.NET.Llvm.Values.ConstantDataSequential, String)
  name.vb: RegisterName(Of ConstantDataSequential)(ConstantDataSequential, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.ConstantDataSequential,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential
    name: ConstantDataSequential
    href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html
  - name: '>'
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential
    name: ConstantDataSequential
    href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.ConstantDataSequential,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential
    name: ConstantDataSequential
    href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html
  - name: )
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential
    name: ConstantDataSequential
    href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<T>(T, string)
  nameWithType: ValueExtensions.RegisterName<T>(T, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<T>(T, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of T)(T, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of T)(T, String)
  name.vb: RegisterName(Of T)(T, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions
  commentId: T:Ubiquity.NET.Llvm.Values.ValueExtensions
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html
  name: ValueExtensions
  nameWithType: ValueExtensions
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString*
  commentId: Overload:Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString
  href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html#Ubiquity_NET_Llvm_Values_ConstantDataSequential_IsString
  name: IsString
  nameWithType: ConstantDataSequential.IsString
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence*
  commentId: Overload:Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence
  href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html#Ubiquity_NET_Llvm_Values_ConstantDataSequential_IsI8Sequence
  name: IsI8Sequence
  nameWithType: ConstantDataSequential.IsI8Sequence
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.IsI8Sequence
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString*
  commentId: Overload:Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString
  href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html#Ubiquity_NET_Llvm_Values_ConstantDataSequential_ExtractAsString
  name: ExtractAsString
  nameWithType: ConstantDataSequential.ExtractAsString
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.ExtractAsString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData*
  commentId: Overload:Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData
  href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html#Ubiquity_NET_Llvm_Values_ConstantDataSequential_RawData
  name: RawData
  nameWithType: ConstantDataSequential.RawData
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.RawData
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential
  commentId: T:Ubiquity.NET.Llvm.Values.ConstantDataSequential
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html
  name: ConstantDataSequential
  nameWithType: ConstantDataSequential
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential
- uid: Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count*
  commentId: Overload:Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count
  href: Ubiquity.NET.Llvm.Values.ConstantDataSequential.html#Ubiquity_NET_Llvm_Values_ConstantDataSequential_Count
  name: Count
  nameWithType: ConstantDataSequential.Count
  fullName: Ubiquity.NET.Llvm.Values.ConstantDataSequential.Count
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
