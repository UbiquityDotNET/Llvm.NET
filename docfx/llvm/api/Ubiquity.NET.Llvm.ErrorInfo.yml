### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.ErrorInfo
  commentId: T:Ubiquity.NET.Llvm.ErrorInfo
  id: ErrorInfo
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.ErrorInfo.Create(System.Exception)
  - Ubiquity.NET.Llvm.ErrorInfo.Create(System.String)
  - Ubiquity.NET.Llvm.ErrorInfo.Dispose
  - Ubiquity.NET.Llvm.ErrorInfo.Failed
  - Ubiquity.NET.Llvm.ErrorInfo.IsDisposed
  - Ubiquity.NET.Llvm.ErrorInfo.Success
  - Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed
  - Ubiquity.NET.Llvm.ErrorInfo.ToString
  langs:
  - csharp
  - vb
  name: ErrorInfo
  nameWithType: ErrorInfo
  fullName: Ubiquity.NET.Llvm.ErrorInfo
  type: Struct
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ErrorInfo
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 13
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Represents the success or failure of an operation with "try" semantics
  remarks: >-
    In addition to the <xref href="Ubiquity.NET.Llvm.ErrorInfo.Success" data-throw-if-not-resolved="false"></xref> and <xref href="Ubiquity.NET.Llvm.ErrorInfo.Failed" data-throw-if-not-resolved="false"></xref> states this also tracks

    any error messages in the event of a failure.
  example: []
  syntax:
    content: public readonly ref struct ErrorInfo
    content.vb: Public Structure ErrorInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.ErrorInfo.Success
  commentId: P:Ubiquity.NET.Llvm.ErrorInfo.Success
  id: Success
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: ErrorInfo.Success
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Success
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Success
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 16
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a value indicating whether this instance represents success
  example: []
  syntax:
    content: public bool Success { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Success As Boolean
  overload: Ubiquity.NET.Llvm.ErrorInfo.Success*
- uid: Ubiquity.NET.Llvm.ErrorInfo.Failed
  commentId: P:Ubiquity.NET.Llvm.ErrorInfo.Failed
  id: Failed
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: Failed
  nameWithType: ErrorInfo.Failed
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Failed
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Failed
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 27
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a value indicating whether this instance represents a failure
  example: []
  syntax:
    content: public bool Failed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Failed As Boolean
  overload: Ubiquity.NET.Llvm.ErrorInfo.Failed*
- uid: Ubiquity.NET.Llvm.ErrorInfo.IsDisposed
  commentId: P:Ubiquity.NET.Llvm.ErrorInfo.IsDisposed
  id: IsDisposed
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: ErrorInfo.IsDisposed
  fullName: Ubiquity.NET.Llvm.ErrorInfo.IsDisposed
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsDisposed
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 30
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a value indicating whether this instance is disposed
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: Ubiquity.NET.Llvm.ErrorInfo.IsDisposed*
- uid: Ubiquity.NET.Llvm.ErrorInfo.ToString
  commentId: M:Ubiquity.NET.Llvm.ErrorInfo.ToString
  id: ToString
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ErrorInfo.ToString()
  fullName: Ubiquity.NET.Llvm.ErrorInfo.ToString()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ToString
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 33
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Ubiquity.NET.Llvm.ErrorInfo.ToString*
- uid: Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed
  commentId: M:Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed
  id: ThrowIfFailed
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: ThrowIfFailed()
  nameWithType: ErrorInfo.ThrowIfFailed()
  fullName: Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ThrowIfFailed
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 45
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Throws an exception if this instance is a failure result (<xref href="Ubiquity.NET.Llvm.ErrorInfo.Failed" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>)
  remarks: The <xref href="System.Exception.Message" data-throw-if-not-resolved="false"></xref> is set to the text of this error result.
  example: []
  syntax:
    content: public void ThrowIfFailed()
    content.vb: Public Sub ThrowIfFailed()
  overload: Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed*
  exceptions:
  - type: Ubiquity.NET.Llvm.InternalCodeGeneratorException
    commentId: T:Ubiquity.NET.Llvm.InternalCodeGeneratorException
    description: <xref href="Ubiquity.NET.Llvm.ErrorInfo.Failed" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
- uid: Ubiquity.NET.Llvm.ErrorInfo.Dispose
  commentId: M:Ubiquity.NET.Llvm.ErrorInfo.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ErrorInfo.Dispose()
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 56
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Releases the underlying LLVM handle
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.ErrorInfo.Dispose*
- uid: Ubiquity.NET.Llvm.ErrorInfo.Create(System.String)
  commentId: M:Ubiquity.NET.Llvm.ErrorInfo.Create(System.String)
  id: Create(System.String)
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: Create(string)
  nameWithType: ErrorInfo.Create(string)
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Create(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Create
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 64
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Factory function to create a new <xref href="Ubiquity.NET.Llvm.ErrorInfo" data-throw-if-not-resolved="false"></xref> from a string
  example: []
  syntax:
    content: public static ErrorInfo Create(string msg)
    parameters:
    - id: msg
      type: System.String
      description: message for the error
    return:
      type: Ubiquity.NET.Llvm.ErrorInfo
      description: Newly constructed <xref href="Ubiquity.NET.Llvm.ErrorInfo" data-throw-if-not-resolved="false"></xref> with the provided message
    content.vb: Public Shared Function Create(msg As String) As ErrorInfo
  overload: Ubiquity.NET.Llvm.ErrorInfo.Create*
  nameWithType.vb: ErrorInfo.Create(String)
  fullName.vb: Ubiquity.NET.Llvm.ErrorInfo.Create(String)
  name.vb: Create(String)
- uid: Ubiquity.NET.Llvm.ErrorInfo.Create(System.Exception)
  commentId: M:Ubiquity.NET.Llvm.ErrorInfo.Create(System.Exception)
  id: Create(System.Exception)
  parent: Ubiquity.NET.Llvm.ErrorInfo
  langs:
  - csharp
  - vb
  name: Create(Exception)
  nameWithType: ErrorInfo.Create(Exception)
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Create(System.Exception)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ErrorInfo.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Create
    path: ../src/Ubiquity.NET.Llvm/ErrorInfo.cs
    startLine: 80
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Factory function to create a new <xref href="Ubiquity.NET.Llvm.ErrorInfo" data-throw-if-not-resolved="false"></xref> from an exception
  remarks: >-
    <div class="IMPORTANT"><h5>important</h5><p>

    It is important to note that this will convert a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> for <code class="paramref">ex</code> into

    a failed result with an empty string. This is to prevent exception within a catch handler. This

    condition is asserted in a debug build so that any attempts to provide a null value are caught and

    fixed.

    </p></div>
  example: []
  syntax:
    content: public static ErrorInfo Create(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
      description: Exception to create an instance from
    return:
      type: Ubiquity.NET.Llvm.ErrorInfo
      description: Newly constructed <xref href="Ubiquity.NET.Llvm.ErrorInfo" data-throw-if-not-resolved="false"></xref> with the message from <code class="paramref">ex</code>
    content.vb: Public Shared Function Create(ex As Exception) As ErrorInfo
  overload: Ubiquity.NET.Llvm.ErrorInfo.Create*
references:
- uid: Ubiquity.NET.Llvm.ErrorInfo.Success
  commentId: P:Ubiquity.NET.Llvm.ErrorInfo.Success
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_Success
  name: Success
  nameWithType: ErrorInfo.Success
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Success
- uid: Ubiquity.NET.Llvm.ErrorInfo.Failed
  commentId: P:Ubiquity.NET.Llvm.ErrorInfo.Failed
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_Failed
  name: Failed
  nameWithType: ErrorInfo.Failed
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Failed
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.ErrorInfo.Success*
  commentId: Overload:Ubiquity.NET.Llvm.ErrorInfo.Success
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_Success
  name: Success
  nameWithType: ErrorInfo.Success
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Success
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.ErrorInfo.Failed*
  commentId: Overload:Ubiquity.NET.Llvm.ErrorInfo.Failed
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_Failed
  name: Failed
  nameWithType: ErrorInfo.Failed
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Failed
- uid: Ubiquity.NET.Llvm.ErrorInfo.IsDisposed*
  commentId: Overload:Ubiquity.NET.Llvm.ErrorInfo.IsDisposed
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_IsDisposed
  name: IsDisposed
  nameWithType: ErrorInfo.IsDisposed
  fullName: Ubiquity.NET.Llvm.ErrorInfo.IsDisposed
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.ErrorInfo.ToString*
  commentId: Overload:Ubiquity.NET.Llvm.ErrorInfo.ToString
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_ToString
  name: ToString
  nameWithType: ErrorInfo.ToString
  fullName: Ubiquity.NET.Llvm.ErrorInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception.message
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: Ubiquity.NET.Llvm.InternalCodeGeneratorException
  commentId: T:Ubiquity.NET.Llvm.InternalCodeGeneratorException
  href: Ubiquity.NET.Llvm.InternalCodeGeneratorException.html
  name: InternalCodeGeneratorException
  nameWithType: InternalCodeGeneratorException
  fullName: Ubiquity.NET.Llvm.InternalCodeGeneratorException
- uid: Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed*
  commentId: Overload:Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_ThrowIfFailed
  name: ThrowIfFailed
  nameWithType: ErrorInfo.ThrowIfFailed
  fullName: Ubiquity.NET.Llvm.ErrorInfo.ThrowIfFailed
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Ubiquity.NET.Llvm.ErrorInfo.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.ErrorInfo.Dispose
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_Dispose
  name: Dispose
  nameWithType: ErrorInfo.Dispose
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Dispose
- uid: Ubiquity.NET.Llvm.ErrorInfo
  commentId: T:Ubiquity.NET.Llvm.ErrorInfo
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.ErrorInfo.html
  name: ErrorInfo
  nameWithType: ErrorInfo
  fullName: Ubiquity.NET.Llvm.ErrorInfo
- uid: Ubiquity.NET.Llvm.ErrorInfo.Create*
  commentId: Overload:Ubiquity.NET.Llvm.ErrorInfo.Create
  href: Ubiquity.NET.Llvm.ErrorInfo.html#Ubiquity_NET_Llvm_ErrorInfo_Create_System_String_
  name: Create
  nameWithType: ErrorInfo.Create
  fullName: Ubiquity.NET.Llvm.ErrorInfo.Create
