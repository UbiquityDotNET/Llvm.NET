### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DISubRange
  id: DISubRange
  parent: Ubiquity.NET.Llvm.DebugInfo
  children:
  - Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
  - Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound
  - Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
  langs:
  - csharp
  - vb
  name: DISubRange
  nameWithType: DISubRange
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DISubRange
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
    startLine: 10
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Sub range
  example: []
  syntax:
    content: 'public class DISubRange : DINode, IEquatable<IrMetadata>'
    content.vb: Public Class DISubRange Inherits DINode Implements IEquatable(Of IrMetadata)
  seealso:
  - linkType: HRef
    linkId: xref:llvm_langref#disubrange
    altText: LLVM DISubRange
  inheritance:
  - System.Object
  - Ubiquity.NET.Llvm.Metadata.IrMetadata
  - Ubiquity.NET.Llvm.Metadata.MDNode
  - Ubiquity.NET.Llvm.DebugInfo.DINode
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}
  inheritedMembers:
  - Ubiquity.NET.Llvm.DebugInfo.DINode.Tag
  - Ubiquity.NET.Llvm.Metadata.MDNode.Context
  - Ubiquity.NET.Llvm.Metadata.MDNode.IsDeleted
  - Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary
  - Ubiquity.NET.Llvm.Metadata.MDNode.IsResolved
  - Ubiquity.NET.Llvm.Metadata.MDNode.IsUniqued
  - Ubiquity.NET.Llvm.Metadata.MDNode.IsDistinct
  - Ubiquity.NET.Llvm.Metadata.MDNode.Operands
  - Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  - Ubiquity.NET.Llvm.Metadata.MDNode.GetOperand``1(System.Int32)
  - Ubiquity.NET.Llvm.Metadata.MDNode.GetOperandString(System.Int32)
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  - Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound
  id: LowerBound
  parent: Ubiquity.NET.Llvm.DebugInfo.DISubRange
  langs:
  - csharp
  - vb
  name: LowerBound
  nameWithType: DISubRange.LowerBound
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LowerBound
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
    startLine: 14
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a value for the lower bound of the range
  example: []
  syntax:
    content: public long LowerBound { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property LowerBound As Long
  overload: Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound*
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
  id: ConstantCount
  parent: Ubiquity.NET.Llvm.DebugInfo.DISubRange
  langs:
  - csharp
  - vb
  name: ConstantCount
  nameWithType: DISubRange.ConstantCount
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ConstantCount
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
    startLine: 23
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a, potentially null, constant value for the count of the subrange
  remarks: >-
    Count (length) of a DISubrange is either a <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref>

    wrapped in a <xref href="Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata" data-throw-if-not-resolved="false"></xref> or it is a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIVariable" data-throw-if-not-resolved="false"></xref>. This property

    extracts the count as a constant integral value (if present). If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>

    then <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount" data-throw-if-not-resolved="false"></xref> is not. (and vice versa)
  example: []
  syntax:
    content: public long? ConstantCount { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public ReadOnly Property ConstantCount As Long?
  overload: Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount*
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
  id: VariableCount
  parent: Ubiquity.NET.Llvm.DebugInfo.DISubRange
  langs:
  - csharp
  - vb
  name: VariableCount
  nameWithType: DISubRange.VariableCount
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: VariableCount
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DISubRange.cs
    startLine: 33
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets a, potentially null, <xref href="Ubiquity.NET.Llvm.DebugInfo.DIVariable" data-throw-if-not-resolved="false"></xref> for the count of the subrange
  remarks: >-
    Count (length) of a DISubrange is either a <xref href="Ubiquity.NET.Llvm.Values.ConstantInt" data-throw-if-not-resolved="false"></xref>

    wrapped in a <xref href="Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata" data-throw-if-not-resolved="false"></xref> or it is a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIVariable" data-throw-if-not-resolved="false"></xref>. This property

    extracts the count as a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIVariable" data-throw-if-not-resolved="false"></xref> value (if present). If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>

    then <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount" data-throw-if-not-resolved="false"></xref> is not. (and vice versa)
  example: []
  syntax:
    content: public DIVariable? VariableCount { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIVariable
    content.vb: Public ReadOnly Property VariableCount As DIVariable
  overload: Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount*
references:
- uid: Ubiquity.NET.Llvm.DebugInfo
  commentId: N:Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.DebugInfo
  nameWithType: Ubiquity.NET.Llvm.DebugInfo
  fullName: Ubiquity.NET.Llvm.DebugInfo
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
  commentId: T:Ubiquity.NET.Llvm.Metadata.IrMetadata
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  name: IrMetadata
  nameWithType: IrMetadata
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata
- uid: Ubiquity.NET.Llvm.Metadata.MDNode
  commentId: T:Ubiquity.NET.Llvm.Metadata.MDNode
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html
  name: MDNode
  nameWithType: MDNode
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode
- uid: Ubiquity.NET.Llvm.DebugInfo.DINode
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DINode
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DINode.html
  name: DINode
  nameWithType: DINode
  fullName: Ubiquity.NET.Llvm.DebugInfo.DINode
- uid: System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Metadata.IrMetadata}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<IrMetadata>
  nameWithType: IEquatable<IrMetadata>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Metadata.IrMetadata>
  nameWithType.vb: IEquatable(Of IrMetadata)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Metadata.IrMetadata)
  name.vb: IEquatable(Of IrMetadata)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DINode.Tag
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DINode.Tag
  parent: Ubiquity.NET.Llvm.DebugInfo.DINode
  href: Ubiquity.NET.Llvm.DebugInfo.DINode.html#Ubiquity_NET_Llvm_DebugInfo_DINode_Tag
  name: Tag
  nameWithType: DINode.Tag
  fullName: Ubiquity.NET.Llvm.DebugInfo.DINode.Tag
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.Context
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.Context
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_Context
  name: Context
  nameWithType: MDNode.Context
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.Context
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.IsDeleted
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.IsDeleted
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_IsDeleted
  name: IsDeleted
  nameWithType: MDNode.IsDeleted
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.IsDeleted
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_IsTemporary
  name: IsTemporary
  nameWithType: MDNode.IsTemporary
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.IsTemporary
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.IsResolved
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.IsResolved
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_IsResolved
  name: IsResolved
  nameWithType: MDNode.IsResolved
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.IsResolved
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.IsUniqued
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.IsUniqued
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_IsUniqued
  name: IsUniqued
  nameWithType: MDNode.IsUniqued
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.IsUniqued
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.IsDistinct
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.IsDistinct
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_IsDistinct
  name: IsDistinct
  nameWithType: MDNode.IsDistinct
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.IsDistinct
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.Operands
  commentId: P:Ubiquity.NET.Llvm.Metadata.MDNode.Operands
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_Operands
  name: Operands
  nameWithType: MDNode.Operands
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.Operands
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  commentId: M:Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  name: ReplaceAllUsesWith(IrMetadata)
  nameWithType: MDNode.ReplaceAllUsesWith(IrMetadata)
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperand``1(System.Int32)
  commentId: M:Ubiquity.NET.Llvm.Metadata.MDNode.GetOperand``1(System.Int32)
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  isExternal: true
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_GetOperand__1_System_Int32_
  name: GetOperand<T>(int)
  nameWithType: MDNode.GetOperand<T>(int)
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperand<T>(int)
  nameWithType.vb: MDNode.GetOperand(Of T)(Integer)
  fullName.vb: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperand(Of T)(Integer)
  name.vb: GetOperand(Of T)(Integer)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperand``1(System.Int32)
    name: GetOperand
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_GetOperand__1_System_Int32_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperand``1(System.Int32)
    name: GetOperand
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_GetOperand__1_System_Int32_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperandString(System.Int32)
  commentId: M:Ubiquity.NET.Llvm.Metadata.MDNode.GetOperandString(System.Int32)
  parent: Ubiquity.NET.Llvm.Metadata.MDNode
  isExternal: true
  href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_GetOperandString_System_Int32_
  name: GetOperandString(int)
  nameWithType: MDNode.GetOperandString(int)
  fullName: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperandString(int)
  nameWithType.vb: MDNode.GetOperandString(Integer)
  fullName.vb: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperandString(Integer)
  name.vb: GetOperandString(Integer)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperandString(System.Int32)
    name: GetOperandString
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_GetOperandString_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.MDNode.GetOperandString(System.Int32)
    name: GetOperandString
    href: Ubiquity.NET.Llvm.Metadata.MDNode.html#Ubiquity_NET_Llvm_Metadata_MDNode_GetOperandString_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_ToString
  name: ToString()
  nameWithType: IrMetadata.ToString()
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_ToString
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Equals_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  name: Equals(IrMetadata)
  nameWithType: IrMetadata.Equals(IrMetadata)
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: Equals
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Equals_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Ubiquity.NET.Llvm.Metadata.IrMetadata)
    name: Equals
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Equals_Ubiquity_NET_Llvm_Metadata_IrMetadata_
  - name: (
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata
    name: IrMetadata
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  isExternal: true
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Equals_System_Object_
  name: Equals(object)
  nameWithType: IrMetadata.Equals(object)
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(object)
  nameWithType.vb: IrMetadata.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_GetHashCode
  name: GetHashCode()
  nameWithType: IrMetadata.GetHashCode()
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_GetHashCode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  commentId: P:Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Kind
  name: Kind
  nameWithType: IrMetadata.Kind
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Kind
- uid: Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  commentId: P:Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
  parent: Ubiquity.NET.Llvm.Metadata.IrMetadata
  href: Ubiquity.NET.Llvm.Metadata.IrMetadata.html#Ubiquity_NET_Llvm_Metadata_IrMetadata_Handle
  name: Handle
  nameWithType: IrMetadata.Handle
  fullName: Ubiquity.NET.Llvm.Metadata.IrMetadata.Handle
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.Metadata
  commentId: N:Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Metadata
  nameWithType: Ubiquity.NET.Llvm.Metadata
  fullName: Ubiquity.NET.Llvm.Metadata
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Metadata
    name: Metadata
    href: Ubiquity.NET.Llvm.Metadata.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound
  href: Ubiquity.NET.Llvm.DebugInfo.DISubRange.html#Ubiquity_NET_Llvm_DebugInfo_DISubRange_LowerBound
  name: LowerBound
  nameWithType: DISubRange.LowerBound
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.LowerBound
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Ubiquity.NET.Llvm.Values.ConstantInt
  commentId: T:Ubiquity.NET.Llvm.Values.ConstantInt
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ConstantInt.html
  name: ConstantInt
  nameWithType: ConstantInt
  fullName: Ubiquity.NET.Llvm.Values.ConstantInt
- uid: Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata
  commentId: T:Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata
  parent: Ubiquity.NET.Llvm.Metadata
  href: Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata.html
  name: ConstantAsMetadata
  nameWithType: ConstantAsMetadata
  fullName: Ubiquity.NET.Llvm.Metadata.ConstantAsMetadata
- uid: Ubiquity.NET.Llvm.DebugInfo.DIVariable
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIVariable
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIVariable.html
  name: DIVariable
  nameWithType: DIVariable
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIVariable
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
  href: Ubiquity.NET.Llvm.DebugInfo.DISubRange.html#Ubiquity_NET_Llvm_DebugInfo_DISubRange_VariableCount
  name: VariableCount
  nameWithType: DISubRange.VariableCount
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
  href: Ubiquity.NET.Llvm.DebugInfo.DISubRange.html#Ubiquity_NET_Llvm_DebugInfo_DISubRange_ConstantCount
  name: ConstantCount
  nameWithType: DISubRange.ConstantCount
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
  href: Ubiquity.NET.Llvm.DebugInfo.DISubRange.html#Ubiquity_NET_Llvm_DebugInfo_DISubRange_ConstantCount
  name: ConstantCount
  nameWithType: DISubRange.ConstantCount
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.ConstantCount
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
  href: Ubiquity.NET.Llvm.DebugInfo.DISubRange.html#Ubiquity_NET_Llvm_DebugInfo_DISubRange_VariableCount
  name: VariableCount
  nameWithType: DISubRange.VariableCount
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange.VariableCount
