### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.DisposableObject
  commentId: T:Ubiquity.NET.Llvm.DisposableObject
  id: DisposableObject
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.DisposableObject.Dispose
  - Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)
  - Ubiquity.NET.Llvm.DisposableObject.Finalize
  - Ubiquity.NET.Llvm.DisposableObject.IsDisposed
  langs:
  - csharp
  - vb
  name: DisposableObject
  nameWithType: DisposableObject
  fullName: Ubiquity.NET.Llvm.DisposableObject
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisposableObject.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DisposableObject
    path: ../src/Ubiquity.NET.Llvm/DisposableObject.cs
    startLine: 7
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Abstract base class for implementing the Disposable pattern
  example: []
  syntax:
    content: 'public abstract class DisposableObject : IDisposable'
    content.vb: Public MustInherit Class DisposableObject Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Ubiquity.NET.Llvm.OrcJITv2.LlJIT
  - Ubiquity.NET.Llvm.OrcJITv2.MaterializationUnit
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.DisposableObject.Finalize
  commentId: M:Ubiquity.NET.Llvm.DisposableObject.Finalize
  id: Finalize
  parent: Ubiquity.NET.Llvm.DisposableObject
  langs:
  - csharp
  - vb
  name: ~DisposableObject()
  nameWithType: DisposableObject.~DisposableObject()
  fullName: Ubiquity.NET.Llvm.DisposableObject.~DisposableObject()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisposableObject.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Finalize
    path: ../src/Ubiquity.NET.Llvm/DisposableObject.cs
    startLine: 11
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Finalizes an instance of the <xref href="Ubiquity.NET.Llvm.DisposableObject" data-throw-if-not-resolved="false"></xref> class. This releases any unmanaged resources it owns
  example: []
  syntax:
    content: protected ~DisposableObject()
    content.vb: 'Protected '
  overload: Ubiquity.NET.Llvm.DisposableObject.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: Ubiquity.NET.Llvm.DisposableObject.Dispose
  commentId: M:Ubiquity.NET.Llvm.DisposableObject.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.DisposableObject
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DisposableObject.Dispose()
  fullName: Ubiquity.NET.Llvm.DisposableObject.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisposableObject.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/DisposableObject.cs
    startLine: 23
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  remarks: >-
    This implementation guarantees that Dispose is an idempotent call and does NOT trigger any exceptions. That is,

    if already disposed, derived types will never see a call to <xref href="Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)" data-throw-if-not-resolved="false"></xref> as this will silently

    treat it as a NOP. Additionally, this follows the standard pattern such that finalization is suppressed when

    disposing.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.DisposableObject.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Ubiquity.NET.Llvm.DisposableObject.IsDisposed
  commentId: P:Ubiquity.NET.Llvm.DisposableObject.IsDisposed
  id: IsDisposed
  parent: Ubiquity.NET.Llvm.DisposableObject
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: DisposableObject.IsDisposed
  fullName: Ubiquity.NET.Llvm.DisposableObject.IsDisposed
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisposableObject.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: IsDisposed
    path: ../src/Ubiquity.NET.Llvm/DisposableObject.cs
    startLine: 34
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a value indicating whether the object is disposed or not
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: Ubiquity.NET.Llvm.DisposableObject.IsDisposed*
- uid: Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Ubiquity.NET.Llvm.DisposableObject
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: DisposableObject.Dispose(bool)
  fullName: Ubiquity.NET.Llvm.DisposableObject.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DisposableObject.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/DisposableObject.cs
    startLine: 44
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Abstract method that is implemented by derived types to perform the dispose operation
  remarks: >-
    This is guaranteed to only be called if <xref href="Ubiquity.NET.Llvm.DisposableObject.IsDisposed" data-throw-if-not-resolved="false"></xref> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>

    so the implementation should only be concerned with the actual release of resources. If <code class="paramref">disposing</code>

    is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> then the implementation should release managed and unmanaged resources, otherwise it should

    only release the unmanaged resources
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Indicates if this is a dispose or finalize operation
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Ubiquity.NET.Llvm.DisposableObject.Dispose*
  nameWithType.vb: DisposableObject.Dispose(Boolean)
  fullName.vb: Ubiquity.NET.Llvm.DisposableObject.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.DisposableObject
  commentId: T:Ubiquity.NET.Llvm.DisposableObject
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.DisposableObject.html
  name: DisposableObject
  nameWithType: DisposableObject
  fullName: Ubiquity.NET.Llvm.DisposableObject
- uid: Ubiquity.NET.Llvm.DisposableObject.Finalize*
  commentId: Overload:Ubiquity.NET.Llvm.DisposableObject.Finalize
  href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_Finalize
  name: ~DisposableObject
  nameWithType: DisposableObject.~DisposableObject
  fullName: Ubiquity.NET.Llvm.DisposableObject.~DisposableObject
  spec.csharp:
  - name: "~"
  - uid: Ubiquity.NET.Llvm.DisposableObject.Finalize*
    name: DisposableObject
    href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_Finalize
- uid: Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)
  parent: Ubiquity.NET.Llvm.DisposableObject
  isExternal: true
  href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_Dispose_System_Boolean_
  name: Dispose(bool)
  nameWithType: DisposableObject.Dispose(bool)
  fullName: Ubiquity.NET.Llvm.DisposableObject.Dispose(bool)
  nameWithType.vb: DisposableObject.Dispose(Boolean)
  fullName.vb: Ubiquity.NET.Llvm.DisposableObject.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)
    name: Dispose
    href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DisposableObject.Dispose(System.Boolean)
    name: Dispose
    href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_Dispose_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Ubiquity.NET.Llvm.DisposableObject.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.DisposableObject.Dispose
  href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_Dispose
  name: Dispose
  nameWithType: DisposableObject.Dispose
  fullName: Ubiquity.NET.Llvm.DisposableObject.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.DisposableObject.IsDisposed*
  commentId: Overload:Ubiquity.NET.Llvm.DisposableObject.IsDisposed
  href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_IsDisposed
  name: IsDisposed
  nameWithType: DisposableObject.IsDisposed
  fullName: Ubiquity.NET.Llvm.DisposableObject.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.DisposableObject.IsDisposed
  commentId: P:Ubiquity.NET.Llvm.DisposableObject.IsDisposed
  parent: Ubiquity.NET.Llvm.DisposableObject
  href: Ubiquity.NET.Llvm.DisposableObject.html#Ubiquity_NET_Llvm_DisposableObject_IsDisposed
  name: IsDisposed
  nameWithType: DisposableObject.IsDisposed
  fullName: Ubiquity.NET.Llvm.DisposableObject.IsDisposed
