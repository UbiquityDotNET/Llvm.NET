### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  id: SymbolStringPoolEntry
  parent: Ubiquity.NET.Llvm.OrcJITv2
  children:
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.#ctor(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.Object)
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.ReadOnlySpan{System.Byte})
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode(System.StringComparison)
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan
  - Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
  langs:
  - csharp
  - vb
  name: SymbolStringPoolEntry
  nameWithType: SymbolStringPoolEntry
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SymbolStringPoolEntry
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 24
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Reference to an entry in a symbol string pool for ORC JIT v2
  remarks: >-
    This holds a reference to the symbol string which is ONLY marshalled/converted to

    a managed string in the <xref href="Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString" data-throw-if-not-resolved="false"></xref> method. This allows comparing strings

    etc... without the need of conversion.

    <div class="NOTE"><h5>information</h5><p>

    String conversion is lazy, so that once it is converted the managed string is cached

    and used as needed. Thus, the overhead of marshalling the string is realized only the

    first time it is needed.

    </p></div>
  example: []
  syntax:
    content: 'public sealed class SymbolStringPoolEntry : IEquatable<SymbolStringPoolEntry>, IEquatable<ReadOnlySpan<byte>>, IDisposable'
    content.vb: Public NotInheritable Class SymbolStringPoolEntry Implements IEquatable(Of SymbolStringPoolEntry), IEquatable(Of ReadOnlySpan(Of Byte)), IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}
  - System.IEquatable{System.ReadOnlySpan{System.Byte}}
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.#ctor(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.#ctor(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  id: '#ctor(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)'
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: SymbolStringPoolEntry(SymbolStringPoolEntry)
  nameWithType: SymbolStringPoolEntry.SymbolStringPoolEntry(SymbolStringPoolEntry)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.SymbolStringPoolEntry(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 36
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry" data-throw-if-not-resolved="false"></xref> class from another entry (Add ref construction)
  remarks: >-
    In LLVM a <xref href="Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry" data-throw-if-not-resolved="false"></xref> is a pointer to a reference counted string. This constructor will create a new

    entry that "owns" a ref count bump (AddRefHandle) on a source string (<code class="paramref">other</code>). Callers must dispose of the new

    instance the same as the original one or the ref count is never reduced and the native memory never reclaimed (That is, it leaks!)
  example: []
  syntax:
    content: public SymbolStringPoolEntry(SymbolStringPoolEntry other)
    parameters:
    - id: other
      type: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
      description: Other string to make a new entry from
    content.vb: Public Sub New(other As SymbolStringPoolEntry)
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.#ctor*
  nameWithType.vb: SymbolStringPoolEntry.New(SymbolStringPoolEntry)
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.New(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  name.vb: New(SymbolStringPoolEntry)
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
  id: ToString
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SymbolStringPoolEntry.ToString()
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ToString
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 46
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Gets the managed string form of the native string
  example: []
  syntax:
    content: public override string? ToString()
    return:
      type: System.String
      description: managed string for this handle
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString*
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.Object)
  id: Equals(System.Object)
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: SymbolStringPoolEntry.Equals(object?)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 56
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals*
  nameWithType.vb: SymbolStringPoolEntry.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(Object)
  name.vb: Equals(Object)
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  id: Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: Equals(SymbolStringPoolEntry?)
  nameWithType: SymbolStringPoolEntry.Equals(SymbolStringPoolEntry?)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 70
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Compares this string with another to determine if they contain the same contents
  remarks: >-
    <div class="NOTE"><h5>information</h5><p>

    A string pool interns the strings such that no two entries in a pool will ever be equal so this is

    only useful with entries from different pools.

    </p></div>
  example: []
  syntax:
    content: public bool Equals(SymbolStringPoolEntry? other)
    parameters:
    - id: other
      type: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
      description: Other entry to compare against
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the strings contain the same data or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not
    content.vb: Public Function Equals(other As SymbolStringPoolEntry) As Boolean
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals*
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  nameWithType.vb: SymbolStringPoolEntry.Equals(SymbolStringPoolEntry)
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  name.vb: Equals(SymbolStringPoolEntry)
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.ReadOnlySpan{System.Byte})
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.ReadOnlySpan{System.Byte})
  id: Equals(System.ReadOnlySpan{System.Byte})
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: Equals(ReadOnlySpan<byte>)
  nameWithType: SymbolStringPoolEntry.Equals(ReadOnlySpan<byte>)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.ReadOnlySpan<byte>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Equals
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 79
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Tests if the span of characters for this string is identical to the provided span
  example: []
  syntax:
    content: public bool Equals(ReadOnlySpan<byte> otherSpan)
    parameters:
    - id: otherSpan
      type: System.ReadOnlySpan{System.Byte}
      description: Span of bytes to compare this string to
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the spans contain the same data or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not
    content.vb: Public Function Equals(otherSpan As ReadOnlySpan(Of Byte)) As Boolean
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals*
  implements:
  - System.IEquatable{System.ReadOnlySpan{System.Byte}}.Equals(System.ReadOnlySpan{System.Byte})
  nameWithType.vb: SymbolStringPoolEntry.Equals(ReadOnlySpan(Of Byte))
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals(System.ReadOnlySpan(Of Byte))
  name.vb: Equals(ReadOnlySpan(Of Byte))
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode
  id: GetHashCode
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SymbolStringPoolEntry.GetHashCode()
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetHashCode
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 82
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode*
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode(System.StringComparison)
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode(System.StringComparison)
  id: GetHashCode(System.StringComparison)
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: GetHashCode(StringComparison)
  nameWithType: SymbolStringPoolEntry.GetHashCode(StringComparison)
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode(System.StringComparison)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetHashCode
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 93
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Gets the hash code for the managed string
  example: []
  syntax:
    content: public int GetHashCode(StringComparison comparisonType)
    parameters:
    - id: comparisonType
      type: System.StringComparison
      description: Kind of comparison to perform when computing the hash code
    return:
      type: System.Int32
      description: Hash code for the managed string
    content.vb: Public Function GetHashCode(comparisonType As StringComparison) As Integer
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode*
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SymbolStringPoolEntry.Dispose()
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 102
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Release the reference to the string
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan
  commentId: P:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan
  id: ReadOnlySpan
  parent: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  langs:
  - csharp
  - vb
  name: ReadOnlySpan
  nameWithType: SymbolStringPoolEntry.ReadOnlySpan
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ReadOnlySpan
    path: ../src/Ubiquity.NET.Llvm/OrcJITv2/SymbolStringPoolEntry.cs
    startLine: 113
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.OrcJITv2
  summary: Gets a readonly span for the data in this string
  remarks: >-
    This does NOT make a managed copy of the underlying string memory. Instead

    the returned span refers directly to the unmanaged memory of the string.
  example: []
  syntax:
    content: public ReadOnlySpan<byte> ReadOnlySpan { get; }
    parameters: []
    return:
      type: System.ReadOnlySpan{System.Byte}
      description: Span of the native characters in this string (as byte)
    content.vb: Public ReadOnly Property ReadOnlySpan As ReadOnlySpan(Of Byte)
  overload: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan*
references:
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
  commentId: M:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_ToString
  name: ToString()
  nameWithType: SymbolStringPoolEntry.ToString()
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_ToString
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2
  commentId: N:Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.OrcJITv2
  nameWithType: Ubiquity.NET.Llvm.OrcJITv2
  fullName: Ubiquity.NET.Llvm.OrcJITv2
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.OrcJITv2
    name: OrcJITv2
    href: Ubiquity.NET.Llvm.OrcJITv2.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.OrcJITv2
    name: OrcJITv2
    href: Ubiquity.NET.Llvm.OrcJITv2.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SymbolStringPoolEntry>
  nameWithType: IEquatable<SymbolStringPoolEntry>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry>
  nameWithType.vb: IEquatable(Of SymbolStringPoolEntry)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  name.vb: IEquatable(Of SymbolStringPoolEntry)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
    name: SymbolStringPoolEntry
    href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
    name: SymbolStringPoolEntry
    href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html
  - name: )
- uid: System.IEquatable{System.ReadOnlySpan{System.Byte}}
  commentId: T:System.IEquatable{System.ReadOnlySpan{System.Byte}}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ReadOnlySpan<byte>>
  nameWithType: IEquatable<ReadOnlySpan<byte>>
  fullName: System.IEquatable<System.ReadOnlySpan<byte>>
  nameWithType.vb: IEquatable(Of ReadOnlySpan(Of Byte))
  fullName.vb: System.IEquatable(Of System.ReadOnlySpan(Of Byte))
  name.vb: IEquatable(Of ReadOnlySpan(Of Byte))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  commentId: T:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
  parent: Ubiquity.NET.Llvm.OrcJITv2
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html
  name: SymbolStringPoolEntry
  nameWithType: SymbolStringPoolEntry
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.#ctor*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.#ctor
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry__ctor_Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_
  name: SymbolStringPoolEntry
  nameWithType: SymbolStringPoolEntry.SymbolStringPoolEntry
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.SymbolStringPoolEntry
  nameWithType.vb: SymbolStringPoolEntry.New
  fullName.vb: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_ToString
  name: ToString
  nameWithType: SymbolStringPoolEntry.ToString
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_Equals_System_Object_
  name: Equals
  nameWithType: SymbolStringPoolEntry.Equals
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  commentId: M:System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  parent: System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(SymbolStringPoolEntry)
  nameWithType: IEquatable<SymbolStringPoolEntry>.Equals(SymbolStringPoolEntry)
  fullName: System.IEquatable<Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry>.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  nameWithType.vb: IEquatable(Of SymbolStringPoolEntry).Equals(SymbolStringPoolEntry)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry).Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
  spec.csharp:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
    name: SymbolStringPoolEntry
    href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry}.Equals(Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry
    name: SymbolStringPoolEntry
    href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.IEquatable{System.ReadOnlySpan{System.Byte}}.Equals(System.ReadOnlySpan{System.Byte})
  commentId: M:System.IEquatable{System.ReadOnlySpan{System.Byte}}.Equals(System.ReadOnlySpan{System.Byte})
  parent: System.IEquatable{System.ReadOnlySpan{System.Byte}}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ReadOnlySpan<byte>)
  nameWithType: IEquatable<ReadOnlySpan<byte>>.Equals(ReadOnlySpan<byte>)
  fullName: System.IEquatable<System.ReadOnlySpan<byte>>.Equals(System.ReadOnlySpan<byte>)
  nameWithType.vb: IEquatable(Of ReadOnlySpan(Of Byte)).Equals(ReadOnlySpan(Of Byte))
  fullName.vb: System.IEquatable(Of System.ReadOnlySpan(Of Byte)).Equals(System.ReadOnlySpan(Of Byte))
  name.vb: Equals(ReadOnlySpan(Of Byte))
  spec.csharp:
  - uid: System.IEquatable{System.ReadOnlySpan{System.Byte}}.Equals(System.ReadOnlySpan{System.Byte})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IEquatable{System.ReadOnlySpan{System.Byte}}.Equals(System.ReadOnlySpan{System.Byte})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_GetHashCode
  name: GetHashCode
  nameWithType: SymbolStringPoolEntry.GetHashCode
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.stringcomparison
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_Dispose
  name: Dispose
  nameWithType: SymbolStringPoolEntry.Dispose
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan*
  commentId: Overload:Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan
  href: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.html#Ubiquity_NET_Llvm_OrcJITv2_SymbolStringPoolEntry_ReadOnlySpan
  name: ReadOnlySpan
  nameWithType: SymbolStringPoolEntry.ReadOnlySpan
  fullName: Ubiquity.NET.Llvm.OrcJITv2.SymbolStringPoolEntry.ReadOnlySpan
