### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Library
  commentId: T:Ubiquity.NET.Llvm.Library
  id: Library
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.Library.Dispose
  - Ubiquity.NET.Llvm.Library.InitializeLLVM(Ubiquity.NET.Llvm.CodeGenTarget)
  - Ubiquity.NET.Llvm.Library.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  langs:
  - csharp
  - vb
  name: Library
  nameWithType: Library
  fullName: Ubiquity.NET.Llvm.Library
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Library.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Library
    path: ../src/Ubiquity.NET.Llvm/Library.cs
    startLine: 20
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Provides support for various LLVM static state initialization and manipulation
  example: []
  syntax:
    content: 'public sealed class Library : ILibLlvm, IDisposable'
    content.vb: Public NotInheritable Class Library Implements ILibLlvm, IDisposable
  inheritance:
  - System.Object
  implements:
  - Ubiquity.NET.Llvm.ILibLlvm
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Library.Dispose
  commentId: M:Ubiquity.NET.Llvm.Library.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.Library
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Library.Dispose()
  fullName: Ubiquity.NET.Llvm.Library.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Library.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/Library.cs
    startLine: 24
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.Library.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Ubiquity.NET.Llvm.Library.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  commentId: M:Ubiquity.NET.Llvm.Library.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  id: RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  parent: Ubiquity.NET.Llvm.Library
  langs:
  - csharp
  - vb
  name: RegisterTarget(CodeGenTarget, TargetRegistration)
  nameWithType: Library.RegisterTarget(CodeGenTarget, TargetRegistration)
  fullName: Ubiquity.NET.Llvm.Library.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget, Ubiquity.NET.Llvm.TargetRegistration)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Library.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: RegisterTarget
    path: ../src/Ubiquity.NET.Llvm/Library.cs
    startLine: 30
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Registers components for ARM AArch64 target(s)
  example: []
  syntax:
    content: public void RegisterTarget(CodeGenTarget target, TargetRegistration registrations = TargetRegistration.All)
    parameters:
    - id: target
      type: Ubiquity.NET.Llvm.CodeGenTarget
      description: Target architecture to register/initialize
    - id: registrations
      type: Ubiquity.NET.Llvm.TargetRegistration
      description: Flags indicating which components to register/enable
    content.vb: Public Sub RegisterTarget(target As CodeGenTarget, registrations As TargetRegistration = TargetRegistration.All)
  overload: Ubiquity.NET.Llvm.Library.RegisterTarget*
  implements:
  - Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
- uid: Ubiquity.NET.Llvm.Library.InitializeLLVM(Ubiquity.NET.Llvm.CodeGenTarget)
  commentId: M:Ubiquity.NET.Llvm.Library.InitializeLLVM(Ubiquity.NET.Llvm.CodeGenTarget)
  id: InitializeLLVM(Ubiquity.NET.Llvm.CodeGenTarget)
  parent: Ubiquity.NET.Llvm.Library
  langs:
  - csharp
  - vb
  name: InitializeLLVM(CodeGenTarget)
  nameWithType: Library.InitializeLLVM(CodeGenTarget)
  fullName: Ubiquity.NET.Llvm.Library.InitializeLLVM(Ubiquity.NET.Llvm.CodeGenTarget)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Library.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InitializeLLVM
    path: ../src/Ubiquity.NET.Llvm/Library.cs
    startLine: 55
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Initializes the native LLVM library support
  remarks: >-
    <p>This can be called multiple times per application BUT all such calls MUST use the same value for

    <code class="paramref">target</code> in order to load the underlying native LLVM library.</p>

    <p><xref href="Ubiquity.NET.Llvm.Library.Dispose" data-throw-if-not-resolved="false"></xref> will release any resources allocated by the library but NOT the library itself.

    That is loaded once the first time this is called. The .NET runtime does *NOT* support re-load of a P/Invoke

    library within the same process. Thus, this is best used at the top level of the application and released at

    or near process exit. An access violation crash is likely to occur if any attempts to use the library's functions

    occurs after it is unloaded as there is no way to invalidate the results of resolving the method + library into

    an address.</p>

    <p>While any variant of the native library will support <xref href="Ubiquity.NET.Llvm.CodeGenTarget.Native" data-throw-if-not-resolved="false"></xref> they can support up

    to one other target. Thus if the consumer is ever going to support cross-platform scenarios, then it MUST specify

    the target the first time this is called. This restriction is a tradeoff from the cost of building the native interop

    library. Building all possible processor targets into a single library for every possible runtime is just not feasible

    in the automated builds for most projects let alone a no budget OSS project like this one.</p>
  example: []
  syntax:
    content: public static ILibLlvm InitializeLLVM(CodeGenTarget target = CodeGenTarget.Native)
    parameters:
    - id: target
      type: Ubiquity.NET.Llvm.CodeGenTarget
      description: 'Target to use in resolving the proper library that implements the LLVM native code. [Default: CodeGenTarget.Native]'
    return:
      type: Ubiquity.NET.Llvm.ILibLlvm
      description: <xref href="Ubiquity.NET.Llvm.ILibLlvm" data-throw-if-not-resolved="false"></xref> implementation for the library
    content.vb: Public Shared Function InitializeLLVM(target As CodeGenTarget = CodeGenTarget.Native) As ILibLlvm
  overload: Ubiquity.NET.Llvm.Library.InitializeLLVM*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Native Interop library already loaded for a different target
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The target provided is undefined or <xref href="Ubiquity.NET.Llvm.CodeGenTarget.All" data-throw-if-not-resolved="false"></xref>
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.ILibLlvm
  commentId: T:Ubiquity.NET.Llvm.ILibLlvm
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.ILibLlvm.html
  name: ILibLlvm
  nameWithType: ILibLlvm
  fullName: Ubiquity.NET.Llvm.ILibLlvm
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.Library.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.Library.Dispose
  href: Ubiquity.NET.Llvm.Library.html#Ubiquity_NET_Llvm_Library_Dispose
  name: Dispose
  nameWithType: Library.Dispose
  fullName: Ubiquity.NET.Llvm.Library.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Library.RegisterTarget*
  commentId: Overload:Ubiquity.NET.Llvm.Library.RegisterTarget
  href: Ubiquity.NET.Llvm.Library.html#Ubiquity_NET_Llvm_Library_RegisterTarget_Ubiquity_NET_Llvm_CodeGenTarget_Ubiquity_NET_Llvm_TargetRegistration_
  name: RegisterTarget
  nameWithType: Library.RegisterTarget
  fullName: Ubiquity.NET.Llvm.Library.RegisterTarget
- uid: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  commentId: M:Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  parent: Ubiquity.NET.Llvm.ILibLlvm
  href: Ubiquity.NET.Llvm.ILibLlvm.html#Ubiquity_NET_Llvm_ILibLlvm_RegisterTarget_Ubiquity_NET_Llvm_CodeGenTarget_Ubiquity_NET_Llvm_TargetRegistration_
  name: RegisterTarget(CodeGenTarget, TargetRegistration)
  nameWithType: ILibLlvm.RegisterTarget(CodeGenTarget, TargetRegistration)
  fullName: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget, Ubiquity.NET.Llvm.TargetRegistration)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
    name: RegisterTarget
    href: Ubiquity.NET.Llvm.ILibLlvm.html#Ubiquity_NET_Llvm_ILibLlvm_RegisterTarget_Ubiquity_NET_Llvm_CodeGenTarget_Ubiquity_NET_Llvm_TargetRegistration_
  - name: (
  - uid: Ubiquity.NET.Llvm.CodeGenTarget
    name: CodeGenTarget
    href: Ubiquity.NET.Llvm.CodeGenTarget.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.TargetRegistration
    name: TargetRegistration
    href: Ubiquity.NET.Llvm.TargetRegistration.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
    name: RegisterTarget
    href: Ubiquity.NET.Llvm.ILibLlvm.html#Ubiquity_NET_Llvm_ILibLlvm_RegisterTarget_Ubiquity_NET_Llvm_CodeGenTarget_Ubiquity_NET_Llvm_TargetRegistration_
  - name: (
  - uid: Ubiquity.NET.Llvm.CodeGenTarget
    name: CodeGenTarget
    href: Ubiquity.NET.Llvm.CodeGenTarget.html
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.TargetRegistration
    name: TargetRegistration
    href: Ubiquity.NET.Llvm.TargetRegistration.html
  - name: )
- uid: Ubiquity.NET.Llvm.CodeGenTarget
  commentId: T:Ubiquity.NET.Llvm.CodeGenTarget
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.CodeGenTarget.html
  name: CodeGenTarget
  nameWithType: CodeGenTarget
  fullName: Ubiquity.NET.Llvm.CodeGenTarget
- uid: Ubiquity.NET.Llvm.TargetRegistration
  commentId: T:Ubiquity.NET.Llvm.TargetRegistration
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.TargetRegistration.html
  name: TargetRegistration
  nameWithType: TargetRegistration
  fullName: Ubiquity.NET.Llvm.TargetRegistration
- uid: Ubiquity.NET.Llvm.Library.Dispose
  commentId: M:Ubiquity.NET.Llvm.Library.Dispose
  href: Ubiquity.NET.Llvm.Library.html#Ubiquity_NET_Llvm_Library_Dispose
  name: Dispose()
  nameWithType: Library.Dispose()
  fullName: Ubiquity.NET.Llvm.Library.Dispose()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Library.Dispose
    name: Dispose
    href: Ubiquity.NET.Llvm.Library.html#Ubiquity_NET_Llvm_Library_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Library.Dispose
    name: Dispose
    href: Ubiquity.NET.Llvm.Library.html#Ubiquity_NET_Llvm_Library_Dispose
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.CodeGenTarget.Native
  commentId: F:Ubiquity.NET.Llvm.CodeGenTarget.Native
  href: Ubiquity.NET.Llvm.CodeGenTarget.html#Ubiquity_NET_Llvm_CodeGenTarget_Native
  name: Native
  nameWithType: CodeGenTarget.Native
  fullName: Ubiquity.NET.Llvm.CodeGenTarget.Native
- uid: Ubiquity.NET.Llvm.CodeGenTarget.All
  commentId: F:Ubiquity.NET.Llvm.CodeGenTarget.All
  href: Ubiquity.NET.Llvm.CodeGenTarget.html#Ubiquity_NET_Llvm_CodeGenTarget_All
  name: All
  nameWithType: CodeGenTarget.All
  fullName: Ubiquity.NET.Llvm.CodeGenTarget.All
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: Ubiquity.NET.Llvm.Library.InitializeLLVM*
  commentId: Overload:Ubiquity.NET.Llvm.Library.InitializeLLVM
  href: Ubiquity.NET.Llvm.Library.html#Ubiquity_NET_Llvm_Library_InitializeLLVM_Ubiquity_NET_Llvm_CodeGenTarget_
  name: InitializeLLVM
  nameWithType: Library.InitializeLLVM
  fullName: Ubiquity.NET.Llvm.Library.InitializeLLVM
