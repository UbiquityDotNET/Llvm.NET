### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.ComdatCollection
  commentId: T:Ubiquity.NET.Llvm.ComdatCollection
  id: ComdatCollection
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate(System.String,Ubiquity.NET.Llvm.ComdatKind)
  - Ubiquity.NET.Llvm.ComdatCollection.Clear
  - Ubiquity.NET.Llvm.ComdatCollection.Contains(System.String)
  - Ubiquity.NET.Llvm.ComdatCollection.Count
  - Ubiquity.NET.Llvm.ComdatCollection.Item(System.String)
  - Ubiquity.NET.Llvm.ComdatCollection.Remove(System.String)
  - Ubiquity.NET.Llvm.ComdatCollection.TryGetValue(System.String,Ubiquity.NET.Llvm.Comdat@)
  langs:
  - csharp
  - vb
  name: ComdatCollection
  nameWithType: ComdatCollection
  fullName: Ubiquity.NET.Llvm.ComdatCollection
  type: Struct
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ComdatCollection
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 17
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Collection of Comdats in a module
  remarks: >-
    This is a 'ref struct' to ensure that ownership of the collection

    remains with the module itself and this is only used to iterate

    over the individual items. It is not allowed to store this as it

    references the owning module and ultimately the Comdat values themselves

    are owned in the native code layer and only "projected" to managed

    here.
  example: []
  syntax:
    content: 'public readonly ref struct ComdatCollection : IEnumerable<Comdat>, IEnumerable'
    content.vb: Public Structure ComdatCollection Implements IEnumerable(Of Comdat), IEnumerable
  implements:
  - System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Comdat}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.ComdatCollection.Count
  commentId: P:Ubiquity.NET.Llvm.ComdatCollection.Count
  id: Count
  parent: Ubiquity.NET.Llvm.ComdatCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ComdatCollection.Count
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Count
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Count
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 21
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a count of comdats in the associated module
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Ubiquity.NET.Llvm.ComdatCollection.Count*
- uid: Ubiquity.NET.Llvm.ComdatCollection.Item(System.String)
  commentId: P:Ubiquity.NET.Llvm.ComdatCollection.Item(System.String)
  id: Item(System.String)
  parent: Ubiquity.NET.Llvm.ComdatCollection
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: ComdatCollection.this[string]
  fullName: Ubiquity.NET.Llvm.ComdatCollection.this[string]
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: this[]
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 28
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Retrieves <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref> by its name
  example: []
  syntax:
    content: public Comdat this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: Name of the <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref>
    return:
      type: Ubiquity.NET.Llvm.Comdat
      description: <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref> or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>
    content.vb: Public ReadOnly Default Property this[](key As String) As Comdat
  overload: Ubiquity.NET.Llvm.ComdatCollection.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Key is null
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: Key does not exist in the collection
  nameWithType.vb: ComdatCollection.this[](String)
  fullName.vb: Ubiquity.NET.Llvm.ComdatCollection.this[](String)
  name.vb: this[](String)
- uid: Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate(System.String,Ubiquity.NET.Llvm.ComdatKind)
  commentId: M:Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate(System.String,Ubiquity.NET.Llvm.ComdatKind)
  id: AddOrUpdate(System.String,Ubiquity.NET.Llvm.ComdatKind)
  parent: Ubiquity.NET.Llvm.ComdatCollection
  langs:
  - csharp
  - vb
  name: AddOrUpdate(string, ComdatKind)
  nameWithType: ComdatCollection.AddOrUpdate(string, ComdatKind)
  fullName: Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate(string, Ubiquity.NET.Llvm.ComdatKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AddOrUpdate
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 42
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Adds or updates a <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref> entry
  example: []
  syntax:
    content: public Comdat AddOrUpdate(string key, ComdatKind kind)
    parameters:
    - id: key
      type: System.String
      description: Name of the <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref>
    - id: kind
      type: Ubiquity.NET.Llvm.ComdatKind
      description: <xref href="Ubiquity.NET.Llvm.ComdatKind" data-throw-if-not-resolved="false"></xref> for the entry
    return:
      type: Ubiquity.NET.Llvm.Comdat
      description: New or updated <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function AddOrUpdate(key As String, kind As ComdatKind) As Comdat
  overload: Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate*
  nameWithType.vb: ComdatCollection.AddOrUpdate(String, ComdatKind)
  fullName.vb: Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate(String, Ubiquity.NET.Llvm.ComdatKind)
  name.vb: AddOrUpdate(String, ComdatKind)
- uid: Ubiquity.NET.Llvm.ComdatCollection.TryGetValue(System.String,Ubiquity.NET.Llvm.Comdat@)
  commentId: M:Ubiquity.NET.Llvm.ComdatCollection.TryGetValue(System.String,Ubiquity.NET.Llvm.Comdat@)
  id: TryGetValue(System.String,Ubiquity.NET.Llvm.Comdat@)
  parent: Ubiquity.NET.Llvm.ComdatCollection
  langs:
  - csharp
  - vb
  name: TryGetValue(string, out Comdat)
  nameWithType: ComdatCollection.TryGetValue(string, out Comdat)
  fullName: Ubiquity.NET.Llvm.ComdatCollection.TryGetValue(string, out Ubiquity.NET.Llvm.Comdat)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: TryGetValue
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 57
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a value form the collection if it exists
  example: []
  syntax:
    content: public bool TryGetValue(string key, out Comdat value)
    parameters:
    - id: key
      type: System.String
      description: Name of the item to retrieve
    - id: value
      type: Ubiquity.NET.Llvm.Comdat
      description: Value of the item if found or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if not found
    return:
      type: System.Boolean
      description: >-
        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the value was found

        the list or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Function TryGetValue(key As String, value As Comdat) As Boolean
  overload: Ubiquity.NET.Llvm.ComdatCollection.TryGetValue*
  nameWithType.vb: ComdatCollection.TryGetValue(String, Comdat)
  fullName.vb: Ubiquity.NET.Llvm.ComdatCollection.TryGetValue(String, Ubiquity.NET.Llvm.Comdat)
  name.vb: TryGetValue(String, Comdat)
- uid: Ubiquity.NET.Llvm.ComdatCollection.Contains(System.String)
  commentId: M:Ubiquity.NET.Llvm.ComdatCollection.Contains(System.String)
  id: Contains(System.String)
  parent: Ubiquity.NET.Llvm.ComdatCollection
  langs:
  - csharp
  - vb
  name: Contains(string)
  nameWithType: ComdatCollection.Contains(string)
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Contains(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Contains
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 66
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets a value that indicates if a <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref> with a given name exists in the collection
  example: []
  syntax:
    content: public bool Contains(string key)
    parameters:
    - id: key
      type: System.String
      description: Name of the <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref> to test for
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the entry is present and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if not
    content.vb: Public Function Contains(key As String) As Boolean
  overload: Ubiquity.NET.Llvm.ComdatCollection.Contains*
  nameWithType.vb: ComdatCollection.Contains(String)
  fullName.vb: Ubiquity.NET.Llvm.ComdatCollection.Contains(String)
  name.vb: Contains(String)
- uid: Ubiquity.NET.Llvm.ComdatCollection.Remove(System.String)
  commentId: M:Ubiquity.NET.Llvm.ComdatCollection.Remove(System.String)
  id: Remove(System.String)
  parent: Ubiquity.NET.Llvm.ComdatCollection
  langs:
  - csharp
  - vb
  name: Remove(string)
  nameWithType: ComdatCollection.Remove(string)
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Remove(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Remove
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 74
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Removes a <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref> entry from the module
  example: []
  syntax:
    content: public bool Remove(string key)
    parameters:
    - id: key
      type: System.String
      description: Name of the <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: >-
        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the value was in the list or

        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise
    content.vb: Public Function Remove(key As String) As Boolean
  overload: Ubiquity.NET.Llvm.ComdatCollection.Remove*
  nameWithType.vb: ComdatCollection.Remove(String)
  fullName.vb: Ubiquity.NET.Llvm.ComdatCollection.Remove(String)
  name.vb: Remove(String)
- uid: Ubiquity.NET.Llvm.ComdatCollection.Clear
  commentId: M:Ubiquity.NET.Llvm.ComdatCollection.Clear
  id: Clear
  parent: Ubiquity.NET.Llvm.ComdatCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ComdatCollection.Clear()
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Clear()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ComdatCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Clear
    path: ../src/Ubiquity.NET.Llvm/ComdatCollection.cs
    startLine: 94
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Removes all the <xref href="Ubiquity.NET.Llvm.Comdat" data-throw-if-not-resolved="false"></xref> entries from the module
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Ubiquity.NET.Llvm.ComdatCollection.Clear*
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Comdat}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Comdat}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Comdat>
  nameWithType: IEnumerable<Comdat>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Comdat>
  nameWithType.vb: IEnumerable(Of Comdat)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Comdat)
  name.vb: IEnumerable(Of Comdat)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Comdat
    name: Comdat
    href: Ubiquity.NET.Llvm.Comdat.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Comdat
    name: Comdat
    href: Ubiquity.NET.Llvm.Comdat.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.ComdatCollection.Count*
  commentId: Overload:Ubiquity.NET.Llvm.ComdatCollection.Count
  href: Ubiquity.NET.Llvm.ComdatCollection.html#Ubiquity_NET_Llvm_ComdatCollection_Count
  name: Count
  nameWithType: ComdatCollection.Count
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Ubiquity.NET.Llvm.Comdat
  commentId: T:Ubiquity.NET.Llvm.Comdat
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Comdat.html
  name: Comdat
  nameWithType: Comdat
  fullName: Ubiquity.NET.Llvm.Comdat
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: Ubiquity.NET.Llvm.ComdatCollection.Item*
  commentId: Overload:Ubiquity.NET.Llvm.ComdatCollection.Item
  href: Ubiquity.NET.Llvm.ComdatCollection.html#Ubiquity_NET_Llvm_ComdatCollection_Item_System_String_
  name: this
  nameWithType: ComdatCollection.this
  fullName: Ubiquity.NET.Llvm.ComdatCollection.this
  nameWithType.vb: ComdatCollection.this[]
  fullName.vb: Ubiquity.NET.Llvm.ComdatCollection.this[]
  name.vb: this[]
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.ComdatKind
  commentId: T:Ubiquity.NET.Llvm.ComdatKind
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.ComdatKind.html
  name: ComdatKind
  nameWithType: ComdatKind
  fullName: Ubiquity.NET.Llvm.ComdatKind
- uid: Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate*
  commentId: Overload:Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate
  href: Ubiquity.NET.Llvm.ComdatCollection.html#Ubiquity_NET_Llvm_ComdatCollection_AddOrUpdate_System_String_Ubiquity_NET_Llvm_ComdatKind_
  name: AddOrUpdate
  nameWithType: ComdatCollection.AddOrUpdate
  fullName: Ubiquity.NET.Llvm.ComdatCollection.AddOrUpdate
- uid: Ubiquity.NET.Llvm.ComdatCollection.TryGetValue*
  commentId: Overload:Ubiquity.NET.Llvm.ComdatCollection.TryGetValue
  href: Ubiquity.NET.Llvm.ComdatCollection.html#Ubiquity_NET_Llvm_ComdatCollection_TryGetValue_System_String_Ubiquity_NET_Llvm_Comdat__
  name: TryGetValue
  nameWithType: ComdatCollection.TryGetValue
  fullName: Ubiquity.NET.Llvm.ComdatCollection.TryGetValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.ComdatCollection.Contains*
  commentId: Overload:Ubiquity.NET.Llvm.ComdatCollection.Contains
  href: Ubiquity.NET.Llvm.ComdatCollection.html#Ubiquity_NET_Llvm_ComdatCollection_Contains_System_String_
  name: Contains
  nameWithType: ComdatCollection.Contains
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Contains
- uid: Ubiquity.NET.Llvm.ComdatCollection.Remove*
  commentId: Overload:Ubiquity.NET.Llvm.ComdatCollection.Remove
  href: Ubiquity.NET.Llvm.ComdatCollection.html#Ubiquity_NET_Llvm_ComdatCollection_Remove_System_String_
  name: Remove
  nameWithType: ComdatCollection.Remove
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Remove
- uid: Ubiquity.NET.Llvm.ComdatCollection.Clear*
  commentId: Overload:Ubiquity.NET.Llvm.ComdatCollection.Clear
  href: Ubiquity.NET.Llvm.ComdatCollection.html#Ubiquity_NET_Llvm_ComdatCollection_Clear
  name: Clear
  nameWithType: ComdatCollection.Clear
  fullName: Ubiquity.NET.Llvm.ComdatCollection.Clear
