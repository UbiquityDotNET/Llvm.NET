### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection
  commentId: T:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection
  id: SuccessorBlockCollection
  parent: Ubiquity.NET.Llvm.Instructions
  children:
  - Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  - Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count
  - Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator
  - Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: SuccessorBlockCollection
  nameWithType: SuccessorBlockCollection
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SuccessorBlockCollection
    path: ../src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
    startLine: 14
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Support class to provide read/update semantics for the successor blocks of an instruction
  remarks: >-
    This class is used to implement Operand lists of elements including sub lists based on an offset.

    The latter case is useful for types that expose some fixed set of operands as properties and some

    arbitrary number of additional items as operands.
  example: []
  syntax:
    content: 'public sealed class SuccessorBlockCollection : IOperandCollection<BasicBlock>, IReadOnlyCollection<BasicBlock>, IEnumerable<BasicBlock>, IEnumerable'
    content.vb: Public NotInheritable Class SuccessorBlockCollection Implements IOperandCollection(Of BasicBlock), IReadOnlyCollection(Of BasicBlock), IEnumerable(Of BasicBlock), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  - System.Collections.Generic.IReadOnlyCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  - System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Item(System.Int32)
  commentId: P:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: SuccessorBlockCollection.this[int]
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.this[int]
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: this[]
    path: ../src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
    startLine: 18
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Gets or sets the specified element in the collection
  example: []
  syntax:
    content: public BasicBlock this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: index of the element in the collection
    return:
      type: Ubiquity.NET.Llvm.Values.BasicBlock
      description: The element in the collection
    content.vb: Public Default Property this[](index As Integer) As BasicBlock
  overload: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Item*
  implements:
  - Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Item(System.Int32)
  nameWithType.vb: SuccessorBlockCollection.this[](Integer)
  fullName.vb: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.this[](Integer)
  name.vb: this[](Integer)
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count
  commentId: P:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count
  id: Count
  parent: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SuccessorBlockCollection.Count
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Count
    path: ../src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
    startLine: 34
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Gets the count of elements in this collection
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count*
  implements:
  - System.Collections.Generic.IReadOnlyCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Count
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator
  commentId: M:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator
  id: GetEnumerator
  parent: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SuccessorBlockCollection.GetEnumerator()
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetEnumerator
    path: ../src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
    startLine: 38
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Gets an enumerator for the <xref href="Ubiquity.NET.Llvm.Values.BasicBlock" data-throw-if-not-resolved="false"></xref>s in this collection
  example: []
  syntax:
    content: public IEnumerator<BasicBlock> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Ubiquity.NET.Llvm.Values.BasicBlock}
      description: Enumerator for the collection
    content.vb: Public Function GetEnumerator() As IEnumerator(Of BasicBlock)
  overload: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}.GetEnumerator
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  commentId: M:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  id: Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  parent: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection
  langs:
  - csharp
  - vb
  name: Contains(BasicBlock)
  nameWithType: SuccessorBlockCollection.Contains(BasicBlock)
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Contains
    path: ../src/Ubiquity.NET.Llvm/Instructions/SuccessorBlockCollection.cs
    startLine: 51
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Instructions
  summary: Gets a value indicating whether the collection contains the specified item or not
  example: []
  syntax:
    content: public bool Contains(BasicBlock item)
    parameters:
    - id: item
      type: Ubiquity.NET.Llvm.Values.BasicBlock
      description: Item to look for
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the item is found
    content.vb: Public Function Contains(item As BasicBlock) As Boolean
  overload: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains*
  implements:
  - Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
references:
- uid: Ubiquity.NET.Llvm.Instructions
  commentId: N:Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Instructions
  nameWithType: Ubiquity.NET.Llvm.Instructions
  fullName: Ubiquity.NET.Llvm.Instructions
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  commentId: T:Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  parent: Ubiquity.NET.Llvm
  definition: Ubiquity.NET.Llvm.IOperandCollection`1
  href: Ubiquity.NET.Llvm.IOperandCollection-1.html
  name: IOperandCollection<BasicBlock>
  nameWithType: IOperandCollection<BasicBlock>
  fullName: Ubiquity.NET.Llvm.IOperandCollection<Ubiquity.NET.Llvm.Values.BasicBlock>
  nameWithType.vb: IOperandCollection(Of BasicBlock)
  fullName.vb: Ubiquity.NET.Llvm.IOperandCollection(Of Ubiquity.NET.Llvm.Values.BasicBlock)
  name.vb: IOperandCollection(Of BasicBlock)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IOperandCollection`1
    name: IOperandCollection
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: '>'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IOperandCollection`1
    name: IOperandCollection
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<BasicBlock>
  nameWithType: IReadOnlyCollection<BasicBlock>
  fullName: System.Collections.Generic.IReadOnlyCollection<Ubiquity.NET.Llvm.Values.BasicBlock>
  nameWithType.vb: IReadOnlyCollection(Of BasicBlock)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Ubiquity.NET.Llvm.Values.BasicBlock)
  name.vb: IReadOnlyCollection(Of BasicBlock)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<BasicBlock>
  nameWithType: IEnumerable<BasicBlock>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.BasicBlock>
  nameWithType.vb: IEnumerable(Of BasicBlock)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.BasicBlock)
  name.vb: IEnumerable(Of BasicBlock)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.IOperandCollection`1
  commentId: T:Ubiquity.NET.Llvm.IOperandCollection`1
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.IOperandCollection-1.html
  name: IOperandCollection<T>
  nameWithType: IOperandCollection<T>
  fullName: Ubiquity.NET.Llvm.IOperandCollection<T>
  nameWithType.vb: IOperandCollection(Of T)
  fullName.vb: Ubiquity.NET.Llvm.IOperandCollection(Of T)
  name.vb: IOperandCollection(Of T)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IOperandCollection`1
    name: IOperandCollection
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IOperandCollection`1
    name: IOperandCollection
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Item*
  commentId: Overload:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Item
  href: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.html#Ubiquity_NET_Llvm_Instructions_SuccessorBlockCollection_Item_System_Int32_
  name: this
  nameWithType: SuccessorBlockCollection.this
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.this
  nameWithType.vb: SuccessorBlockCollection.this[]
  fullName.vb: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.this[]
  name.vb: this[]
- uid: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Item(System.Int32)
  commentId: P:Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Item(System.Int32)
  parent: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  definition: Ubiquity.NET.Llvm.IOperandCollection`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IOperandCollection<BasicBlock>.this[int]
  fullName: Ubiquity.NET.Llvm.IOperandCollection<Ubiquity.NET.Llvm.Values.BasicBlock>.this[int]
  nameWithType.vb: IOperandCollection(Of BasicBlock).this[](Integer)
  fullName.vb: Ubiquity.NET.Llvm.IOperandCollection(Of Ubiquity.NET.Llvm.Values.BasicBlock).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Item(System.Int32)
    name: this[]
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Ubiquity.NET.Llvm.Values.BasicBlock
  commentId: T:Ubiquity.NET.Llvm.Values.BasicBlock
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  name: BasicBlock
  nameWithType: BasicBlock
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock
- uid: Ubiquity.NET.Llvm.IOperandCollection`1.Item(System.Int32)
  commentId: P:Ubiquity.NET.Llvm.IOperandCollection`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IOperandCollection<T>.this[int]
  fullName: Ubiquity.NET.Llvm.IOperandCollection<T>.this[int]
  nameWithType.vb: IOperandCollection(Of T).this[](Integer)
  fullName.vb: Ubiquity.NET.Llvm.IOperandCollection(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IOperandCollection`1.Item(System.Int32)
    name: this[]
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Item_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count*
  commentId: Overload:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count
  href: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.html#Ubiquity_NET_Llvm_Instructions_SuccessorBlockCollection_Count
  name: Count
  nameWithType: SuccessorBlockCollection.Count
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Count
- uid: System.Collections.Generic.IReadOnlyCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<BasicBlock>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<Ubiquity.NET.Llvm.Values.BasicBlock>.Count
  nameWithType.vb: IReadOnlyCollection(Of BasicBlock).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Ubiquity.NET.Llvm.Values.BasicBlock).Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1.count
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator*
  commentId: Overload:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator
  href: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.html#Ubiquity_NET_Llvm_Instructions_SuccessorBlockCollection_GetEnumerator
  name: GetEnumerator
  nameWithType: SuccessorBlockCollection.GetEnumerator
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<BasicBlock>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.BasicBlock>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of BasicBlock).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.BasicBlock).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.BasicBlock}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{Ubiquity.NET.Llvm.Values.BasicBlock}
  commentId: T:System.Collections.Generic.IEnumerator{Ubiquity.NET.Llvm.Values.BasicBlock}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<BasicBlock>
  nameWithType: IEnumerator<BasicBlock>
  fullName: System.Collections.Generic.IEnumerator<Ubiquity.NET.Llvm.Values.BasicBlock>
  nameWithType.vb: IEnumerator(Of BasicBlock)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Ubiquity.NET.Llvm.Values.BasicBlock)
  name.vb: IEnumerator(Of BasicBlock)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains*
  commentId: Overload:Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains
  href: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.html#Ubiquity_NET_Llvm_Instructions_SuccessorBlockCollection_Contains_Ubiquity_NET_Llvm_Values_BasicBlock_
  name: Contains
  nameWithType: SuccessorBlockCollection.Contains
  fullName: Ubiquity.NET.Llvm.Instructions.SuccessorBlockCollection.Contains
- uid: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  commentId: M:Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  parent: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}
  definition: Ubiquity.NET.Llvm.IOperandCollection`1.Contains(`0)
  href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Contains__0_
  name: Contains(BasicBlock)
  nameWithType: IOperandCollection<BasicBlock>.Contains(BasicBlock)
  fullName: Ubiquity.NET.Llvm.IOperandCollection<Ubiquity.NET.Llvm.Values.BasicBlock>.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  nameWithType.vb: IOperandCollection(Of BasicBlock).Contains(BasicBlock)
  fullName.vb: Ubiquity.NET.Llvm.IOperandCollection(Of Ubiquity.NET.Llvm.Values.BasicBlock).Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
    name: Contains
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Contains__0_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IOperandCollection{Ubiquity.NET.Llvm.Values.BasicBlock}.Contains(Ubiquity.NET.Llvm.Values.BasicBlock)
    name: Contains
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Contains__0_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.BasicBlock
    name: BasicBlock
    href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.IOperandCollection`1.Contains(`0)
  commentId: M:Ubiquity.NET.Llvm.IOperandCollection`1.Contains(`0)
  href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Contains__0_
  name: Contains(T)
  nameWithType: IOperandCollection<T>.Contains(T)
  fullName: Ubiquity.NET.Llvm.IOperandCollection<T>.Contains(T)
  nameWithType.vb: IOperandCollection(Of T).Contains(T)
  fullName.vb: Ubiquity.NET.Llvm.IOperandCollection(Of T).Contains(T)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.IOperandCollection`1.Contains(`0)
    name: Contains
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Contains__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.IOperandCollection`1.Contains(`0)
    name: Contains
    href: Ubiquity.NET.Llvm.IOperandCollection-1.html#Ubiquity_NET_Llvm_IOperandCollection_1_Contains__0_
  - name: (
  - name: T
  - name: )
