### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.PassBuilderOptions
  commentId: T:Ubiquity.NET.Llvm.PassBuilderOptions
  id: PassBuilderOptions
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.PassBuilderOptions.#ctor
  - Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline
  - Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile
  - Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging
  - Ubiquity.NET.Llvm.PassBuilderOptions.Dispose
  - Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll
  - Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold
  - Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap
  - Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap
  - Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving
  - Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling
  - Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization
  - Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions
  - Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization
  - Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach
  langs:
  - csharp
  - vb
  name: PassBuilderOptions
  nameWithType: PassBuilderOptions
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions
  type: Struct
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: PassBuilderOptions
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 11
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Class to hold options for an LLVM pass builder
  example: []
  syntax:
    content: public readonly ref struct PassBuilderOptions
    content.vb: Public Structure PassBuilderOptions
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.#ctor
  commentId: M:Ubiquity.NET.Llvm.PassBuilderOptions.#ctor
  id: '#ctor'
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: PassBuilderOptions()
  nameWithType: PassBuilderOptions.PassBuilderOptions()
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.PassBuilderOptions()
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 14
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.PassBuilderOptions" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public PassBuilderOptions()
    content.vb: Public Sub New()
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.#ctor*
  nameWithType.vb: PassBuilderOptions.New()
  fullName.vb: Ubiquity.NET.Llvm.PassBuilderOptions.New()
  name.vb: New()
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach
  id: VerifyEach
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: VerifyEach
  nameWithType: PassBuilderOptions.VerifyEach
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: VerifyEach
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 29
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the Verifier pass is added.
  remarks: >-
    The verifier pass ensures that all functions in the module are valid. This

    is especially useful during debugging and IR generation development.
  example: []
  syntax:
    content: public bool VerifyEach { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property VerifyEach As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging
  id: DebugLogging
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: DebugLogging
  nameWithType: PassBuilderOptions.DebugLogging
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DebugLogging
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 36
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether debug logging is used when running passes
  example: []
  syntax:
    content: public bool DebugLogging { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DebugLogging As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving
  id: LoopInterleaving
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: LoopInterleaving
  nameWithType: PassBuilderOptions.LoopInterleaving
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LoopInterleaving
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 46
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the optimization should honor this functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public bool LoopInterleaving { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LoopInterleaving As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization
  id: LoopVectorization
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: LoopVectorization
  nameWithType: PassBuilderOptions.LoopVectorization
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LoopVectorization
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 56
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the optimization should honor this functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public bool LoopVectorization { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LoopVectorization As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization
  id: SLPVectorization
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: SLPVectorization
  nameWithType: PassBuilderOptions.SLPVectorization
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SLPVectorization
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 66
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the optimization should honor this functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public bool SLPVectorization { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SLPVectorization As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling
  id: LoopUnrolling
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: LoopUnrolling
  nameWithType: PassBuilderOptions.LoopUnrolling
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LoopUnrolling
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 76
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the optimization should honor this functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public bool LoopUnrolling { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LoopUnrolling As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll
  id: ForgetAllSCEVInLoopUnroll
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: ForgetAllSCEVInLoopUnroll
  nameWithType: PassBuilderOptions.ForgetAllSCEVInLoopUnroll
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ForgetAllSCEVInLoopUnroll
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 86
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the optimization should honor this functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public bool ForgetAllSCEVInLoopUnroll { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ForgetAllSCEVInLoopUnroll As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile
  id: CallGraphProfile
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: CallGraphProfile
  nameWithType: PassBuilderOptions.CallGraphProfile
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CallGraphProfile
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 96
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the optimization should honor this functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public bool CallGraphProfile { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CallGraphProfile As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions
  id: MergeFunctions
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: MergeFunctions
  nameWithType: PassBuilderOptions.MergeFunctions
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: MergeFunctions
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 106
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value indicating whether the optimization should honor this functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public bool MergeFunctions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MergeFunctions As Boolean
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline
  id: AliasAnalysisPipeline
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: AliasAnalysisPipeline
  nameWithType: PassBuilderOptions.AliasAnalysisPipeline
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AliasAnalysisPipeline
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 113
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or sets a value for a custom Alias Analysis pipeline
  example: []
  syntax:
    content: public string AliasAnalysisPipeline { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AliasAnalysisPipeline As String
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap
  id: LicmMssaOptCap
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: LicmMssaOptCap
  nameWithType: PassBuilderOptions.LicmMssaOptCap
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LicmMssaOptCap
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 123
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value for the limit of the optimization functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public uint LicmMssaOptCap { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property LicmMssaOptCap As UInteger
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap
  id: LicmMssaNoAccForPromotionCap
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: LicmMssaNoAccForPromotionCap
  nameWithType: PassBuilderOptions.LicmMssaNoAccForPromotionCap
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: LicmMssaNoAccForPromotionCap
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 133
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value for the limit of the optimization functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public uint LicmMssaNoAccForPromotionCap { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property LicmMssaNoAccForPromotionCap As UInteger
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold
  commentId: P:Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold
  id: InlinerThreshold
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: InlinerThreshold
  nameWithType: PassBuilderOptions.InlinerThreshold
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InlinerThreshold
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 143
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Gets or Sets a value for the limit of the optimization functionality
  remarks: LLVM-C APIs are lacking documentation on this, so the information is sadly vague.
  example: []
  syntax:
    content: public int InlinerThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InlinerThreshold As Integer
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold*
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.Dispose
  commentId: M:Ubiquity.NET.Llvm.PassBuilderOptions.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.PassBuilderOptions
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: PassBuilderOptions.Dispose()
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/PassBuilderOptions.cs
    startLine: 150
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Disposes the underlying LLVM handle
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.PassBuilderOptions.Dispose*
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.PassBuilderOptions
  commentId: T:Ubiquity.NET.Llvm.PassBuilderOptions
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html
  name: PassBuilderOptions
  nameWithType: PassBuilderOptions
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.#ctor*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.#ctor
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions__ctor
  name: PassBuilderOptions
  nameWithType: PassBuilderOptions.PassBuilderOptions
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.PassBuilderOptions
  nameWithType.vb: PassBuilderOptions.New
  fullName.vb: Ubiquity.NET.Llvm.PassBuilderOptions.New
  name.vb: New
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_VerifyEach
  name: VerifyEach
  nameWithType: PassBuilderOptions.VerifyEach
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.VerifyEach
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_DebugLogging
  name: DebugLogging
  nameWithType: PassBuilderOptions.DebugLogging
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.DebugLogging
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_LoopInterleaving
  name: LoopInterleaving
  nameWithType: PassBuilderOptions.LoopInterleaving
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LoopInterleaving
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_LoopVectorization
  name: LoopVectorization
  nameWithType: PassBuilderOptions.LoopVectorization
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LoopVectorization
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_SLPVectorization
  name: SLPVectorization
  nameWithType: PassBuilderOptions.SLPVectorization
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.SLPVectorization
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_LoopUnrolling
  name: LoopUnrolling
  nameWithType: PassBuilderOptions.LoopUnrolling
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LoopUnrolling
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_ForgetAllSCEVInLoopUnroll
  name: ForgetAllSCEVInLoopUnroll
  nameWithType: PassBuilderOptions.ForgetAllSCEVInLoopUnroll
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.ForgetAllSCEVInLoopUnroll
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_CallGraphProfile
  name: CallGraphProfile
  nameWithType: PassBuilderOptions.CallGraphProfile
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.CallGraphProfile
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_MergeFunctions
  name: MergeFunctions
  nameWithType: PassBuilderOptions.MergeFunctions
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.MergeFunctions
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_AliasAnalysisPipeline
  name: AliasAnalysisPipeline
  nameWithType: PassBuilderOptions.AliasAnalysisPipeline
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.AliasAnalysisPipeline
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_LicmMssaOptCap
  name: LicmMssaOptCap
  nameWithType: PassBuilderOptions.LicmMssaOptCap
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaOptCap
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_LicmMssaNoAccForPromotionCap
  name: LicmMssaNoAccForPromotionCap
  nameWithType: PassBuilderOptions.LicmMssaNoAccForPromotionCap
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.LicmMssaNoAccForPromotionCap
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_InlinerThreshold
  name: InlinerThreshold
  nameWithType: PassBuilderOptions.InlinerThreshold
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.InlinerThreshold
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Ubiquity.NET.Llvm.PassBuilderOptions.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.PassBuilderOptions.Dispose
  href: Ubiquity.NET.Llvm.PassBuilderOptions.html#Ubiquity_NET_Llvm_PassBuilderOptions_Dispose
  name: Dispose
  nameWithType: PassBuilderOptions.Dispose
  fullName: Ubiquity.NET.Llvm.PassBuilderOptions.Dispose
