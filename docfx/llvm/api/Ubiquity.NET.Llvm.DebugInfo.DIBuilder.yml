### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  id: DIBuilder
  parent: Ubiquity.NET.Llvm.DebugInfo
  children:
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.#ctor(Ubiquity.NET.Llvm.Module)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt16)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType(System.String,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DiTypeKind,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.Boolean,System.String,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.String,System.Boolean,System.String,System.UInt32,System.String,System.String)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression(System.UInt64)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIEnumerator},Ubiquity.NET.Llvm.DebugInfo.DIType)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue(System.String,System.Int64,System.Boolean)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.ExpressionOp})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(System.String)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(System.String,System.String)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean,Ubiquity.NET.Llvm.Values.Function)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression(Ubiquity.NET.Llvm.DebugInfo.DINode,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.Boolean)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,System.UInt64,System.UInt32,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType(Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType(Ubiquity.NET.Llvm.DebugInfo.Tag,System.String,Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.String)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.String)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange(System.Int64,System.Int64)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIFile)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,System.String)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish(Ubiquity.NET.Llvm.DebugInfo.DISubProgram)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  - Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule
  langs:
  - csharp
  - vb
  name: DIBuilder
  nameWithType: DIBuilder
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  type: Struct
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: DIBuilder
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 38
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: DIBuilder is a factory class for creating DebugInformation for an LLVM <xref href="Ubiquity.NET.Llvm.Module" data-throw-if-not-resolved="false"></xref>
  remarks: >-
    Many Debug information metadata nodes are created with unresolved references to additional

    metadata. To ensure such metadata is resolved applications should call the <xref href="Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish" data-throw-if-not-resolved="false"></xref>

    method to resolve and finalize the metadata. After this point only fully resolved nodes may

    be added to ensure that the data remains valid.
  example: []
  syntax:
    content: public ref struct DIBuilder
    content.vb: Public Structure DIBuilder
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourceleveldebugging
    altText: LLVM Source Level Debugging
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.#ctor(Ubiquity.NET.Llvm.Module)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.#ctor(Ubiquity.NET.Llvm.Module)
  id: '#ctor(Ubiquity.NET.Llvm.Module)'
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: DIBuilder(Module)
  nameWithType: DIBuilder.DIBuilder(Module)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.DIBuilder(Ubiquity.NET.Llvm.Module)
  type: Constructor
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: .ctor
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 42
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Initializes a new instance of the <xref href="Ubiquity.NET.Llvm.DebugInfo.DIBuilder" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public DIBuilder(Module owningModule)
    parameters:
    - id: owningModule
      type: Ubiquity.NET.Llvm.Module
      description: Module that owns this builder
    content.vb: Public Sub New(owningModule As [Module])
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.#ctor*
  nameWithType.vb: DIBuilder.New(Module)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.New(Ubiquity.NET.Llvm.Module)
  name.vb: New(Module)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose
  id: Dispose
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DIBuilder.Dispose()
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Dispose
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 48
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Dispose this builder instance
  example: []
  syntax:
    content: public readonly void Dispose()
    content.vb: Public Sub Dispose()
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose*
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule
  id: OwningModule
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: OwningModule
  nameWithType: DIBuilder.OwningModule
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: OwningModule
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 54
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the module that owns this builder
  example: []
  syntax:
    content: public readonly IModule OwningModule { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.IModule
    content.vb: Public ReadOnly Property OwningModule As IModule
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule*
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit
  commentId: P:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit
  id: CompileUnit
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CompileUnit
  nameWithType: DIBuilder.CompileUnit
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CompileUnit
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 57
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets the compile unit created by this builder
  example: []
  syntax:
    content: public readonly DICompileUnit? CompileUnit { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
    content.vb: Public Property CompileUnit As DICompileUnit
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit*
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.Boolean,System.String,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.Boolean,System.String,System.UInt32)
  id: CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.Boolean,System.String,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateCompileUnit(SourceLanguage, string, string?, bool, string?, uint)
  nameWithType: DIBuilder.CreateCompileUnit(SourceLanguage, string, string?, bool, string?, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage, string, string?, bool, string?, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateCompileUnit
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 68
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompileUnit" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public DICompileUnit CreateCompileUnit(SourceLanguage language, string sourceFilePath, string? producer, bool optimized = false, string? compilationFlags = null, uint runtimeVersion = 0)
    parameters:
    - id: language
      type: Ubiquity.NET.Llvm.DebugInfo.SourceLanguage
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.SourceLanguage" data-throw-if-not-resolved="false"></xref> for the compilation unit
    - id: sourceFilePath
      type: System.String
      description: Full path to the source file of this compilation unit
    - id: producer
      type: System.String
      description: Name of the application processing the compilation unit
    - id: optimized
      type: System.Boolean
      description: Flag to indicate if the code in this compilation unit is optimized
    - id: compilationFlags
      type: System.String
      description: Additional tool specific flags
    - id: runtimeVersion
      type: System.UInt32
      description: Runtime version
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompileUnit" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateCompileUnit(language As SourceLanguage, sourceFilePath As String, producer As String, optimized As Boolean = False, compilationFlags As String = Nothing, runtimeVersion As UInteger = 0) As DICompileUnit
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit*
  nameWithType.vb: DIBuilder.CreateCompileUnit(SourceLanguage, String, String, Boolean, String, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage, String, String, Boolean, String, UInteger)
  name.vb: CreateCompileUnit(SourceLanguage, String, String, Boolean, String, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.String,System.Boolean,System.String,System.UInt32,System.String,System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.String,System.Boolean,System.String,System.UInt32,System.String,System.String)
  id: CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage,System.String,System.String,System.String,System.Boolean,System.String,System.UInt32,System.String,System.String)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateCompileUnit(SourceLanguage, string, string, string?, bool, string?, uint, string?, string?)
  nameWithType: DIBuilder.CreateCompileUnit(SourceLanguage, string, string, string?, bool, string?, uint, string?, string?)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage, string, string, string?, bool, string?, uint, string?, string?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateCompileUnit
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 99
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompileUnit" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public DICompileUnit CreateCompileUnit(SourceLanguage language, string fileName, string fileDirectory, string? producer, bool optimized, string? compilationFlags, uint runtimeVersion, string? sysRoot = null, string? sdk = null)
    parameters:
    - id: language
      type: Ubiquity.NET.Llvm.DebugInfo.SourceLanguage
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.SourceLanguage" data-throw-if-not-resolved="false"></xref> for the compilation unit
    - id: fileName
      type: System.String
      description: Name of the source file of this compilation unit (without any path)
    - id: fileDirectory
      type: System.String
      description: Path of the directory containing the file
    - id: producer
      type: System.String
      description: Name of the application processing the compilation unit
    - id: optimized
      type: System.Boolean
      description: Flag to indicate if the code in this compilation unit is optimized
    - id: compilationFlags
      type: System.String
      description: Additional tool specific flags
    - id: runtimeVersion
      type: System.UInt32
      description: Runtime version
    - id: sysRoot
      type: System.String
      description: System root for the debug info to use [Default:<xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>]
    - id: sdk
      type: System.String
      description: SDK name for the debug record [Default:<xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>]
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompileUnit" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateCompileUnit(language As SourceLanguage, fileName As String, fileDirectory As String, producer As String, optimized As Boolean, compilationFlags As String, runtimeVersion As UInteger, sysRoot As String = Nothing, sdk As String = Nothing) As DICompileUnit
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit*
  nameWithType.vb: DIBuilder.CreateCompileUnit(SourceLanguage, String, String, String, Boolean, String, UInteger, String, String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit(Ubiquity.NET.Llvm.DebugInfo.SourceLanguage, String, String, String, Boolean, String, UInteger, String, String)
  name.vb: CreateCompileUnit(SourceLanguage, String, String, String, Boolean, String, UInteger, String, String)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIFile)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIFile)
  id: CreateTempMacroFile(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIFile)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateTempMacroFile(DIMacroFile?, uint, DIFile?)
  nameWithType: DIBuilder.CreateTempMacroFile(DIMacroFile?, uint, DIFile?)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile?, uint, Ubiquity.NET.Llvm.DebugInfo.DIFile?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateTempMacroFile
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 157
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a debugging information temporary entry for a macro file
  remarks: >-
    The list of macro node direct children is calculated by the use of the <xref href="Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile%2cSystem.UInt32%2cUbiquity.NET.Llvm.DebugInfo.MacroKind%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    functions parentFile parameter.
  example: []
  syntax:
    content: public readonly DIMacroFile CreateTempMacroFile(DIMacroFile? parent, uint line, DIFile? file)
    parameters:
    - id: parent
      type: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
      description: Macro file parent, if any
    - id: line
      type: System.UInt32
      description: Source line where the macro file is included
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File information for the file containing the macro
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
      description: Newly created <xref href="Ubiquity.NET.Llvm.DebugInfo.DIMacroFile" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateTempMacroFile(parent As DIMacroFile, line As UInteger, file As DIFile) As DIMacroFile
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile*
  nameWithType.vb: DIBuilder.CreateTempMacroFile(DIMacroFile, UInteger, DIFile)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIFile)
  name.vb: CreateTempMacroFile(DIMacroFile, UInteger, DIFile)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
  id: CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateMacro(DIMacroFile?, uint, MacroKind, string, string)
  nameWithType: DIBuilder.CreateMacro(DIMacroFile?, uint, MacroKind, string, string)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile?, uint, Ubiquity.NET.Llvm.DebugInfo.MacroKind, string, string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateMacro
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 175
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Create a macro
  example: []
  syntax:
    content: public readonly DIMacro CreateMacro(DIMacroFile? parentFile, uint line, MacroKind kind, string name, string value)
    parameters:
    - id: parentFile
      type: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
      description: Parent file containing the macro
    - id: line
      type: System.UInt32
      description: Source line number where the macro is defined
    - id: kind
      type: Ubiquity.NET.Llvm.DebugInfo.MacroKind
      description: Id of macro
    - id: name
      type: System.String
      description: Name of the macro
    - id: value
      type: System.String
      description: Value of the macro (use String.Empty for <xref href="Ubiquity.NET.Llvm.DebugInfo.MacroKind.Undefine" data-throw-if-not-resolved="false"></xref>)
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIMacro
      description: Newly created macro node
    content.vb: Public Function CreateMacro(parentFile As DIMacroFile, line As UInteger, kind As MacroKind, name As String, value As String) As DIMacro
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro*
  nameWithType.vb: DIBuilder.CreateMacro(DIMacroFile, UInteger, MacroKind, String, String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.MacroKind, String, String)
  name.vb: CreateMacro(DIMacroFile, UInteger, MacroKind, String, String)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.Boolean)
  id: CreateNamespace(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.Boolean)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateNamespace(DIScope?, string, bool)
  nameWithType: DIBuilder.CreateNamespace(DIScope?, string, bool)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateNamespace
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 208
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DINamespace" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DINamespace CreateNamespace(DIScope? scope, string name, bool exportSymbols)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Containing scope for the namespace or null if the namespace is a global one
    - id: name
      type: System.String
      description: Name of the namespace
    - id: exportSymbols
      type: System.Boolean
      description: export symbols
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DINamespace
      description: Debug namespace
    content.vb: Public Function CreateNamespace(scope As DIScope, name As String, exportSymbols As Boolean) As DINamespace
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace*
  nameWithType.vb: DIBuilder.CreateNamespace(DIScope, String, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Boolean)
  name.vb: CreateNamespace(DIScope, String, Boolean)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(System.String)
  id: CreateFile(System.String)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateFile(string?)
  nameWithType: DIBuilder.CreateFile(string?)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(string?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateFile
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 229
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DIFile CreateFile(string? path)
    parameters:
    - id: path
      type: System.String
      description: Path of the file (may be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty)
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: >-
        <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref> or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if <code class="paramref">path</code>

        is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> empty, or all whitespace
    content.vb: Public Function CreateFile(path As String) As DIFile
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile*
  nameWithType.vb: DIBuilder.CreateFile(String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(String)
  name.vb: CreateFile(String)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(System.String,System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(System.String,System.String)
  id: CreateFile(System.String,System.String)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateFile(string?, string?)
  nameWithType: DIBuilder.CreateFile(string?, string?)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(string?, string?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateFile
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 240
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DIFile CreateFile(string? fileName, string? directory)
    parameters:
    - id: fileName
      type: System.String
      description: Name of the file (may be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty)
    - id: directory
      type: System.String
      description: Path of the directory containing the file (may be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> or empty)
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref> created
    content.vb: Public Function CreateFile(fileName As String, directory As String) As DIFile
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile*
  nameWithType.vb: DIBuilder.CreateFile(String, String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile(String, String)
  name.vb: CreateFile(String, String)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32)
  id: CreateLexicalBlock(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateLexicalBlock(DIScope?, DIFile?, uint, uint)
  nameWithType: DIBuilder.CreateLexicalBlock(DIScope?, DIFile?, uint, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock(Ubiquity.NET.Llvm.DebugInfo.DIScope?, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateLexicalBlock
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 262
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.DebugInfo.DILexicalBlock" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DILexicalBlock CreateLexicalBlock(DIScope? scope, DIFile? file, uint line, uint column)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIScope" data-throw-if-not-resolved="false"></xref> for the block
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref> containing the block
    - id: line
      type: System.UInt32
      description: Starting line number for the block
    - id: column
      type: System.UInt32
      description: Starting column for the block
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlock
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILexicalBlock" data-throw-if-not-resolved="false"></xref> created from the parameters
    content.vb: Public Function CreateLexicalBlock(scope As DIScope, file As DIFile, line As UInteger, column As UInteger) As DILexicalBlock
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock*
  nameWithType.vb: DIBuilder.CreateLexicalBlock(DIScope, DIFile, UInteger, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock(Ubiquity.NET.Llvm.DebugInfo.DIScope, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, UInteger)
  name.vb: CreateLexicalBlock(DIScope, DIFile, UInteger, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32)
  id: CreateLexicalBlockFile(Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateLexicalBlockFile(DIScope?, DIFile?, uint)
  nameWithType: DIBuilder.CreateLexicalBlockFile(DIScope?, DIFile?, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile(Ubiquity.NET.Llvm.DebugInfo.DIScope?, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateLexicalBlockFile
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 282
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DILexicalBlockFile" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DILexicalBlockFile CreateLexicalBlockFile(DIScope? scope, DIFile? file, uint discriminator)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIScope" data-throw-if-not-resolved="false"></xref> for the block
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref>
    - id: discriminator
      type: System.UInt32
      description: Discriminator to disambiguate lexical blocks with the same file info
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlockFile
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILexicalBlockFile" data-throw-if-not-resolved="false"></xref> constructed from the parameters
    content.vb: Public Function CreateLexicalBlockFile(scope As DIScope, file As DIFile, discriminator As UInteger) As DILexicalBlockFile
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile*
  nameWithType.vb: DIBuilder.CreateLexicalBlockFile(DIScope, DIFile, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile(Ubiquity.NET.Llvm.DebugInfo.DIScope, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger)
  name.vb: CreateLexicalBlockFile(DIScope, DIFile, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean,Ubiquity.NET.Llvm.Values.Function)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean,Ubiquity.NET.Llvm.Values.Function)
  id: CreateFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean,Ubiquity.NET.Llvm.Values.Function)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateFunction(DIScope?, string, string, DIFile?, uint, DISubroutineType?, bool, bool, uint, DebugInfoFlags, bool, Function)
  nameWithType: DIBuilder.CreateFunction(DIScope?, string, string, DIFile?, uint, DISubroutineType?, bool, bool, uint, DebugInfoFlags, bool, Function)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, Ubiquity.NET.Llvm.DebugInfo.DISubroutineType?, bool, bool, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, bool, Ubiquity.NET.Llvm.Values.Function)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateFunction
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 308
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Factory method to create a <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubProgram" data-throw-if-not-resolved="false"></xref> with debug information
  example: []
  syntax:
    content: public readonly DISubProgram CreateFunction(DIScope? scope, string name, string mangledName, DIFile? file, uint line, DISubroutineType? signatureType, bool isLocalToUnit, bool isDefinition, uint scopeLine, DebugInfoFlags debugFlags, bool isOptimized, Function function)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIScope" data-throw-if-not-resolved="false"></xref> for the function
    - id: name
      type: System.String
      description: Name of the function as it appears in the source language
    - id: mangledName
      type: System.String
      description: Linkage (mangled) name of the function
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref> containing the function
    - id: line
      type: System.UInt32
      description: starting line of the function definition
    - id: signatureType
      type: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref> for the function's signature type
    - id: isLocalToUnit
      type: System.Boolean
      description: Flag to indicate if this function is local to the compilation unit or available externally
    - id: isDefinition
      type: System.Boolean
      description: Flag to indicate if this is a definition or a declaration only
    - id: scopeLine
      type: System.UInt32
      description: starting line of the first scope of the function's body
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for this function
    - id: isOptimized
      type: System.Boolean
      description: Flag to indicate if this function is optimized
    - id: function
      type: Ubiquity.NET.Llvm.Values.Function
      description: Underlying LLVM <xref href="Ubiquity.NET.Llvm.Values.Function" data-throw-if-not-resolved="false"></xref> to attach debug info to
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DISubProgram
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubProgram" data-throw-if-not-resolved="false"></xref> created based on the input parameters
    content.vb: Public Function CreateFunction(scope As DIScope, name As String, mangledName As String, file As DIFile, line As UInteger, signatureType As DISubroutineType, isLocalToUnit As Boolean, isDefinition As Boolean, scopeLine As UInteger, debugFlags As DebugInfoFlags, isOptimized As Boolean, [function] As [Function]) As DISubProgram
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction*
  nameWithType.vb: DIBuilder.CreateFunction(DIScope, String, String, DIFile, UInteger, DISubroutineType, Boolean, Boolean, UInteger, DebugInfoFlags, Boolean, Function)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.DISubroutineType, Boolean, Boolean, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Boolean, Ubiquity.NET.Llvm.Values.Function)
  name.vb: CreateFunction(DIScope, String, String, DIFile, UInteger, DISubroutineType, Boolean, Boolean, UInteger, DebugInfoFlags, Boolean, Function)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean)
  id: ForwardDeclareFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DISubroutineType,System.Boolean,System.Boolean,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Boolean)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: ForwardDeclareFunction(DIScope?, string, string, DIFile?, uint, DISubroutineType, bool, bool, uint, DebugInfoFlags, bool)
  nameWithType: DIBuilder.ForwardDeclareFunction(DIScope?, string, string, DIFile?, uint, DISubroutineType, bool, bool, uint, DebugInfoFlags, bool)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, Ubiquity.NET.Llvm.DebugInfo.DISubroutineType, bool, bool, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ForwardDeclareFunction
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 375
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a new forward declaration to a function
  example: []
  syntax:
    content: public readonly DISubProgram ForwardDeclareFunction(DIScope? scope, string name, string mangledName, DIFile? file, uint line, DISubroutineType subroutineType, bool isLocalToUnit, bool isDefinition, uint scopeLine, DebugInfoFlags debugFlags, bool isOptimized)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIScope" data-throw-if-not-resolved="false"></xref> for the declaration
    - id: name
      type: System.String
      description: Name of the function as it appears in source
    - id: mangledName
      type: System.String
      description: mangled name of the function (for linker)
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: Source file location for the function
    - id: line
      type: System.UInt32
      description: starting line of the declaration
    - id: subroutineType
      type: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
      description: Signature for the function
    - id: isLocalToUnit
      type: System.Boolean
      description: Flag to indicate if this declaration is local to the compilation unit
    - id: isDefinition
      type: System.Boolean
      description: Flag to indicate if this is a definition
    - id: scopeLine
      type: System.UInt32
      description: Line of the first scope block
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the function
    - id: isOptimized
      type: System.Boolean
      description: Flag to indicate if the function is optimized
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DISubProgram
      description: Subprogram as a forward declaration
    content.vb: Public Function ForwardDeclareFunction(scope As DIScope, name As String, mangledName As String, file As DIFile, line As UInteger, subroutineType As DISubroutineType, isLocalToUnit As Boolean, isDefinition As Boolean, scopeLine As UInteger, debugFlags As DebugInfoFlags, isOptimized As Boolean) As DISubProgram
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction*
  nameWithType.vb: DIBuilder.ForwardDeclareFunction(DIScope, String, String, DIFile, UInteger, DISubroutineType, Boolean, Boolean, UInteger, DebugInfoFlags, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.DISubroutineType, Boolean, Boolean, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Boolean)
  name.vb: ForwardDeclareFunction(DIScope, String, String, DIFile, UInteger, DISubroutineType, Boolean, Boolean, UInteger, DebugInfoFlags, Boolean)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt32)
  id: CreateLocalVariable(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateLocalVariable(DIScope?, string, DIFile?, uint, DIType?, bool, DebugInfoFlags, uint)
  nameWithType: DIBuilder.CreateLocalVariable(DIScope?, string, DIFile?, uint, DIType?, bool, DebugInfoFlags, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, Ubiquity.NET.Llvm.DebugInfo.DIType?, bool, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateLocalVariable
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 430
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> for a given scope
  example: []
  syntax:
    content: public readonly DILocalVariable CreateLocalVariable(DIScope? scope, string name, DIFile? file, uint line, DIType? type, bool alwaysPreserve, DebugInfoFlags debugFlags, uint alignInBits = 0)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope the variable belongs to
    - id: name
      type: System.String
      description: Name of the variable
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File where the variable is declared
    - id: line
      type: System.UInt32
      description: Line where the variable is declared
    - id: type
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Type of the variable
    - id: alwaysPreserve
      type: System.Boolean
      description: Flag to indicate if this variable's debug information should always be preserved
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: Flags for the variable
    - id: alignInBits
      type: System.UInt32
      description: Variable alignment (in Bits)
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateLocalVariable(scope As DIScope, name As String, file As DIFile, line As UInteger, type As DIType, alwaysPreserve As Boolean, debugFlags As DebugInfoFlags, alignInBits As UInteger = 0) As DILocalVariable
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable*
  nameWithType.vb: DIBuilder.CreateLocalVariable(DIScope, String, DIFile, UInteger, DIType, Boolean, DebugInfoFlags, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, Boolean, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, UInteger)
  name.vb: CreateLocalVariable(DIScope, String, DIFile, UInteger, DIType, Boolean, DebugInfoFlags, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt16)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt16)
  id: CreateArgument(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.UInt16)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateArgument(DIScope?, string, DIFile?, uint, DIType?, bool, DebugInfoFlags, ushort)
  nameWithType: DIBuilder.CreateArgument(DIScope?, string, DIFile?, uint, DIType?, bool, DebugInfoFlags, ushort)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, Ubiquity.NET.Llvm.DebugInfo.DIType?, bool, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, ushort)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateArgument
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 468
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates an argument for a function as a <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DILocalVariable CreateArgument(DIScope? scope, string name, DIFile? file, uint line, DIType? type, bool alwaysPreserve, DebugInfoFlags debugFlags, ushort argNo)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope for the argument
    - id: name
      type: System.String
      description: Name of the argument
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIFile" data-throw-if-not-resolved="false"></xref> containing the function this argument is declared in
    - id: line
      type: System.UInt32
      description: Line number fort his argument
    - id: type
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Debug type for this argument
    - id: alwaysPreserve
      type: System.Boolean
      description: Flag to indicate if this argument is always preserved for debug view even if optimization would remove it
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for this argument
    - id: argNo
      type: System.UInt16
      description: One based argument index on the method (e.g the first argument is 1 not 0 )
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> representing the function argument
    content.vb: Public Function CreateArgument(scope As DIScope, name As String, file As DIFile, line As UInteger, type As DIType, alwaysPreserve As Boolean, debugFlags As DebugInfoFlags, argNo As UShort) As DILocalVariable
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument*
  nameWithType.vb: DIBuilder.CreateArgument(DIScope, String, DIFile, UInteger, DIType, Boolean, DebugInfoFlags, UShort)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, Boolean, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, UShort)
  name.vb: CreateArgument(DIScope, String, DIFile, UInteger, DIType, Boolean, DebugInfoFlags, UShort)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType(System.String,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DiTypeKind,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType(System.String,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DiTypeKind,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  id: CreateBasicType(System.String,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DiTypeKind,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateBasicType(string, ulong, DiTypeKind, DebugInfoFlags)
  nameWithType: DIBuilder.CreateBasicType(string, ulong, DiTypeKind, DebugInfoFlags)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType(string, ulong, Ubiquity.NET.Llvm.DebugInfo.DiTypeKind, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateBasicType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 502
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Construct debug information for a basic type (a.k.a. primitive type)
  example: []
  syntax:
    content: public readonly DIBasicType CreateBasicType(string name, ulong bitSize, DiTypeKind encoding, DebugInfoFlags diFlags = DebugInfoFlags.None)
    parameters:
    - id: name
      type: System.String
      description: Name of the type
    - id: bitSize
      type: System.UInt64
      description: Bit size for the type
    - id: encoding
      type: Ubiquity.NET.Llvm.DebugInfo.DiTypeKind
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DiTypeKind" data-throw-if-not-resolved="false"></xref> encoding for the type
    - id: diFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the type
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIBasicType
      description: Basic type debugging information
    content.vb: Public Function CreateBasicType(name As String, bitSize As ULong, encoding As DiTypeKind, diFlags As DebugInfoFlags = DebugInfoFlags.None) As DIBasicType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType*
  nameWithType.vb: DIBuilder.CreateBasicType(String, ULong, DiTypeKind, DebugInfoFlags)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType(String, ULong, Ubiquity.NET.Llvm.DebugInfo.DiTypeKind, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  name.vb: CreateBasicType(String, ULong, DiTypeKind, DebugInfoFlags)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,System.UInt64,System.UInt32,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,System.UInt64,System.UInt32,System.UInt32)
  id: CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,System.UInt64,System.UInt32,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreatePointerType(DIType?, string?, ulong, uint, uint)
  nameWithType: DIBuilder.CreatePointerType(DIType?, string?, ulong, uint, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIType?, string?, ulong, uint, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreatePointerType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 517
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a pointer type with debug information
  example: []
  syntax:
    content: public readonly DIDerivedType CreatePointerType(DIType? pointeeType, string? name, ulong bitSize, uint bitAlign = 0, uint addressSpace = 0)
    parameters:
    - id: pointeeType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: base type of the pointer (<a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> =&gt; void)
    - id: name
      type: System.String
      description: Name of the type
    - id: bitSize
      type: System.UInt64
      description: Bit size of the type
    - id: bitAlign
      type: System.UInt32
      description: But alignment of the type
    - id: addressSpace
      type: System.UInt32
      description: Address space for the pointer
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIDerivedType
      description: Pointer type
    content.vb: Public Function CreatePointerType(pointeeType As DIType, name As String, bitSize As ULong, bitAlign As UInteger = 0, addressSpace As UInteger = 0) As DIDerivedType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType*
  nameWithType.vb: DIBuilder.CreatePointerType(DIType, String, ULong, UInteger, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType(Ubiquity.NET.Llvm.DebugInfo.DIType, String, ULong, UInteger, UInteger)
  name.vb: CreatePointerType(DIType, String, ULong, UInteger, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType(Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType(Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag)
  id: CreateQualifiedType(Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateQualifiedType(DIType?, QualifiedTypeTag)
  nameWithType: DIBuilder.CreateQualifiedType(DIType?, QualifiedTypeTag)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType(Ubiquity.NET.Llvm.DebugInfo.DIType?, Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateQualifiedType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 537
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a qualified type
  example: []
  syntax:
    content: public readonly DIDerivedType CreateQualifiedType(DIType? baseType, QualifiedTypeTag tag)
    parameters:
    - id: baseType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Base type to add the qualifier to
    - id: tag
      type: Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag
      description: Qualifier to apply
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIDerivedType
      description: Qualified type
    content.vb: Public Function CreateQualifiedType(baseType As DIType, tag As QualifiedTypeTag) As DIDerivedType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code class="paramref">tag</code> is <xref href="Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag.None" data-throw-if-not-resolved="false"></xref>
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">baseType</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>
  nameWithType.vb: DIBuilder.CreateQualifiedType(DIType, QualifiedTypeTag)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType(Ubiquity.NET.Llvm.DebugInfo.DIType, Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag)
  name.vb: CreateQualifiedType(DIType, QualifiedTypeTag)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  id: CreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateTypeArray(params DIType?[])
  nameWithType: DIBuilder.CreateTypeArray(params DIType?[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(params Ubiquity.NET.Llvm.DebugInfo.DIType?[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateTypeArray
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 547
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Create a debug metadata array of debug types
  example: []
  syntax:
    content: public readonly DITypeArray CreateTypeArray(params DIType?[] types)
    parameters:
    - id: types
      type: Ubiquity.NET.Llvm.DebugInfo.DIType[]
      description: Types to include in the array
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DITypeArray
      description: Array containing the types
    content.vb: Public Function CreateTypeArray(ParamArray types As DIType()) As DITypeArray
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray*
  nameWithType.vb: DIBuilder.CreateTypeArray(ParamArray DIType())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(ParamArray Ubiquity.NET.Llvm.DebugInfo.DIType())
  name.vb: CreateTypeArray(ParamArray DIType())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  id: CreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateTypeArray(IEnumerable<DIType?>)
  nameWithType: DIBuilder.CreateTypeArray(IEnumerable<DIType?>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DIType?>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateTypeArray
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 552
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Create a debug metadata array of debug types
  example: []
  syntax:
    content: public readonly DITypeArray CreateTypeArray(IEnumerable<DIType?> types)
    parameters:
    - id: types
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType}
      description: Types to include in the array
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DITypeArray
      description: Array containing the types
    content.vb: Public Function CreateTypeArray(types As IEnumerable(Of DIType)) As DITypeArray
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray*
  nameWithType.vb: DIBuilder.CreateTypeArray(IEnumerable(Of DIType))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray(System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DIType))
  name.vb: CreateTypeArray(IEnumerable(Of DIType))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType[])
  id: CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateSubroutineType(DebugInfoFlags, params DIType?[])
  nameWithType: DIBuilder.CreateSubroutineType(DebugInfoFlags, params DIType?[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, params Ubiquity.NET.Llvm.DebugInfo.DIType?[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateSubroutineType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 563
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref> to provide debug information for a function/procedure signature
  example: []
  syntax:
    content: public readonly DISubroutineType CreateSubroutineType(DebugInfoFlags debugFlags, params DIType?[] types)
    parameters:
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for this signature
    - id: types
      type: Ubiquity.NET.Llvm.DebugInfo.DIType[]
      description: Parameter types
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateSubroutineType(debugFlags As DebugInfoFlags, ParamArray types As DIType()) As DISubroutineType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType*
  nameWithType.vb: DIBuilder.CreateSubroutineType(DebugInfoFlags, ParamArray DIType())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, ParamArray Ubiquity.NET.Llvm.DebugInfo.DIType())
  name.vb: CreateSubroutineType(DebugInfoFlags, ParamArray DIType())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  id: CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateSubroutineType(DebugInfoFlags, IEnumerable<DIType?>)
  nameWithType: DIBuilder.CreateSubroutineType(DebugInfoFlags, IEnumerable<DIType?>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DIType?>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateSubroutineType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 572
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref> to provide debug information for a function/procedure signature
  example: []
  syntax:
    content: public readonly DISubroutineType CreateSubroutineType(DebugInfoFlags debugFlags, IEnumerable<DIType?> types)
    parameters:
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for this signature
    - id: types
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType}
      description: Parameter types
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateSubroutineType(debugFlags As DebugInfoFlags, types As IEnumerable(Of DIType)) As DISubroutineType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType*
  nameWithType.vb: DIBuilder.CreateSubroutineType(DebugInfoFlags, IEnumerable(Of DIType))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DIType))
  name.vb: CreateSubroutineType(DebugInfoFlags, IEnumerable(Of DIType))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  id: CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateSubroutineType(DebugInfoFlags)
  nameWithType: DIBuilder.CreateSubroutineType(DebugInfoFlags)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateSubroutineType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 590
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref> to provide debug information for a function/procedure signature
  example: []
  syntax:
    content: public readonly DISubroutineType CreateSubroutineType(DebugInfoFlags debugFlags)
    parameters:
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for this signature
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateSubroutineType(debugFlags As DebugInfoFlags) As DISubroutineType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType*
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  id: CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateSubroutineType(DebugInfoFlags, DIType?, IEnumerable<DIType?>)
  nameWithType: DIBuilder.CreateSubroutineType(DebugInfoFlags, DIType?, IEnumerable<DIType?>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType?, System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DIType?>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateSubroutineType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 600
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref> to provide debug information for a function/procedure signature
  example: []
  syntax:
    content: public readonly DISubroutineType CreateSubroutineType(DebugInfoFlags debugFlags, DIType? returnType, IEnumerable<DIType?> types)
    parameters:
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for this signature
    - id: returnType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Return type of the signature
    - id: types
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType}
      description: Parameters for the function
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubroutineType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateSubroutineType(debugFlags As DebugInfoFlags, returnType As DIType, types As IEnumerable(Of DIType)) As DISubroutineType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType*
  nameWithType.vb: DIBuilder.CreateSubroutineType(DebugInfoFlags, DIType, IEnumerable(Of DIType))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType(Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DIType))
  name.vb: CreateSubroutineType(DebugInfoFlags, DIType, IEnumerable(Of DIType))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  id: CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateStructType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, DIType?, params DINode[])
  nameWithType: DIBuilder.CreateStructType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, DIType?, params DINode[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType?, params Ubiquity.NET.Llvm.DebugInfo.DINode[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateStructType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 616
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug description of a structure type
  example: []
  syntax:
    content: public readonly DICompositeType CreateStructType(DIScope? scope, string name, DIFile? file, uint line, ulong bitSize, uint bitAlign, DebugInfoFlags debugFlags, DIType? derivedFrom, params DINode[] elements)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope containing the structure
    - id: name
      type: System.String
      description: Name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File containing the type
    - id: line
      type: System.UInt32
      description: Line of the start of the type
    - id: bitSize
      type: System.UInt64
      description: Size of the type in bits
    - id: bitAlign
      type: System.UInt32
      description: Bit alignment of the type
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the structure
    - id: derivedFrom
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIType" data-throw-if-not-resolved="false"></xref> this type is derived from, if any
    - id: elements
      type: Ubiquity.NET.Llvm.DebugInfo.DINode[]
      description: Node array describing the elements of the structure
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateStructType(scope As DIScope, name As String, file As DIFile, line As UInteger, bitSize As ULong, bitAlign As UInteger, debugFlags As DebugInfoFlags, derivedFrom As DIType, ParamArray elements As DINode()) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType*
  nameWithType.vb: DIBuilder.CreateStructType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, DIType, ParamArray DINode())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType, ParamArray Ubiquity.NET.Llvm.DebugInfo.DINode())
  name.vb: CreateStructType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, DIType, ParamArray DINode())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.String)
  id: CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.String)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateStructType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, DIType?, IEnumerable<DINode>, uint, DIType?, string)
  nameWithType: DIBuilder.CreateStructType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, DIType?, IEnumerable<DINode>, uint, DIType?, string)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType?, System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DINode>, uint, Ubiquity.NET.Llvm.DebugInfo.DIType?, string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateStructType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 644
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug description of a structure type
  example: []
  syntax:
    content: public readonly DICompositeType CreateStructType(DIScope? scope, string name, DIFile? file, uint line, ulong bitSize, uint bitAlign, DebugInfoFlags debugFlags, DIType? derivedFrom, IEnumerable<DINode> elements, uint runTimeLang = 0, DIType? vTableHolder = null, string uniqueId = "")
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope containing the structure
    - id: name
      type: System.String
      description: Name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File containing the type
    - id: line
      type: System.UInt32
      description: Line of the start of the type
    - id: bitSize
      type: System.UInt64
      description: Size of the type in bits
    - id: bitAlign
      type: System.UInt32
      description: Bit alignment of the type
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the structure
    - id: derivedFrom
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIType" data-throw-if-not-resolved="false"></xref> this type is derived from, if any
    - id: elements
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode}
      description: Node array describing the elements of the structure
    - id: runTimeLang
      type: System.UInt32
      description: runtime language for the type
    - id: vTableHolder
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: VTable holder for the type
    - id: uniqueId
      type: System.String
      description: Unique ID for the type
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateStructType(scope As DIScope, name As String, file As DIFile, line As UInteger, bitSize As ULong, bitAlign As UInteger, debugFlags As DebugInfoFlags, derivedFrom As DIType, elements As IEnumerable(Of DINode), runTimeLang As UInteger = 0, vTableHolder As DIType = Nothing, uniqueId As String = "") As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType*
  nameWithType.vb: DIBuilder.CreateStructType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, DIType, IEnumerable(Of DINode), UInteger, DIType, String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DINode), UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, String)
  name.vb: CreateStructType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, DIType, IEnumerable(Of DINode), UInteger, DIType, String)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  id: CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateUnionType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, DINodeArray)
  nameWithType: DIBuilder.CreateUnionType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, DINodeArray)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateUnionType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 693
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug description of a union type
  example: []
  syntax:
    content: public readonly DICompositeType CreateUnionType(DIScope? scope, string name, DIFile? file, uint line, ulong bitSize, uint bitAlign, DebugInfoFlags debugFlags, DINodeArray elements)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope containing the union
    - id: name
      type: System.String
      description: Name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File containing the union
    - id: line
      type: System.UInt32
      description: Line of the start of the union
    - id: bitSize
      type: System.UInt64
      description: Size of the union in bits
    - id: bitAlign
      type: System.UInt32
      description: Bit alignment of the union
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the union
    - id: elements
      type: Ubiquity.NET.Llvm.DebugInfo.DINodeArray
      description: Node array describing the elements of the union
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateUnionType(scope As DIScope, name As String, file As DIFile, line As UInteger, bitSize As ULong, bitAlign As UInteger, debugFlags As DebugInfoFlags, elements As DINodeArray) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType*
  nameWithType.vb: DIBuilder.CreateUnionType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, DINodeArray)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  name.vb: CreateUnionType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, DINodeArray)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  id: CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateUnionType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, params DINode[])
  nameWithType: DIBuilder.CreateUnionType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, params DINode[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, params Ubiquity.NET.Llvm.DebugInfo.DINode[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateUnionType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 717
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug description of a union type
  example: []
  syntax:
    content: public readonly DICompositeType CreateUnionType(DIScope? scope, string name, DIFile? file, uint line, ulong bitSize, uint bitAlign, DebugInfoFlags debugFlags, params DINode[] elements)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope containing the union
    - id: name
      type: System.String
      description: Name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File containing the union
    - id: line
      type: System.UInt32
      description: Line of the start of the union
    - id: bitSize
      type: System.UInt64
      description: Size of the union in bits
    - id: bitAlign
      type: System.UInt32
      description: Bit alignment of the union
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the union
    - id: elements
      type: Ubiquity.NET.Llvm.DebugInfo.DINode[]
      description: Node array describing the elements of the union
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateUnionType(scope As DIScope, name As String, file As DIFile, line As UInteger, bitSize As ULong, bitAlign As UInteger, debugFlags As DebugInfoFlags, ParamArray elements As DINode()) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType*
  nameWithType.vb: DIBuilder.CreateUnionType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, ParamArray DINode())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, ParamArray Ubiquity.NET.Llvm.DebugInfo.DINode())
  name.vb: CreateUnionType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, ParamArray DINode())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,System.String)
  id: CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode},System.UInt32,System.String)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateUnionType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, IEnumerable<DINode>, uint, string)
  nameWithType: DIBuilder.CreateUnionType(DIScope?, string, DIFile?, uint, ulong, uint, DebugInfoFlags, IEnumerable<DINode>, uint, string)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DINode>, uint, string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateUnionType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 742
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug description of a union type
  example: []
  syntax:
    content: public readonly DICompositeType CreateUnionType(DIScope? scope, string name, DIFile? file, uint line, ulong bitSize, uint bitAlign, DebugInfoFlags debugFlags, IEnumerable<DINode> elements, uint runTimeLang = 0, string uniqueId = "")
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope containing the union
    - id: name
      type: System.String
      description: Name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File containing the union
    - id: line
      type: System.UInt32
      description: Line of the start of the union
    - id: bitSize
      type: System.UInt64
      description: Size of the union in bits
    - id: bitAlign
      type: System.UInt32
      description: Bit alignment of the union
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the union
    - id: elements
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode}
      description: Node array describing the elements of the union
    - id: runTimeLang
      type: System.UInt32
      description: Objective-C runtime version [Default=0]
    - id: uniqueId
      type: System.String
      description: A unique identifier for the type
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateUnionType(scope As DIScope, name As String, file As DIFile, line As UInteger, bitSize As ULong, bitAlign As UInteger, debugFlags As DebugInfoFlags, elements As IEnumerable(Of DINode), runTimeLang As UInteger = 0, uniqueId As String = "") As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType*
  nameWithType.vb: DIBuilder.CreateUnionType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, IEnumerable(Of DINode), UInteger, String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DINode), UInteger, String)
  name.vb: CreateUnionType(DIScope, String, DIFile, UInteger, ULong, UInteger, DebugInfoFlags, IEnumerable(Of DINode), UInteger, String)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType)
  id: CreateMemberType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.UInt64,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,Ubiquity.NET.Llvm.DebugInfo.DIType)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateMemberType(DIScope?, string, DIFile?, uint, ulong, uint, ulong, DebugInfoFlags, DIType?)
  nameWithType: DIBuilder.CreateMemberType(DIScope?, string, DIFile?, uint, ulong, uint, ulong, DebugInfoFlags, DIType?)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, ulong, uint, ulong, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateMemberType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 788
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIDerivedType" data-throw-if-not-resolved="false"></xref> for a member of a type
  example: []
  syntax:
    content: public readonly DIDerivedType CreateMemberType(DIScope? scope, string name, DIFile? file, uint line, ulong bitSize, uint bitAlign, ulong bitOffset, DebugInfoFlags debugFlags, DIType? type)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope containing the member type
    - id: name
      type: System.String
      description: Name of the member type
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File containing the member type
    - id: line
      type: System.UInt32
      description: Line of the start of the member type
    - id: bitSize
      type: System.UInt64
      description: Size of the member type in bits
    - id: bitAlign
      type: System.UInt32
      description: Bit alignment of the member
    - id: bitOffset
      type: System.UInt64
      description: Bit offset of the member
    - id: debugFlags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the type
    - id: type
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: LLVM native type for the member type
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIDerivedType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateMemberType(scope As DIScope, name As String, file As DIFile, line As UInteger, bitSize As ULong, bitAlign As UInteger, bitOffset As ULong, debugFlags As DebugInfoFlags, type As DIType) As DIDerivedType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType*
  nameWithType.vb: DIBuilder.CreateMemberType(DIScope, String, DIFile, UInteger, ULong, UInteger, ULong, DebugInfoFlags, DIType)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, ULong, UInteger, ULong, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, Ubiquity.NET.Llvm.DebugInfo.DIType)
  name.vb: CreateMemberType(DIScope, String, DIFile, UInteger, ULong, UInteger, ULong, DebugInfoFlags, DIType)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  id: CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateArrayType(ulong, uint, DIType, DINodeArray)
  nameWithType: DIBuilder.CreateArrayType(ulong, uint, DIType, DINodeArray)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DIType, Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateArrayType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 824
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug information for an array type
  example: []
  syntax:
    content: public readonly DICompositeType CreateArrayType(ulong bitSize, uint bitAlign, DIType elementType, DINodeArray subscripts)
    parameters:
    - id: bitSize
      type: System.UInt64
      description: Size, in bits for the type
    - id: bitAlign
      type: System.UInt32
      description: Alignment in bits for the type
    - id: elementType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Type of elements in the array
    - id: subscripts
      type: Ubiquity.NET.Llvm.DebugInfo.DINodeArray
      description: Dimensions for the array
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref> for the array
    content.vb: Public Function CreateArrayType(bitSize As ULong, bitAlign As UInteger, elementType As DIType, subscripts As DINodeArray) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType*
  nameWithType.vb: DIBuilder.CreateArrayType(ULong, UInteger, DIType, DINodeArray)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  name.vb: CreateArrayType(ULong, UInteger, DIType, DINodeArray)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  id: CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateArrayType(ulong, uint, DIType, params DINode[])
  nameWithType: DIBuilder.CreateArrayType(ulong, uint, DIType, params DINode[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DIType, params Ubiquity.NET.Llvm.DebugInfo.DINode[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateArrayType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 836
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug information for an array type
  example: []
  syntax:
    content: public readonly DICompositeType CreateArrayType(ulong bitSize, uint bitAlign, DIType elementType, params DINode[] subscripts)
    parameters:
    - id: bitSize
      type: System.UInt64
      description: Size, in bits for the type
    - id: bitAlign
      type: System.UInt32
      description: Alignment in bits for the type
    - id: elementType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Type of elements in the array
    - id: subscripts
      type: Ubiquity.NET.Llvm.DebugInfo.DINode[]
      description: Dimensions for the array
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref> for the array
    content.vb: Public Function CreateArrayType(bitSize As ULong, bitAlign As UInteger, elementType As DIType, ParamArray subscripts As DINode()) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType*
  nameWithType.vb: DIBuilder.CreateArrayType(ULong, UInteger, DIType, ParamArray DINode())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, ParamArray Ubiquity.NET.Llvm.DebugInfo.DINode())
  name.vb: CreateArrayType(ULong, UInteger, DIType, ParamArray DINode())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  id: CreateArrayType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateArrayType(ulong, uint, DIType, IEnumerable<DINode>)
  nameWithType: DIBuilder.CreateArrayType(ulong, uint, DIType, IEnumerable<DINode>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DIType, System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DINode>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateArrayType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 847
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug information for an array type
  example: []
  syntax:
    content: public readonly DICompositeType CreateArrayType(ulong bitSize, uint bitAlign, DIType elementType, IEnumerable<DINode> subscripts)
    parameters:
    - id: bitSize
      type: System.UInt64
      description: Size, in bits for the type
    - id: bitAlign
      type: System.UInt32
      description: Alignment in bits for the type
    - id: elementType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Type of elements in the array
    - id: subscripts
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode}
      description: Dimensions for the array
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref> for the array
    content.vb: Public Function CreateArrayType(bitSize As ULong, bitAlign As UInteger, elementType As DIType, subscripts As IEnumerable(Of DINode)) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType*
  nameWithType.vb: DIBuilder.CreateArrayType(ULong, UInteger, DIType, IEnumerable(Of DINode))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType(ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DINode))
  name.vb: CreateArrayType(ULong, UInteger, DIType, IEnumerable(Of DINode))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  id: CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateVectorType(ulong, uint, DIType, DINodeArray)
  nameWithType: DIBuilder.CreateVectorType(ulong, uint, DIType, DINodeArray)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DIType, Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateVectorType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 863
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug information for a vector type
  example: []
  syntax:
    content: public readonly DICompositeType CreateVectorType(ulong bitSize, uint bitAlign, DIType elementType, DINodeArray subscripts)
    parameters:
    - id: bitSize
      type: System.UInt64
      description: Size, in bits for the type
    - id: bitAlign
      type: System.UInt32
      description: Alignment in bits for the type
    - id: elementType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Type of elements in the Vector
    - id: subscripts
      type: Ubiquity.NET.Llvm.DebugInfo.DINodeArray
      description: Dimensions for the Vector
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref> for the Vector
    content.vb: Public Function CreateVectorType(bitSize As ULong, bitAlign As UInteger, elementType As DIType, subscripts As DINodeArray) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType*
  nameWithType.vb: DIBuilder.CreateVectorType(ULong, UInteger, DIType, DINodeArray)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, Ubiquity.NET.Llvm.DebugInfo.DINodeArray)
  name.vb: CreateVectorType(ULong, UInteger, DIType, DINodeArray)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  id: CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,Ubiquity.NET.Llvm.DebugInfo.DINode[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateVectorType(ulong, uint, DIType, params DINode[])
  nameWithType: DIBuilder.CreateVectorType(ulong, uint, DIType, params DINode[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DIType, params Ubiquity.NET.Llvm.DebugInfo.DINode[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateVectorType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 875
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug information for a vector type
  example: []
  syntax:
    content: public readonly DICompositeType CreateVectorType(ulong bitSize, uint bitAlign, DIType elementType, params DINode[] subscripts)
    parameters:
    - id: bitSize
      type: System.UInt64
      description: Size, in bits for the type
    - id: bitAlign
      type: System.UInt32
      description: Alignment in bits for the type
    - id: elementType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Type of elements in the Vector
    - id: subscripts
      type: Ubiquity.NET.Llvm.DebugInfo.DINode[]
      description: Dimensions for the Vector
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref> for the Vector
    content.vb: Public Function CreateVectorType(bitSize As ULong, bitAlign As UInteger, elementType As DIType, ParamArray subscripts As DINode()) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType*
  nameWithType.vb: DIBuilder.CreateVectorType(ULong, UInteger, DIType, ParamArray DINode())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, ParamArray Ubiquity.NET.Llvm.DebugInfo.DINode())
  name.vb: CreateVectorType(ULong, UInteger, DIType, ParamArray DINode())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  id: CreateVectorType(System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateVectorType(ulong, uint, DIType, IEnumerable<DINode>)
  nameWithType: DIBuilder.CreateVectorType(ulong, uint, DIType, IEnumerable<DINode>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DIType, System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DINode>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateVectorType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 886
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug information for a vector type
  example: []
  syntax:
    content: public readonly DICompositeType CreateVectorType(ulong bitSize, uint bitAlign, DIType elementType, IEnumerable<DINode> subscripts)
    parameters:
    - id: bitSize
      type: System.UInt64
      description: Size, in bits for the type
    - id: bitAlign
      type: System.UInt32
      description: Alignment in bits for the type
    - id: elementType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Type of elements in the Vector
    - id: subscripts
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode}
      description: Dimensions for the Vector
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref> for the Vector
    content.vb: Public Function CreateVectorType(bitSize As ULong, bitAlign As UInteger, elementType As DIType, subscripts As IEnumerable(Of DINode)) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType*
  nameWithType.vb: DIBuilder.CreateVectorType(ULong, UInteger, DIType, IEnumerable(Of DINode))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType(ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DINode))
  name.vb: CreateVectorType(ULong, UInteger, DIType, IEnumerable(Of DINode))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  id: CreateTypedef(Ubiquity.NET.Llvm.DebugInfo.DIType,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateTypedef(DIType?, string, DIFile?, uint, DINode?, uint)
  nameWithType: DIBuilder.CreateTypedef(DIType?, string, DIFile?, uint, DINode?, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef(Ubiquity.NET.Llvm.DebugInfo.DIType?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, Ubiquity.NET.Llvm.DebugInfo.DINode?, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateTypedef
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 904
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates debug information for a type definition (e.g. type alias)
  example: []
  syntax:
    content: public readonly DIDerivedType CreateTypedef(DIType? type, string name, DIFile? file, uint line, DINode? context, uint alignInBits)
    parameters:
    - id: type
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Debug information for the aliased type
    - id: name
      type: System.String
      description: Name of the alias
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: File for the declaration of the typedef
    - id: line
      type: System.UInt32
      description: line for the typedef
    - id: context
      type: Ubiquity.NET.Llvm.DebugInfo.DINode
      description: ContextAlias for creating the typedef
    - id: alignInBits
      type: System.UInt32
      description: Bit alignment for the type
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIDerivedType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIDerivedType" data-throw-if-not-resolved="false"></xref>for the alias
    content.vb: Public Function CreateTypedef(type As DIType, name As String, file As DIFile, line As UInteger, context As DINode, alignInBits As UInteger) As DIDerivedType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef*
  nameWithType.vb: DIBuilder.CreateTypedef(DIType, String, DIFile, UInteger, DINode, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef(Ubiquity.NET.Llvm.DebugInfo.DIType, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.DINode, UInteger)
  name.vb: CreateTypedef(DIType, String, DIFile, UInteger, DINode, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange(System.Int64,System.Int64)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange(System.Int64,System.Int64)
  id: CreateSubRange(System.Int64,System.Int64)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateSubRange(long, long)
  nameWithType: DIBuilder.CreateSubRange(long, long)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange(long, long)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateSubRange
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 926
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubRange" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DISubRange CreateSubRange(long lowerBound, long count)
    parameters:
    - id: lowerBound
      type: System.Int64
      description: Lower bounds of the <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubRange" data-throw-if-not-resolved="false"></xref>
    - id: count
      type: System.Int64
      description: Count of elements in the sub range
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DISubRange
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubRange" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateSubRange(lowerBound As Long, count As Long) As DISubRange
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange*
  nameWithType.vb: DIBuilder.CreateSubRange(Long, Long)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange(Long, Long)
  name.vb: CreateSubRange(Long, Long)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  id: GetOrCreateArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: GetOrCreateArray(IEnumerable<DINode>)
  nameWithType: DIBuilder.GetOrCreateArray(IEnumerable<DINode>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray(System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DINode>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetOrCreateArray
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 941
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets or creates a node array with the specified elements
  remarks: >-
    <div class="NOTE"><h5>Note</h5><p>

    As of LLVM 8.0 there's not much reason to manually construct a <xref href="Ubiquity.NET.Llvm.DebugInfo.DINodeArray" data-throw-if-not-resolved="false"></xref>

    since use as an "in" parameter were superseded by overloads taking an actual array.

    </p></div>
  example: []
  syntax:
    content: public readonly DINodeArray GetOrCreateArray(IEnumerable<DINode> elements)
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode}
      description: Elements of the array
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DINodeArray
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DINodeArray" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetOrCreateArray(elements As IEnumerable(Of DINode)) As DINodeArray
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray*
  nameWithType.vb: DIBuilder.GetOrCreateArray(IEnumerable(Of DINode))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray(System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DINode))
  name.vb: GetOrCreateArray(IEnumerable(Of DINode))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  id: GetOrCreateTypeArray(Ubiquity.NET.Llvm.DebugInfo.DIType[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: GetOrCreateTypeArray(params DIType[])
  nameWithType: DIBuilder.GetOrCreateTypeArray(params DIType[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(params Ubiquity.NET.Llvm.DebugInfo.DIType[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetOrCreateTypeArray
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 956
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets or creates a Type array with the specified types
  example: []
  syntax:
    content: public readonly DITypeArray GetOrCreateTypeArray(params DIType[] types)
    parameters:
    - id: types
      type: Ubiquity.NET.Llvm.DebugInfo.DIType[]
      description: Types
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DITypeArray
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DITypeArray" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetOrCreateTypeArray(ParamArray types As DIType()) As DITypeArray
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray*
  nameWithType.vb: DIBuilder.GetOrCreateTypeArray(ParamArray DIType())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(ParamArray Ubiquity.NET.Llvm.DebugInfo.DIType())
  name.vb: GetOrCreateTypeArray(ParamArray DIType())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  id: GetOrCreateTypeArray(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: GetOrCreateTypeArray(IEnumerable<DIType>)
  nameWithType: DIBuilder.GetOrCreateTypeArray(IEnumerable<DIType>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DIType>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: GetOrCreateTypeArray
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 961
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Gets or creates a Type array with the specified types
  example: []
  syntax:
    content: public readonly DITypeArray GetOrCreateTypeArray(IEnumerable<DIType> types)
    parameters:
    - id: types
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType}
      description: Types
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DITypeArray
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DITypeArray" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetOrCreateTypeArray(types As IEnumerable(Of DIType)) As DITypeArray
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray*
  nameWithType.vb: DIBuilder.GetOrCreateTypeArray(IEnumerable(Of DIType))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray(System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DIType))
  name.vb: GetOrCreateTypeArray(IEnumerable(Of DIType))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue(System.String,System.Int64,System.Boolean)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue(System.String,System.Int64,System.Boolean)
  id: CreateEnumeratorValue(System.String,System.Int64,System.Boolean)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateEnumeratorValue(string, long, bool)
  nameWithType: DIBuilder.CreateEnumeratorValue(string, long, bool)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue(string, long, bool)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateEnumeratorValue
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 973
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a value for an enumeration
  example: []
  syntax:
    content: public readonly DIEnumerator CreateEnumeratorValue(string name, long value, bool isUnsigned = false)
    parameters:
    - id: name
      type: System.String
      description: Name of the value
    - id: value
      type: System.Int64
      description: Value of the enumerated value
    - id: isUnsigned
      type: System.Boolean
      description: 'Indicates if the value is unsigned [Default: false]'
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIEnumerator" data-throw-if-not-resolved="false"></xref> for the name, value pair
    content.vb: Public Function CreateEnumeratorValue(name As String, value As Long, isUnsigned As Boolean = False) As DIEnumerator
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue*
  nameWithType.vb: DIBuilder.CreateEnumeratorValue(String, Long, Boolean)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue(String, Long, Boolean)
  name.vb: CreateEnumeratorValue(String, Long, Boolean)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIEnumerator},Ubiquity.NET.Llvm.DebugInfo.DIType)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIEnumerator},Ubiquity.NET.Llvm.DebugInfo.DIType)
  id: CreateEnumerationType(Ubiquity.NET.Llvm.DebugInfo.DIScope,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt64,System.UInt32,System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIEnumerator},Ubiquity.NET.Llvm.DebugInfo.DIType)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateEnumerationType(DIScope?, string, DIFile?, uint, ulong, uint, IEnumerable<DIEnumerator>, DIType?)
  nameWithType: DIBuilder.CreateEnumerationType(DIScope?, string, DIFile?, uint, ulong, uint, IEnumerable<DIEnumerator>, DIType?)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType(Ubiquity.NET.Llvm.DebugInfo.DIScope?, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, ulong, uint, System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DIEnumerator>, Ubiquity.NET.Llvm.DebugInfo.DIType?)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateEnumerationType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 990
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates an enumeration type
  example: []
  syntax:
    content: public readonly DICompositeType CreateEnumerationType(DIScope? scope, string name, DIFile? file, uint lineNumber, ulong sizeInBits, uint alignInBits, IEnumerable<DIEnumerator> elements, DIType? underlyingType)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Containing scope for the type
    - id: name
      type: System.String
      description: source language name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: Source file containing the type
    - id: lineNumber
      type: System.UInt32
      description: Source file line number for the type
    - id: sizeInBits
      type: System.UInt64
      description: Size, in bits, for the type
    - id: alignInBits
      type: System.UInt32
      description: Alignment, in bits for the type
    - id: elements
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIEnumerator}
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIEnumerator" data-throw-if-not-resolved="false"></xref> elements for the type
    - id: underlyingType
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: Underlying type for the enumerated type
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref> for the enumerated type
    content.vb: Public Function CreateEnumerationType(scope As DIScope, name As String, file As DIFile, lineNumber As UInteger, sizeInBits As ULong, alignInBits As UInteger, elements As IEnumerable(Of DIEnumerator), underlyingType As DIType) As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType*
  nameWithType.vb: DIBuilder.CreateEnumerationType(DIScope, String, DIFile, UInteger, ULong, UInteger, IEnumerable(Of DIEnumerator), DIType)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType(Ubiquity.NET.Llvm.DebugInfo.DIScope, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, ULong, UInteger, System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DIEnumerator), Ubiquity.NET.Llvm.DebugInfo.DIType)
  name.vb: CreateEnumerationType(DIScope, String, DIFile, UInteger, ULong, UInteger, IEnumerable(Of DIEnumerator), DIType)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression(Ubiquity.NET.Llvm.DebugInfo.DINode,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression(Ubiquity.NET.Llvm.DebugInfo.DINode,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  id: CreateGlobalVariableExpression(Ubiquity.NET.Llvm.DebugInfo.DINode,System.String,System.String,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DIType,System.Boolean,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DINode,System.UInt32)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateGlobalVariableExpression(DINode?, string, string, DIFile?, uint, DIType?, bool, DIExpression?, DINode?, uint)
  nameWithType: DIBuilder.CreateGlobalVariableExpression(DINode?, string, string, DIFile?, uint, DIType?, bool, DIExpression?, DINode?, uint)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression(Ubiquity.NET.Llvm.DebugInfo.DINode?, string, string, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, Ubiquity.NET.Llvm.DebugInfo.DIType?, bool, Ubiquity.NET.Llvm.DebugInfo.DIExpression?, Ubiquity.NET.Llvm.DebugInfo.DINode?, uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateGlobalVariableExpression
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1032
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a new <xref href="Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpression" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly DIGlobalVariableExpression CreateGlobalVariableExpression(DINode? scope, string name, string linkageName, DIFile? file, uint lineNo, DIType? type, bool isLocalToUnit, DIExpression? value, DINode? declaration = null, uint bitAlign = 0)
    parameters:
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DINode
      description: Scope for the expression
    - id: name
      type: System.String
      description: Source language name of the expression
    - id: linkageName
      type: System.String
      description: Linkage name of the expression
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: Source file for the expression
    - id: lineNo
      type: System.UInt32
      description: Source Line number for the expression
    - id: type
      type: Ubiquity.NET.Llvm.DebugInfo.DIType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIType" data-throw-if-not-resolved="false"></xref> of the expression
    - id: isLocalToUnit
      type: System.Boolean
      description: Flag to indicate if this is local to the compilation unit (e.g. static in C)
    - id: value
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref> for the variable
    - id: declaration
      type: Ubiquity.NET.Llvm.DebugInfo.DINode
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DINode" data-throw-if-not-resolved="false"></xref> for the declaration of the variable
    - id: bitAlign
      type: System.UInt32
      description: Bit alignment for the expression
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpression" data-throw-if-not-resolved="false"></xref> from the parameters
    content.vb: Public Function CreateGlobalVariableExpression(scope As DINode, name As String, linkageName As String, file As DIFile, lineNo As UInteger, type As DIType, isLocalToUnit As Boolean, value As DIExpression, declaration As DINode = Nothing, bitAlign As UInteger = 0) As DIGlobalVariableExpression
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression*
  nameWithType.vb: DIBuilder.CreateGlobalVariableExpression(DINode, String, String, DIFile, UInteger, DIType, Boolean, DIExpression, DINode, UInteger)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression(Ubiquity.NET.Llvm.DebugInfo.DINode, String, String, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.DIType, Boolean, Ubiquity.NET.Llvm.DebugInfo.DIExpression, Ubiquity.NET.Llvm.DebugInfo.DINode, UInteger)
  name.vb: CreateGlobalVariableExpression(DINode, String, String, DIFile, UInteger, DIType, Boolean, DIExpression, DINode, UInteger)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish(Ubiquity.NET.Llvm.DebugInfo.DISubProgram)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish(Ubiquity.NET.Llvm.DebugInfo.DISubProgram)
  id: Finish(Ubiquity.NET.Llvm.DebugInfo.DISubProgram)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: Finish(DISubProgram)
  nameWithType: DIBuilder.Finish(DISubProgram)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish(Ubiquity.NET.Llvm.DebugInfo.DISubProgram)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Finish
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1071
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Finalizes debug information for a single <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubProgram" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly void Finish(DISubProgram subProgram)
    parameters:
    - id: subProgram
      type: Ubiquity.NET.Llvm.DebugInfo.DISubProgram
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DISubProgram" data-throw-if-not-resolved="false"></xref> to finalize debug information for
    content.vb: Public Sub Finish(subProgram As DISubProgram)
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish*
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
  id: Finish
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: Finish()
  nameWithType: DIBuilder.Finish()
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish()
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Finish
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1085
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Finalizes debug information for all items built by this builder
  remarks: >-
    <div class="NOTE"><h5>note</h5><p>
     The term "finalize" here is in the context of LLVM rather than the .NET concept of Finalization.
     In particular this will trigger resolving temporaries and will complete the list of locals for
     any functions. So, the only nodes allowed after this is called are those that are fully resolved.
    </p></div>
  example: []
  syntax:
    content: public readonly void Finish()
    content.vb: Public Sub Finish()
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish*
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  id: InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertDeclare(Value, DILocalVariable, DILocation, Instruction)
  nameWithType: DIBuilder.InsertDeclare(Value, DILocalVariable, DILocation, Instruction)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Instructions.Instruction)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertDeclare
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1129
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts an llvm.dbg.declare instruction before the given instruction
  remarks: >-
    This adds a call to the <a href="xref:llvm_sourcelevel_debugging#lvm-dbg-declare">llvm.dbg.declare</a> intrinsic.

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.
  example: []
  syntax:
    content: public readonly DebugRecord InsertDeclare(Value storage, DILocalVariable varInfo, DILocation location, Instruction insertBefore)
    parameters:
    - id: storage
      type: Ubiquity.NET.Llvm.Values.Value
      description: Value the declaration is bound to
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> for <code class="paramref">storage</code>
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the variable
    - id: insertBefore
      type: Ubiquity.NET.Llvm.Instructions.Instruction
      description: <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref> to insert the declaration before
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: <xref href="Ubiquity.NET.Llvm.Instructions.CallInstruction" data-throw-if-not-resolved="false"></xref> for the call to llvm.dbg.declare
    content.vb: Public Function InsertDeclare(storage As Value, varInfo As DILocalVariable, location As DILocation, insertBefore As Instruction) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-declare
    altText: 'LLVM: llvm.dbg.declare'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  id: InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertDeclare(Value, DILocalVariable, DIExpression, DILocation, Instruction)
  nameWithType: DIBuilder.InsertDeclare(Value, DILocalVariable, DIExpression, DILocation, Instruction)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DIExpression, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Instructions.Instruction)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertDeclare
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1150
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts an llvm.dbg.declare instruction before the given instruction
  remarks: >-
    This adds a call to the <a href="xref:llvm_sourcelevel_debugging#lvm-dbg-declare">llvm.dbg.declare</a> intrinsic.

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.
  example: []
  syntax:
    content: public readonly DebugRecord InsertDeclare(Value storage, DILocalVariable varInfo, DIExpression expression, DILocation location, Instruction insertBefore)
    parameters:
    - id: storage
      type: Ubiquity.NET.Llvm.Values.Value
      description: Value the declaration is bound to
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> for <code class="paramref">storage</code>
    - id: expression
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref> for a debugger to use when extracting the value
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the variable
    - id: insertBefore
      type: Ubiquity.NET.Llvm.Instructions.Instruction
      description: <xref href="Ubiquity.NET.Llvm.Instructions.Instruction" data-throw-if-not-resolved="false"></xref> to insert the declaration before
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: <xref href="Ubiquity.NET.Llvm.Instructions.CallInstruction" data-throw-if-not-resolved="false"></xref> for the call to llvm.dbg.declare
    content.vb: Public Function InsertDeclare(storage As Value, varInfo As DILocalVariable, expression As DIExpression, location As DILocation, insertBefore As Instruction) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-declare
    altText: 'LLVM: llvm.dbg.declare'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  id: InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertDeclare(Value, DILocalVariable, DILocation, BasicBlock)
  nameWithType: DIBuilder.InsertDeclare(Value, DILocalVariable, DILocation, BasicBlock)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Values.BasicBlock)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertDeclare
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1189
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts a DebugRecord before the given instruction
  remarks: >-
    This adds a call to the <a href="xref:llvm_sourcelevel_debugging#lvm-dbg-declare">llvm.dbg.declare</a> intrinsic.

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.
  example: []
  syntax:
    content: public readonly DebugRecord InsertDeclare(Value storage, DILocalVariable varInfo, DILocation location, BasicBlock insertAtEnd)
    parameters:
    - id: storage
      type: Ubiquity.NET.Llvm.Values.Value
      description: Value the declaration is bound to
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> for <code class="paramref">storage</code>
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the variable
    - id: insertAtEnd
      type: Ubiquity.NET.Llvm.Values.BasicBlock
      description: <xref href="Ubiquity.NET.Llvm.Values.BasicBlock" data-throw-if-not-resolved="false"></xref> to insert the declaration at the end of
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: <xref href="Ubiquity.NET.Llvm.Instructions.CallInstruction" data-throw-if-not-resolved="false"></xref> for the call to llvm.dbg.declare
    content.vb: Public Function InsertDeclare(storage As Value, varInfo As DILocalVariable, location As DILocation, insertAtEnd As BasicBlock) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-declare
    altText: 'LLVM: llvm.dbg.declare'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  id: InsertDeclare(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertDeclare(Value, DILocalVariable, DIExpression, DILocation, BasicBlock)
  nameWithType: DIBuilder.InsertDeclare(Value, DILocalVariable, DIExpression, DILocation, BasicBlock)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DIExpression, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Values.BasicBlock)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertDeclare
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1212
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts a debug record before the given instruction
  remarks: >-
    This adds a call to the <a href="xref:llvm_sourcelevel_debugging#lvm-dbg-declare">llvm.dbg.declare</a> intrinsic.

    <div class="NOTE"><h5>note</h5><p>

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.

    </p></div>
  example: []
  syntax:
    content: public readonly DebugRecord InsertDeclare(Value storage, DILocalVariable varInfo, DIExpression expression, DILocation location, BasicBlock insertAtEnd)
    parameters:
    - id: storage
      type: Ubiquity.NET.Llvm.Values.Value
      description: Value the declaration is bound to
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> for <code class="paramref">storage</code>
    - id: expression
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref> for a debugger to use when extracting the value
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the variable
    - id: insertAtEnd
      type: Ubiquity.NET.Llvm.Values.BasicBlock
      description: <xref href="Ubiquity.NET.Llvm.Values.BasicBlock" data-throw-if-not-resolved="false"></xref> to insert the declaration at the end of
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: <xref href="Ubiquity.NET.Llvm.Instructions.CallInstruction" data-throw-if-not-resolved="false"></xref> for the call to llvm.dbg.declare
    content.vb: Public Function InsertDeclare(storage As Value, varInfo As DILocalVariable, expression As DIExpression, location As DILocation, insertAtEnd As BasicBlock) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-declare
    altText: 'LLVM: llvm.dbg.declare'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  id: InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertValue(Value, DILocalVariable, DILocation, Instruction)
  nameWithType: DIBuilder.InsertValue(Value, DILocalVariable, DILocation, Instruction)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Instructions.Instruction)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertValue
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1254
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts a debug record before the specified instruction
  remarks: >-
    This intrinsic provides information when a user source variable is set to a new value.

    <div class="NOTE"><h5>note</h5><p>

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.

    </p></div>
  example: []
  syntax:
    content: public readonly DebugRecord InsertValue(Value value, DILocalVariable varInfo, DILocation location, Instruction insertBefore)
    parameters:
    - id: value
      type: Ubiquity.NET.Llvm.Values.Value
      description: New value
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> describing the variable
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the assignment
    - id: insertBefore
      type: Ubiquity.NET.Llvm.Instructions.Instruction
      description: Location to insert the intrinsic
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: <xref href="Ubiquity.NET.Llvm.Instructions.CallInstruction" data-throw-if-not-resolved="false"></xref> for the intrinsic
    content.vb: Public Function InsertValue(value As Value, varInfo As DILocalVariable, location As DILocation, insertBefore As Instruction) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-value
    altText: 'LLVM: llvm.dbg.value'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  id: InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Instructions.Instruction)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertValue(Value, DILocalVariable, DIExpression?, DILocation, Instruction)
  nameWithType: DIBuilder.InsertValue(Value, DILocalVariable, DIExpression?, DILocation, Instruction)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DIExpression?, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Instructions.Instruction)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertValue
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1281
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts a call to the llvm.dbg.value intrinsic before the specified instruction
  remarks: >-
    This intrinsic provides information when a user source variable is set to a new value.

    <div class="NOTE"><h5>note</h5><p>

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.

    </p></div>
  example: []
  syntax:
    content: public readonly DebugRecord InsertValue(Value value, DILocalVariable varInfo, DIExpression? expression, DILocation location, Instruction insertBefore)
    parameters:
    - id: value
      type: Ubiquity.NET.Llvm.Values.Value
      description: New value
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> describing the variable
    - id: expression
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref> for the variable
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the assignment
    - id: insertBefore
      type: Ubiquity.NET.Llvm.Instructions.Instruction
      description: Location to insert the intrinsic
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: <xref href="Ubiquity.NET.Llvm.Instructions.CallInstruction" data-throw-if-not-resolved="false"></xref> for the intrinsic
    content.vb: Public Function InsertValue(value As Value, varInfo As DILocalVariable, expression As DIExpression, location As DILocation, insertBefore As Instruction) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-value
    altText: 'LLVM: llvm.dbg.value'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
  nameWithType.vb: DIBuilder.InsertValue(Value, DILocalVariable, DIExpression, DILocation, Instruction)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DIExpression, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Instructions.Instruction)
  name.vb: InsertValue(Value, DILocalVariable, DIExpression, DILocation, Instruction)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  id: InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertValue(Value, DILocalVariable, DILocation, BasicBlock)
  nameWithType: DIBuilder.InsertValue(Value, DILocalVariable, DILocation, BasicBlock)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Values.BasicBlock)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertValue
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1322
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts a call to the llvm.dbg.value intrinsic at the end of a basic block
  remarks: >-
    This intrinsic provides information when a user source variable is set to a new value.

    <div class="NOTE"><h5>note</h5><p>

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.

    </p></div>
  example: []
  syntax:
    content: public readonly DebugRecord InsertValue(Value value, DILocalVariable varInfo, DILocation location, BasicBlock insertAtEnd)
    parameters:
    - id: value
      type: Ubiquity.NET.Llvm.Values.Value
      description: New value
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> describing the variable
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the assignment
    - id: insertAtEnd
      type: Ubiquity.NET.Llvm.Values.BasicBlock
      description: Block to append the intrinsic to the end of
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: The debug record
    content.vb: Public Function InsertValue(value As Value, varInfo As DILocalVariable, location As DILocation, insertAtEnd As BasicBlock) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-value
    altText: 'LLVM: llvm.dbg.value'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  id: InsertValue(Ubiquity.NET.Llvm.Values.Value,Ubiquity.NET.Llvm.DebugInfo.DILocalVariable,Ubiquity.NET.Llvm.DebugInfo.DIExpression,Ubiquity.NET.Llvm.DebugInfo.DILocation,Ubiquity.NET.Llvm.Values.BasicBlock)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: InsertValue(Value, DILocalVariable, DIExpression?, DILocation, BasicBlock)
  nameWithType: DIBuilder.InsertValue(Value, DILocalVariable, DIExpression?, DILocation, BasicBlock)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DIExpression?, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Values.BasicBlock)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: InsertValue
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1349
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Inserts a DebugRecord at the end of a basic block
  remarks: >-
    This intrinsic provides information when a user source variable is set to a new value.

    <div class="NOTE"><h5>note</h5><p>

    The call has no impact on the actual machine code generated, as it is removed or ignored for actual target instruction

    selection. Instead, this provides a means to bind the LLVM Debug information metadata to a particular LLVM <xref href="Ubiquity.NET.Llvm.Values.Value" data-throw-if-not-resolved="false"></xref>

    that allows the transformation and optimization passes to track the debug information. Thus, even with optimized code

    the actual debug information is retained.

    </p></div>
  example: []
  syntax:
    content: public readonly DebugRecord InsertValue(Value value, DILocalVariable varInfo, DIExpression? expression, DILocation location, BasicBlock insertAtEnd)
    parameters:
    - id: value
      type: Ubiquity.NET.Llvm.Values.Value
      description: New value
    - id: varInfo
      type: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocalVariable" data-throw-if-not-resolved="false"></xref> describing the variable
    - id: expression
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref> for the variable
    - id: location
      type: Ubiquity.NET.Llvm.DebugInfo.DILocation
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DILocation" data-throw-if-not-resolved="false"></xref>for the assignment
    - id: insertAtEnd
      type: Ubiquity.NET.Llvm.Values.BasicBlock
      description: Block to append the intrinsic to the end of
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
      description: The Debug record
    content.vb: Public Function InsertValue(value As Value, varInfo As DILocalVariable, expression As DIExpression, location As DILocation, insertAtEnd As BasicBlock) As DebugRecord
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue*
  seealso:
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#lvm-dbg-value
    altText: 'LLVM: llvm.dbg.value'
  - linkType: HRef
    linkId: xref:llvm_sourcelevel_debugging#source-level-debugging-with-llvm
    altText: 'LLVM: Source Level Debugging with LLVM'
  nameWithType.vb: DIBuilder.InsertValue(Value, DILocalVariable, DIExpression, DILocation, BasicBlock)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue(Ubiquity.NET.Llvm.Values.Value, Ubiquity.NET.Llvm.DebugInfo.DILocalVariable, Ubiquity.NET.Llvm.DebugInfo.DIExpression, Ubiquity.NET.Llvm.DebugInfo.DILocation, Ubiquity.NET.Llvm.Values.BasicBlock)
  name.vb: InsertValue(Value, DILocalVariable, DIExpression, DILocation, BasicBlock)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[])
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[])
  id: CreateExpression(Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[])
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateExpression(params ExpressionOp[])
  nameWithType: DIBuilder.CreateExpression(params ExpressionOp[])
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(params Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateExpression
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1386
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref> from the provided <xref href="Ubiquity.NET.Llvm.DebugInfo.ExpressionOp" data-throw-if-not-resolved="false"></xref>s
  example: []
  syntax:
    content: public readonly DIExpression CreateExpression(params ExpressionOp[] operations)
    parameters:
    - id: operations
      type: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[]
      description: Operation sequence for the expression
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateExpression(ParamArray operations As ExpressionOp()) As DIExpression
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression*
  nameWithType.vb: DIBuilder.CreateExpression(ParamArray ExpressionOp())
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(ParamArray Ubiquity.NET.Llvm.DebugInfo.ExpressionOp())
  name.vb: CreateExpression(ParamArray ExpressionOp())
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.ExpressionOp})
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.ExpressionOp})
  id: CreateExpression(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.ExpressionOp})
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateExpression(IEnumerable<ExpressionOp>)
  nameWithType: DIBuilder.CreateExpression(IEnumerable<ExpressionOp>)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.ExpressionOp>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateExpression
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1394
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref> from the provided <xref href="Ubiquity.NET.Llvm.DebugInfo.ExpressionOp" data-throw-if-not-resolved="false"></xref>s
  example: []
  syntax:
    content: public readonly DIExpression CreateExpression(IEnumerable<ExpressionOp> operations)
    parameters:
    - id: operations
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.ExpressionOp}
      description: Operation sequence for the expression
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateExpression(operations As IEnumerable(Of ExpressionOp)) As DIExpression
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression*
  nameWithType.vb: DIBuilder.CreateExpression(IEnumerable(Of ExpressionOp))
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression(System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.ExpressionOp))
  name.vb: CreateExpression(IEnumerable(Of ExpressionOp))
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression(System.UInt64)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression(System.UInt64)
  id: CreateConstantValueExpression(System.UInt64)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateConstantValueExpression(ulong)
  nameWithType: DIBuilder.CreateConstantValueExpression(ulong)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression(ulong)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateConstantValueExpression
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1404
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref> for a constant value
  example: []
  syntax:
    content: public readonly DIExpression CreateConstantValueExpression(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: Value of the expression
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DIExpression
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DIExpression" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateConstantValueExpression(value As ULong) As DIExpression
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression*
  nameWithType.vb: DIBuilder.CreateConstantValueExpression(ULong)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression(ULong)
  name.vb: CreateConstantValueExpression(ULong)
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType(Ubiquity.NET.Llvm.DebugInfo.Tag,System.String,Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType(Ubiquity.NET.Llvm.DebugInfo.Tag,System.String,Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.String)
  id: CreateReplaceableCompositeType(Ubiquity.NET.Llvm.DebugInfo.Tag,System.String,Ubiquity.NET.Llvm.DebugInfo.DIScope,Ubiquity.NET.Llvm.DebugInfo.DIFile,System.UInt32,System.UInt32,System.UInt64,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags,System.String)
  parent: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  langs:
  - csharp
  - vb
  name: CreateReplaceableCompositeType(Tag, string, DIScope?, DIFile?, uint, uint, ulong, uint, DebugInfoFlags, string)
  nameWithType: DIBuilder.CreateReplaceableCompositeType(Tag, string, DIScope?, DIFile?, uint, uint, ulong, uint, DebugInfoFlags, string)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType(Ubiquity.NET.Llvm.DebugInfo.Tag, string, Ubiquity.NET.Llvm.DebugInfo.DIScope?, Ubiquity.NET.Llvm.DebugInfo.DIFile?, uint, uint, ulong, uint, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: CreateReplaceableCompositeType
    path: ../src/Ubiquity.NET.Llvm/DebugInfo/DIBuilder.cs
    startLine: 1422
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.DebugInfo
  summary: Creates a replaceable composite type
  example: []
  syntax:
    content: public readonly DICompositeType CreateReplaceableCompositeType(Tag tag, string name, DIScope? scope, DIFile? file, uint line, uint lang = 0, ulong sizeInBits = 0, uint alignBits = 0, DebugInfoFlags flags = DebugInfoFlags.None, string uniqueId = "")
    parameters:
    - id: tag
      type: Ubiquity.NET.Llvm.DebugInfo.Tag
      description: Debug information <xref href="Ubiquity.NET.Llvm.DebugInfo.Tag" data-throw-if-not-resolved="false"></xref> for the composite type (only values for a composite type are allowed)
    - id: name
      type: System.String
      description: Name of the type (use <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> for anonymous types)
    - id: scope
      type: Ubiquity.NET.Llvm.DebugInfo.DIScope
      description: Scope of the type
    - id: file
      type: Ubiquity.NET.Llvm.DebugInfo.DIFile
      description: Source file for the type
    - id: line
      type: System.UInt32
      description: Source line for the type
    - id: lang
      type: System.UInt32
      description: Source language the type is defined in
    - id: sizeInBits
      type: System.UInt64
      description: size of the type in bits
    - id: alignBits
      type: System.UInt32
      description: alignment of the type in bits
    - id: flags
      type: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags" data-throw-if-not-resolved="false"></xref> for the type
    - id: uniqueId
      type: System.String
      description: Unique identifier for the type
    return:
      type: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
      description: <xref href="Ubiquity.NET.Llvm.DebugInfo.DICompositeType" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateReplaceableCompositeType(tag As Tag, name As String, scope As DIScope, file As DIFile, line As UInteger, lang As UInteger = 0, sizeInBits As ULong = 0, alignBits As UInteger = 0, flags As DebugInfoFlags = DebugInfoFlags.None, uniqueId As String = "") As DICompositeType
  overload: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType*
  nameWithType.vb: DIBuilder.CreateReplaceableCompositeType(Tag, String, DIScope, DIFile, UInteger, UInteger, ULong, UInteger, DebugInfoFlags, String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType(Ubiquity.NET.Llvm.DebugInfo.Tag, String, Ubiquity.NET.Llvm.DebugInfo.DIScope, Ubiquity.NET.Llvm.DebugInfo.DIFile, UInteger, UInteger, ULong, UInteger, Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags, String)
  name.vb: CreateReplaceableCompositeType(Tag, String, DIScope, DIFile, UInteger, UInteger, ULong, UInteger, DebugInfoFlags, String)
references:
- uid: Ubiquity.NET.Llvm.Module
  commentId: T:Ubiquity.NET.Llvm.Module
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.Module.html
  name: Module
  nameWithType: Module
  fullName: Ubiquity.NET.Llvm.Module
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_Finish
  name: Finish()
  nameWithType: DIBuilder.Finish()
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
    name: Finish
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_Finish
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
    name: Finish
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_Finish
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo
  commentId: N:Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.DebugInfo
  nameWithType: Ubiquity.NET.Llvm.DebugInfo
  fullName: Ubiquity.NET.Llvm.DebugInfo
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.DebugInfo
    name: DebugInfo
    href: Ubiquity.NET.Llvm.DebugInfo.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIBuilder
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html
  name: DIBuilder
  nameWithType: DIBuilder
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.#ctor*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.#ctor
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder__ctor_Ubiquity_NET_Llvm_Module_
  name: DIBuilder
  nameWithType: DIBuilder.DIBuilder
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.DIBuilder
  nameWithType.vb: DIBuilder.New
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.New
  name.vb: New
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_Dispose
  name: Dispose
  nameWithType: DIBuilder.Dispose
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Dispose
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_OwningModule
  name: OwningModule
  nameWithType: DIBuilder.OwningModule
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.OwningModule
- uid: Ubiquity.NET.Llvm.IModule
  commentId: T:Ubiquity.NET.Llvm.IModule
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.IModule.html
  name: IModule
  nameWithType: IModule
  fullName: Ubiquity.NET.Llvm.IModule
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CompileUnit
  name: CompileUnit
  nameWithType: DIBuilder.CompileUnit
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CompileUnit
- uid: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit.html
  name: DICompileUnit
  nameWithType: DICompileUnit
  fullName: Ubiquity.NET.Llvm.DebugInfo.DICompileUnit
- uid: Ubiquity.NET.Llvm.DebugInfo.SourceLanguage
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.SourceLanguage
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.SourceLanguage.html
  name: SourceLanguage
  nameWithType: SourceLanguage
  fullName: Ubiquity.NET.Llvm.DebugInfo.SourceLanguage
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateCompileUnit_Ubiquity_NET_Llvm_DebugInfo_SourceLanguage_System_String_System_String_System_Boolean_System_String_System_UInt32_
  name: CreateCompileUnit
  nameWithType: DIBuilder.CreateCompileUnit
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateCompileUnit
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.String.Empty
  commentId: F:System.String.Empty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string.empty
  name: Empty
  nameWithType: string.Empty
  fullName: string.Empty
  nameWithType.vb: String.Empty
  fullName.vb: String.Empty
- uid: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile.html
  name: DIMacroFile
  nameWithType: DIMacroFile
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
  commentId: M:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
  isExternal: true
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateMacro_Ubiquity_NET_Llvm_DebugInfo_DIMacroFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_MacroKind_System_String_System_String_
  name: CreateMacro(DIMacroFile, uint, MacroKind, string, string)
  nameWithType: DIBuilder.CreateMacro(DIMacroFile, uint, MacroKind, string, string)
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile, uint, Ubiquity.NET.Llvm.DebugInfo.MacroKind, string, string)
  nameWithType.vb: DIBuilder.CreateMacro(DIMacroFile, UInteger, MacroKind, String, String)
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile, UInteger, Ubiquity.NET.Llvm.DebugInfo.MacroKind, String, String)
  name.vb: CreateMacro(DIMacroFile, UInteger, MacroKind, String, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
    name: CreateMacro
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateMacro_Ubiquity_NET_Llvm_DebugInfo_DIMacroFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_MacroKind_System_String_System_String_
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
    name: DIMacroFile
    href: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.MacroKind
    name: MacroKind
    href: Ubiquity.NET.Llvm.DebugInfo.MacroKind.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro(Ubiquity.NET.Llvm.DebugInfo.DIMacroFile,System.UInt32,Ubiquity.NET.Llvm.DebugInfo.MacroKind,System.String,System.String)
    name: CreateMacro
    href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateMacro_Ubiquity_NET_Llvm_DebugInfo_DIMacroFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_MacroKind_System_String_System_String_
  - name: (
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile
    name: DIMacroFile
    href: Ubiquity.NET.Llvm.DebugInfo.DIMacroFile.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.MacroKind
    name: MacroKind
    href: Ubiquity.NET.Llvm.DebugInfo.MacroKind.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateTempMacroFile_Ubiquity_NET_Llvm_DebugInfo_DIMacroFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DIFile_
  name: CreateTempMacroFile
  nameWithType: DIBuilder.CreateTempMacroFile
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTempMacroFile
- uid: Ubiquity.NET.Llvm.DebugInfo.DIFile
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIFile
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIFile.html
  name: DIFile
  nameWithType: DIFile
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIFile
- uid: Ubiquity.NET.Llvm.DebugInfo.MacroKind.Undefine
  commentId: F:Ubiquity.NET.Llvm.DebugInfo.MacroKind.Undefine
  href: Ubiquity.NET.Llvm.DebugInfo.MacroKind.html#Ubiquity_NET_Llvm_DebugInfo_MacroKind_Undefine
  name: Undefine
  nameWithType: MacroKind.Undefine
  fullName: Ubiquity.NET.Llvm.DebugInfo.MacroKind.Undefine
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateMacro_Ubiquity_NET_Llvm_DebugInfo_DIMacroFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_MacroKind_System_String_System_String_
  name: CreateMacro
  nameWithType: DIBuilder.CreateMacro
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMacro
- uid: Ubiquity.NET.Llvm.DebugInfo.MacroKind
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.MacroKind
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.MacroKind.html
  name: MacroKind
  nameWithType: MacroKind
  fullName: Ubiquity.NET.Llvm.DebugInfo.MacroKind
- uid: Ubiquity.NET.Llvm.DebugInfo.DIMacro
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIMacro
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIMacro.html
  name: DIMacro
  nameWithType: DIMacro
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIMacro
- uid: Ubiquity.NET.Llvm.DebugInfo.DINamespace
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DINamespace
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DINamespace.html
  name: DINamespace
  nameWithType: DINamespace
  fullName: Ubiquity.NET.Llvm.DebugInfo.DINamespace
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateNamespace_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_System_Boolean_
  name: CreateNamespace
  nameWithType: DIBuilder.CreateNamespace
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateNamespace
- uid: Ubiquity.NET.Llvm.DebugInfo.DIScope
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIScope
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIScope.html
  name: DIScope
  nameWithType: DIScope
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIScope
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateFile_System_String_
  name: CreateFile
  nameWithType: DIBuilder.CreateFile
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFile
- uid: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlock
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DILexicalBlock
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlock.html
  name: DILexicalBlock
  nameWithType: DILexicalBlock
  fullName: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlock
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateLexicalBlock_Ubiquity_NET_Llvm_DebugInfo_DIScope_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_System_UInt32_
  name: CreateLexicalBlock
  nameWithType: DIBuilder.CreateLexicalBlock
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlock
- uid: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlockFile
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DILexicalBlockFile
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlockFile.html
  name: DILexicalBlockFile
  nameWithType: DILexicalBlockFile
  fullName: Ubiquity.NET.Llvm.DebugInfo.DILexicalBlockFile
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateLexicalBlockFile_Ubiquity_NET_Llvm_DebugInfo_DIScope_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_
  name: CreateLexicalBlockFile
  nameWithType: DIBuilder.CreateLexicalBlockFile
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLexicalBlockFile
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubProgram
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DISubProgram
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DISubProgram.html
  name: DISubProgram
  nameWithType: DISubProgram
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubProgram
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType.html
  name: DISubroutineType
  nameWithType: DISubroutineType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubroutineType
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags.html
  name: DebugInfoFlags
  nameWithType: DebugInfoFlags
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugInfoFlags
- uid: Ubiquity.NET.Llvm.Values.Function
  commentId: T:Ubiquity.NET.Llvm.Values.Function
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Function.html
  name: Function
  nameWithType: Function
  fullName: Ubiquity.NET.Llvm.Values.Function
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateFunction_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DISubroutineType_System_Boolean_System_Boolean_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_System_Boolean_Ubiquity_NET_Llvm_Values_Function_
  name: CreateFunction
  nameWithType: DIBuilder.CreateFunction
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateFunction
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_ForwardDeclareFunction_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DISubroutineType_System_Boolean_System_Boolean_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_System_Boolean_
  name: ForwardDeclareFunction
  nameWithType: DIBuilder.ForwardDeclareFunction
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.ForwardDeclareFunction
- uid: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable.html
  name: DILocalVariable
  nameWithType: DILocalVariable
  fullName: Ubiquity.NET.Llvm.DebugInfo.DILocalVariable
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateLocalVariable_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DIType_System_Boolean_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_System_UInt32_
  name: CreateLocalVariable
  nameWithType: DIBuilder.CreateLocalVariable
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateLocalVariable
- uid: Ubiquity.NET.Llvm.DebugInfo.DIType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  name: DIType
  nameWithType: DIType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIType
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateArgument_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DIType_System_Boolean_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_System_UInt16_
  name: CreateArgument
  nameWithType: DIBuilder.CreateArgument
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArgument
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: Ubiquity.NET.Llvm.DebugInfo.DiTypeKind
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DiTypeKind
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DiTypeKind.html
  name: DiTypeKind
  nameWithType: DiTypeKind
  fullName: Ubiquity.NET.Llvm.DebugInfo.DiTypeKind
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateBasicType_System_String_System_UInt64_Ubiquity_NET_Llvm_DebugInfo_DiTypeKind_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_
  name: CreateBasicType
  nameWithType: DIBuilder.CreateBasicType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateBasicType
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBasicType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIBasicType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIBasicType.html
  name: DIBasicType
  nameWithType: DIBasicType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBasicType
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreatePointerType_Ubiquity_NET_Llvm_DebugInfo_DIType_System_String_System_UInt64_System_UInt32_System_UInt32_
  name: CreatePointerType
  nameWithType: DIBuilder.CreatePointerType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreatePointerType
- uid: Ubiquity.NET.Llvm.DebugInfo.DIDerivedType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIDerivedType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIDerivedType.html
  name: DIDerivedType
  nameWithType: DIDerivedType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIDerivedType
- uid: Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag.None
  commentId: F:Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag.None
  href: Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag.html#Ubiquity_NET_Llvm_DebugInfo_QualifiedTypeTag_None
  name: None
  nameWithType: QualifiedTypeTag.None
  fullName: Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag.None
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateQualifiedType_Ubiquity_NET_Llvm_DebugInfo_DIType_Ubiquity_NET_Llvm_DebugInfo_QualifiedTypeTag_
  name: CreateQualifiedType
  nameWithType: DIBuilder.CreateQualifiedType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateQualifiedType
- uid: Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag.html
  name: QualifiedTypeTag
  nameWithType: QualifiedTypeTag
  fullName: Ubiquity.NET.Llvm.DebugInfo.QualifiedTypeTag
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateTypeArray_Ubiquity_NET_Llvm_DebugInfo_DIType___
  name: CreateTypeArray
  nameWithType: DIBuilder.CreateTypeArray
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypeArray
- uid: Ubiquity.NET.Llvm.DebugInfo.DIType[]
  isExternal: true
  href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  name: DIType[]
  nameWithType: DIType[]
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIType[]
  nameWithType.vb: DIType()
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DIType()
  name.vb: DIType()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DITypeArray
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DITypeArray
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DITypeArray.html
  name: DITypeArray
  nameWithType: DITypeArray
  fullName: Ubiquity.NET.Llvm.DebugInfo.DITypeArray
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<DIType>
  nameWithType: IEnumerable<DIType>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DIType>
  nameWithType.vb: IEnumerable(Of DIType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DIType)
  name.vb: IEnumerable(Of DIType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIType
    name: DIType
    href: Ubiquity.NET.Llvm.DebugInfo.DIType.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateSubroutineType_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_Ubiquity_NET_Llvm_DebugInfo_DIType___
  name: CreateSubroutineType
  nameWithType: DIBuilder.CreateSubroutineType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubroutineType
- uid: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DICompositeType
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DICompositeType.html
  name: DICompositeType
  nameWithType: DICompositeType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DICompositeType
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateStructType_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_System_UInt64_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_Ubiquity_NET_Llvm_DebugInfo_DIType_Ubiquity_NET_Llvm_DebugInfo_DINode___
  name: CreateStructType
  nameWithType: DIBuilder.CreateStructType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateStructType
- uid: Ubiquity.NET.Llvm.DebugInfo.DINode[]
  isExternal: true
  href: Ubiquity.NET.Llvm.DebugInfo.DINode.html
  name: DINode[]
  nameWithType: DINode[]
  fullName: Ubiquity.NET.Llvm.DebugInfo.DINode[]
  nameWithType.vb: DINode()
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.DINode()
  name.vb: DINode()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DINode
    name: DINode
    href: Ubiquity.NET.Llvm.DebugInfo.DINode.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.DINode
    name: DINode
    href: Ubiquity.NET.Llvm.DebugInfo.DINode.html
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DINode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<DINode>
  nameWithType: IEnumerable<DINode>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DINode>
  nameWithType.vb: IEnumerable(Of DINode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DINode)
  name.vb: IEnumerable(Of DINode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.DebugInfo.DINode
    name: DINode
    href: Ubiquity.NET.Llvm.DebugInfo.DINode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DINode
    name: DINode
    href: Ubiquity.NET.Llvm.DebugInfo.DINode.html
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateUnionType_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_System_UInt64_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_Ubiquity_NET_Llvm_DebugInfo_DINodeArray_
  name: CreateUnionType
  nameWithType: DIBuilder.CreateUnionType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateUnionType
- uid: Ubiquity.NET.Llvm.DebugInfo.DINodeArray
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DINodeArray
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DINodeArray.html
  name: DINodeArray
  nameWithType: DINodeArray
  fullName: Ubiquity.NET.Llvm.DebugInfo.DINodeArray
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateMemberType_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_System_UInt64_System_UInt32_System_UInt64_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_Ubiquity_NET_Llvm_DebugInfo_DIType_
  name: CreateMemberType
  nameWithType: DIBuilder.CreateMemberType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateMemberType
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateArrayType_System_UInt64_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DIType_Ubiquity_NET_Llvm_DebugInfo_DINodeArray_
  name: CreateArrayType
  nameWithType: DIBuilder.CreateArrayType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateArrayType
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateVectorType_System_UInt64_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DIType_Ubiquity_NET_Llvm_DebugInfo_DINodeArray_
  name: CreateVectorType
  nameWithType: DIBuilder.CreateVectorType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateVectorType
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateTypedef_Ubiquity_NET_Llvm_DebugInfo_DIType_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DINode_System_UInt32_
  name: CreateTypedef
  nameWithType: DIBuilder.CreateTypedef
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateTypedef
- uid: Ubiquity.NET.Llvm.DebugInfo.DINode
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DINode
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DINode.html
  name: DINode
  nameWithType: DINode
  fullName: Ubiquity.NET.Llvm.DebugInfo.DINode
- uid: Ubiquity.NET.Llvm.DebugInfo.DISubRange
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DISubRange
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DISubRange.html
  name: DISubRange
  nameWithType: DISubRange
  fullName: Ubiquity.NET.Llvm.DebugInfo.DISubRange
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateSubRange_System_Int64_System_Int64_
  name: CreateSubRange
  nameWithType: DIBuilder.CreateSubRange
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateSubRange
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_GetOrCreateArray_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_DINode__
  name: GetOrCreateArray
  nameWithType: DIBuilder.GetOrCreateArray
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateArray
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_GetOrCreateTypeArray_Ubiquity_NET_Llvm_DebugInfo_DIType___
  name: GetOrCreateTypeArray
  nameWithType: DIBuilder.GetOrCreateTypeArray
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.GetOrCreateTypeArray
- uid: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIEnumerator
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator.html
  name: DIEnumerator
  nameWithType: DIEnumerator
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateEnumeratorValue_System_String_System_Int64_System_Boolean_
  name: CreateEnumeratorValue
  nameWithType: DIBuilder.CreateEnumeratorValue
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumeratorValue
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateEnumerationType_Ubiquity_NET_Llvm_DebugInfo_DIScope_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_System_UInt64_System_UInt32_System_Collections_Generic_IEnumerable_Ubiquity_NET_Llvm_DebugInfo_DIEnumerator__Ubiquity_NET_Llvm_DebugInfo_DIType_
  name: CreateEnumerationType
  nameWithType: DIBuilder.CreateEnumerationType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateEnumerationType
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIEnumerator}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.DIEnumerator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<DIEnumerator>
  nameWithType: IEnumerable<DIEnumerator>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.DIEnumerator>
  nameWithType.vb: IEnumerable(Of DIEnumerator)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.DIEnumerator)
  name.vb: IEnumerable(Of DIEnumerator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator
    name: DIEnumerator
    href: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator
    name: DIEnumerator
    href: Ubiquity.NET.Llvm.DebugInfo.DIEnumerator.html
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpression
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpression
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpression.html
  name: DIGlobalVariableExpression
  nameWithType: DIGlobalVariableExpression
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIGlobalVariableExpression
- uid: Ubiquity.NET.Llvm.Values.Value
  commentId: T:Ubiquity.NET.Llvm.Values.Value
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Value.html
  name: Value
  nameWithType: Value
  fullName: Ubiquity.NET.Llvm.Values.Value
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateGlobalVariableExpression_Ubiquity_NET_Llvm_DebugInfo_DINode_System_String_System_String_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DIType_System_Boolean_Ubiquity_NET_Llvm_DebugInfo_DIExpression_Ubiquity_NET_Llvm_DebugInfo_DINode_System_UInt32_
  name: CreateGlobalVariableExpression
  nameWithType: DIBuilder.CreateGlobalVariableExpression
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateGlobalVariableExpression
- uid: Ubiquity.NET.Llvm.DebugInfo.DIExpression
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DIExpression
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DIExpression.html
  name: DIExpression
  nameWithType: DIExpression
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIExpression
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_Finish_Ubiquity_NET_Llvm_DebugInfo_DISubProgram_
  name: Finish
  nameWithType: DIBuilder.Finish
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.Finish
- uid: Ubiquity.NET.Llvm.DebugInfo.DILocation
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DILocation
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DILocation.html
  name: DILocation
  nameWithType: DILocation
  fullName: Ubiquity.NET.Llvm.DebugInfo.DILocation
- uid: Ubiquity.NET.Llvm.Instructions.Instruction
  commentId: T:Ubiquity.NET.Llvm.Instructions.Instruction
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.Instruction.html
  name: Instruction
  nameWithType: Instruction
  fullName: Ubiquity.NET.Llvm.Instructions.Instruction
- uid: Ubiquity.NET.Llvm.Instructions.CallInstruction
  commentId: T:Ubiquity.NET.Llvm.Instructions.CallInstruction
  parent: Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.NET.Llvm.Instructions.CallInstruction.html
  name: CallInstruction
  nameWithType: CallInstruction
  fullName: Ubiquity.NET.Llvm.Instructions.CallInstruction
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_InsertDeclare_Ubiquity_NET_Llvm_Values_Value_Ubiquity_NET_Llvm_DebugInfo_DILocalVariable_Ubiquity_NET_Llvm_DebugInfo_DILocation_Ubiquity_NET_Llvm_Instructions_Instruction_
  name: InsertDeclare
  nameWithType: DIBuilder.InsertDeclare
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertDeclare
- uid: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.DebugRecord
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.DebugRecord.html
  name: DebugRecord
  nameWithType: DebugRecord
  fullName: Ubiquity.NET.Llvm.DebugInfo.DebugRecord
- uid: Ubiquity.NET.Llvm.Instructions
  commentId: N:Ubiquity.NET.Llvm.Instructions
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Instructions
  nameWithType: Ubiquity.NET.Llvm.Instructions
  fullName: Ubiquity.NET.Llvm.Instructions
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Instructions
    name: Instructions
    href: Ubiquity.NET.Llvm.Instructions.html
- uid: Ubiquity.NET.Llvm.Values.BasicBlock
  commentId: T:Ubiquity.NET.Llvm.Values.BasicBlock
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.BasicBlock.html
  name: BasicBlock
  nameWithType: BasicBlock
  fullName: Ubiquity.NET.Llvm.Values.BasicBlock
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_InsertValue_Ubiquity_NET_Llvm_Values_Value_Ubiquity_NET_Llvm_DebugInfo_DILocalVariable_Ubiquity_NET_Llvm_DebugInfo_DILocation_Ubiquity_NET_Llvm_Instructions_Instruction_
  name: InsertValue
  nameWithType: DIBuilder.InsertValue
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.InsertValue
- uid: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.ExpressionOp
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp.html
  name: ExpressionOp
  nameWithType: ExpressionOp
  fullName: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateExpression_Ubiquity_NET_Llvm_DebugInfo_ExpressionOp___
  name: CreateExpression
  nameWithType: DIBuilder.CreateExpression
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateExpression
- uid: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[]
  isExternal: true
  href: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp.html
  name: ExpressionOp[]
  nameWithType: ExpressionOp[]
  fullName: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp[]
  nameWithType.vb: ExpressionOp()
  fullName.vb: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp()
  name.vb: ExpressionOp()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp
    name: ExpressionOp
    href: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp
    name: ExpressionOp
    href: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp.html
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.ExpressionOp}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.DebugInfo.ExpressionOp}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ExpressionOp>
  nameWithType: IEnumerable<ExpressionOp>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.DebugInfo.ExpressionOp>
  nameWithType.vb: IEnumerable(Of ExpressionOp)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.DebugInfo.ExpressionOp)
  name.vb: IEnumerable(Of ExpressionOp)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp
    name: ExpressionOp
    href: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp
    name: ExpressionOp
    href: Ubiquity.NET.Llvm.DebugInfo.ExpressionOp.html
  - name: )
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateConstantValueExpression_System_UInt64_
  name: CreateConstantValueExpression
  nameWithType: DIBuilder.CreateConstantValueExpression
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateConstantValueExpression
- uid: Ubiquity.NET.Llvm.DebugInfo.Tag
  commentId: T:Ubiquity.NET.Llvm.DebugInfo.Tag
  parent: Ubiquity.NET.Llvm.DebugInfo
  href: Ubiquity.NET.Llvm.DebugInfo.Tag.html
  name: Tag
  nameWithType: Tag
  fullName: Ubiquity.NET.Llvm.DebugInfo.Tag
- uid: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType*
  commentId: Overload:Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType
  href: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.html#Ubiquity_NET_Llvm_DebugInfo_DIBuilder_CreateReplaceableCompositeType_Ubiquity_NET_Llvm_DebugInfo_Tag_System_String_Ubiquity_NET_Llvm_DebugInfo_DIScope_Ubiquity_NET_Llvm_DebugInfo_DIFile_System_UInt32_System_UInt32_System_UInt64_System_UInt32_Ubiquity_NET_Llvm_DebugInfo_DebugInfoFlags_System_String_
  name: CreateReplaceableCompositeType
  nameWithType: DIBuilder.CreateReplaceableCompositeType
  fullName: Ubiquity.NET.Llvm.DebugInfo.DIBuilder.CreateReplaceableCompositeType
