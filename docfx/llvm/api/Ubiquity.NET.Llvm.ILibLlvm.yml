### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.ILibLlvm
  commentId: T:Ubiquity.NET.Llvm.ILibLlvm
  id: ILibLlvm
  parent: Ubiquity.NET.Llvm
  children:
  - Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  langs:
  - csharp
  - vb
  name: ILibLlvm
  nameWithType: ILibLlvm
  fullName: Ubiquity.NET.Llvm.ILibLlvm
  type: Interface
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ILibLLVM.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ILibLlvm
    path: ../src/Ubiquity.NET.Llvm/ILibLLVM.cs
    startLine: 109
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Interface to the core LLVM library itself
  remarks: >-
    When this instance is disposed the LLVM libraries are no longer usable in the process

    <div class="IMPORTANT"><h5>important</h5><p>

    It is important to note that the LLVM library does NOT currently support re-initialization in

    the same process. Therefore, it is recommended that initialization is done once at process startup

    and then the resulting interface disposed just before the process exits.

    </p></div>
  example: []
  syntax:
    content: 'public interface ILibLlvm : IDisposable'
    content.vb: Public Interface ILibLlvm Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  commentId: M:Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  id: RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget,Ubiquity.NET.Llvm.TargetRegistration)
  parent: Ubiquity.NET.Llvm.ILibLlvm
  langs:
  - csharp
  - vb
  name: RegisterTarget(CodeGenTarget, TargetRegistration)
  nameWithType: ILibLlvm.RegisterTarget(CodeGenTarget, TargetRegistration)
  fullName: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget(Ubiquity.NET.Llvm.CodeGenTarget, Ubiquity.NET.Llvm.TargetRegistration)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ILibLLVM.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: RegisterTarget
    path: ../src/Ubiquity.NET.Llvm/ILibLLVM.cs
    startLine: 115
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm
  summary: Registers components for ARM AArch64 target(s)
  example: []
  syntax:
    content: void RegisterTarget(CodeGenTarget target, TargetRegistration registrations = TargetRegistration.All)
    parameters:
    - id: target
      type: Ubiquity.NET.Llvm.CodeGenTarget
      description: Target architecture to register/initialize
    - id: registrations
      type: Ubiquity.NET.Llvm.TargetRegistration
      description: Flags indicating which components to register/enable
    content.vb: Sub RegisterTarget(target As CodeGenTarget, registrations As TargetRegistration = TargetRegistration.All)
  overload: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget*
references:
- uid: Ubiquity.NET.Llvm
  commentId: N:Ubiquity.NET.Llvm
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm
  nameWithType: Ubiquity.NET.Llvm
  fullName: Ubiquity.NET.Llvm
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget*
  commentId: Overload:Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget
  href: Ubiquity.NET.Llvm.ILibLlvm.html#Ubiquity_NET_Llvm_ILibLlvm_RegisterTarget_Ubiquity_NET_Llvm_CodeGenTarget_Ubiquity_NET_Llvm_TargetRegistration_
  name: RegisterTarget
  nameWithType: ILibLlvm.RegisterTarget
  fullName: Ubiquity.NET.Llvm.ILibLlvm.RegisterTarget
- uid: Ubiquity.NET.Llvm.CodeGenTarget
  commentId: T:Ubiquity.NET.Llvm.CodeGenTarget
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.CodeGenTarget.html
  name: CodeGenTarget
  nameWithType: CodeGenTarget
  fullName: Ubiquity.NET.Llvm.CodeGenTarget
- uid: Ubiquity.NET.Llvm.TargetRegistration
  commentId: T:Ubiquity.NET.Llvm.TargetRegistration
  parent: Ubiquity.NET.Llvm
  href: Ubiquity.NET.Llvm.TargetRegistration.html
  name: TargetRegistration
  nameWithType: TargetRegistration
  fullName: Ubiquity.NET.Llvm.TargetRegistration
