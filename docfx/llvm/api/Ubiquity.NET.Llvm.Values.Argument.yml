### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.Values.Argument
  commentId: T:Ubiquity.NET.Llvm.Values.Argument
  id: Argument
  parent: Ubiquity.NET.Llvm.Values
  children:
  - Ubiquity.NET.Llvm.Values.Argument.AddAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Values.Argument.AddAttributes(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.AttributeValue})
  - Ubiquity.NET.Llvm.Values.Argument.AddAttributes(Ubiquity.NET.Llvm.Values.AttributeKind[])
  - Ubiquity.NET.Llvm.Values.Argument.AddAttributes(Ubiquity.NET.Llvm.Values.AttributeValue[])
  - Ubiquity.NET.Llvm.Values.Argument.Attributes
  - Ubiquity.NET.Llvm.Values.Argument.ContainingFunction
  - Ubiquity.NET.Llvm.Values.Argument.Index
  - Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(System.String)
  - Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  - Ubiquity.NET.Llvm.Values.Argument.SetAlignment(System.UInt32)
  langs:
  - csharp
  - vb
  name: Argument
  nameWithType: Argument
  fullName: Ubiquity.NET.Llvm.Values.Argument
  type: Class
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Argument
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 11
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: An LLVM Value representing an Argument to a function
  example: []
  syntax:
    content: 'public class Argument : Value, IEquatable<Value>'
    content.vb: Public Class Argument Inherits Value Implements IEquatable(Of Value)
  inheritance:
  - System.Object
  - Ubiquity.NET.Llvm.Values.Value
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  inheritedMembers:
  - Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  - Ubiquity.NET.Llvm.Values.Value.GetHashCode
  - Ubiquity.NET.Llvm.Values.Value.Name
  - Ubiquity.NET.Llvm.Values.Value.IsUndefined
  - Ubiquity.NET.Llvm.Values.Value.IsNull
  - Ubiquity.NET.Llvm.Values.Value.NativeType
  - Ubiquity.NET.Llvm.Values.Value.Context
  - Ubiquity.NET.Llvm.Values.Value.IsInstruction
  - Ubiquity.NET.Llvm.Values.Value.IsFunction
  - Ubiquity.NET.Llvm.Values.Value.IsCallSite
  - Ubiquity.NET.Llvm.Values.Value.ToString
  - Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  - Ubiquity.NET.Llvm.Values.Value.DebugRecords
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Ubiquity.NET.Llvm.Values.Argument.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
- uid: Ubiquity.NET.Llvm.Values.Argument.ContainingFunction
  commentId: P:Ubiquity.NET.Llvm.Values.Argument.ContainingFunction
  id: ContainingFunction
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: ContainingFunction
  nameWithType: Argument.ContainingFunction
  fullName: Ubiquity.NET.Llvm.Values.Argument.ContainingFunction
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: ContainingFunction
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 15
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the function this argument belongs to
  example: []
  syntax:
    content: public Function ContainingFunction { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.Values.Function
    content.vb: Public ReadOnly Property ContainingFunction As [Function]
  overload: Ubiquity.NET.Llvm.Values.Argument.ContainingFunction*
- uid: Ubiquity.NET.Llvm.Values.Argument.Index
  commentId: P:Ubiquity.NET.Llvm.Values.Argument.Index
  id: Index
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Argument.Index
  fullName: Ubiquity.NET.Llvm.Values.Argument.Index
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Index
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 18
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the zero based index of the argument
  example: []
  syntax:
    content: public uint Index { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Property Index As UInteger
  overload: Ubiquity.NET.Llvm.Values.Argument.Index*
- uid: Ubiquity.NET.Llvm.Values.Argument.SetAlignment(System.UInt32)
  commentId: M:Ubiquity.NET.Llvm.Values.Argument.SetAlignment(System.UInt32)
  id: SetAlignment(System.UInt32)
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: SetAlignment(uint)
  nameWithType: Argument.SetAlignment(uint)
  fullName: Ubiquity.NET.Llvm.Values.Argument.SetAlignment(uint)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: SetAlignment
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 23
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Sets the alignment for the argument
  example: []
  syntax:
    content: public Argument SetAlignment(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: Alignment value for this argument
    return:
      type: Ubiquity.NET.Llvm.Values.Argument
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> for Fluent access
    content.vb: Public Function SetAlignment(value As UInteger) As Argument
  overload: Ubiquity.NET.Llvm.Values.Argument.SetAlignment*
  nameWithType.vb: Argument.SetAlignment(UInteger)
  fullName.vb: Ubiquity.NET.Llvm.Values.Argument.SetAlignment(UInteger)
  name.vb: SetAlignment(UInteger)
- uid: Ubiquity.NET.Llvm.Values.Argument.Attributes
  commentId: P:Ubiquity.NET.Llvm.Values.Argument.Attributes
  id: Attributes
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: Argument.Attributes
  fullName: Ubiquity.NET.Llvm.Values.Argument.Attributes
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Attributes
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 32
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Gets the attributes for this argument
  example: []
  syntax:
    content: public ICollection<AttributeValue> Attributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Ubiquity.NET.Llvm.Values.AttributeValue}
    content.vb: Public ReadOnly Property Attributes As ICollection(Of AttributeValue)
  overload: Ubiquity.NET.Llvm.Values.Argument.Attributes*
- uid: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(Ubiquity.NET.Llvm.Values.AttributeKind[])
  commentId: M:Ubiquity.NET.Llvm.Values.Argument.AddAttributes(Ubiquity.NET.Llvm.Values.AttributeKind[])
  id: AddAttributes(Ubiquity.NET.Llvm.Values.AttributeKind[])
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: AddAttributes(params AttributeKind[])
  nameWithType: Argument.AddAttributes(params AttributeKind[])
  fullName: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(params Ubiquity.NET.Llvm.Values.AttributeKind[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AddAttributes
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 38
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Adds attributes to an <xref href="Ubiquity.NET.Llvm.Values.Argument" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Argument AddAttributes(params AttributeKind[] values)
    parameters:
    - id: values
      type: Ubiquity.NET.Llvm.Values.AttributeKind[]
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref>s to add
    return:
      type: Ubiquity.NET.Llvm.Values.Argument
      description: This Argument for Fluent use
    content.vb: Public Function AddAttributes(ParamArray values As AttributeKind()) As Argument
  overload: Ubiquity.NET.Llvm.Values.Argument.AddAttributes*
  nameWithType.vb: Argument.AddAttributes(ParamArray AttributeKind())
  fullName.vb: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(ParamArray Ubiquity.NET.Llvm.Values.AttributeKind())
  name.vb: AddAttributes(ParamArray AttributeKind())
- uid: Ubiquity.NET.Llvm.Values.Argument.AddAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.Argument.AddAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: AddAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: AddAttribute(AttributeKind)
  nameWithType: Argument.AddAttribute(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.Argument.AddAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AddAttribute
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 57
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Adds an attribute to an <xref href="Ubiquity.NET.Llvm.Values.Argument" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Argument AddAttribute(AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to add
    return:
      type: Ubiquity.NET.Llvm.Values.Argument
      description: This Argument for Fluent access
    content.vb: Public Function AddAttribute(kind As AttributeKind) As Argument
  overload: Ubiquity.NET.Llvm.Values.Argument.AddAttribute*
- uid: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(Ubiquity.NET.Llvm.Values.AttributeValue[])
  commentId: M:Ubiquity.NET.Llvm.Values.Argument.AddAttributes(Ubiquity.NET.Llvm.Values.AttributeValue[])
  id: AddAttributes(Ubiquity.NET.Llvm.Values.AttributeValue[])
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: AddAttributes(params AttributeValue[])
  nameWithType: Argument.AddAttributes(params AttributeValue[])
  fullName: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(params Ubiquity.NET.Llvm.Values.AttributeValue[])
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AddAttributes
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 69
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Adds <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref>s to an <xref href="Ubiquity.NET.Llvm.Values.Argument" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Argument AddAttributes(params AttributeValue[] attributes)
    parameters:
    - id: attributes
      type: Ubiquity.NET.Llvm.Values.AttributeValue[]
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref>s to add
    return:
      type: Ubiquity.NET.Llvm.Values.Argument
      description: This Argument for fluent usage
    content.vb: Public Function AddAttributes(ParamArray attributes As AttributeValue()) As Argument
  overload: Ubiquity.NET.Llvm.Values.Argument.AddAttributes*
  nameWithType.vb: Argument.AddAttributes(ParamArray AttributeValue())
  fullName.vb: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(ParamArray Ubiquity.NET.Llvm.Values.AttributeValue())
  name.vb: AddAttributes(ParamArray AttributeValue())
- uid: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.AttributeValue})
  commentId: M:Ubiquity.NET.Llvm.Values.Argument.AddAttributes(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.AttributeValue})
  id: AddAttributes(System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.AttributeValue})
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: AddAttributes(IEnumerable<AttributeValue>)
  nameWithType: Argument.AddAttributes(IEnumerable<AttributeValue>)
  fullName: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.AttributeValue>)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: AddAttributes
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 77
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Adds <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref>s to an <xref href="Ubiquity.NET.Llvm.Values.Argument" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Argument AddAttributes(IEnumerable<AttributeValue> attributes)
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.AttributeValue}
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeValue" data-throw-if-not-resolved="false"></xref>s to add
    return:
      type: Ubiquity.NET.Llvm.Values.Argument
      description: This Argument for fluent usage
    content.vb: Public Function AddAttributes(attributes As IEnumerable(Of AttributeValue)) As Argument
  overload: Ubiquity.NET.Llvm.Values.Argument.AddAttributes*
  nameWithType.vb: Argument.AddAttributes(IEnumerable(Of AttributeValue))
  fullName.vb: Ubiquity.NET.Llvm.Values.Argument.AddAttributes(System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.AttributeValue))
  name.vb: AddAttributes(IEnumerable(Of AttributeValue))
- uid: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  commentId: M:Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  id: RemoveAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: RemoveAttribute(AttributeKind)
  nameWithType: Argument.RemoveAttribute(AttributeKind)
  fullName: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(Ubiquity.NET.Llvm.Values.AttributeKind)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: RemoveAttribute
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 93
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Removes an <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> from an <xref href="Ubiquity.NET.Llvm.Values.Argument" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Argument RemoveAttribute(AttributeKind kind)
    parameters:
    - id: kind
      type: Ubiquity.NET.Llvm.Values.AttributeKind
      description: <xref href="Ubiquity.NET.Llvm.Values.AttributeKind" data-throw-if-not-resolved="false"></xref> to remove
    return:
      type: Ubiquity.NET.Llvm.Values.Argument
      description: This Argument for fluent usage
    content.vb: Public Function RemoveAttribute(kind As AttributeKind) As Argument
  overload: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute*
- uid: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(System.String)
  id: RemoveAttribute(System.String)
  parent: Ubiquity.NET.Llvm.Values.Argument
  langs:
  - csharp
  - vb
  name: RemoveAttribute(string)
  nameWithType: Argument.RemoveAttribute(string)
  fullName: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(string)
  type: Method
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/Values/Argument.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: RemoveAttribute
    path: ../src/Ubiquity.NET.Llvm/Values/Argument.cs
    startLine: 102
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.Values
  summary: Removes a named attribute from an <xref href="Ubiquity.NET.Llvm.Values.Argument" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Argument RemoveAttribute(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the attribute to remove
    return:
      type: Ubiquity.NET.Llvm.Values.Argument
      description: This Argument for fluent usage
    content.vb: Public Function RemoveAttribute(name As String) As Argument
  overload: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute*
  nameWithType.vb: Argument.RemoveAttribute(String)
  fullName.vb: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute(String)
  name.vb: RemoveAttribute(String)
references:
- uid: Ubiquity.NET.Llvm.Values
  commentId: N:Ubiquity.NET.Llvm.Values
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.Values
  nameWithType: Ubiquity.NET.Llvm.Values
  fullName: Ubiquity.NET.Llvm.Values
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.Values
    name: Values
    href: Ubiquity.NET.Llvm.Values.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.Values.Value
  commentId: T:Ubiquity.NET.Llvm.Values.Value
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Value.html
  name: Value
  nameWithType: Value
  fullName: Ubiquity.NET.Llvm.Values.Value
- uid: System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.Values.Value}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Value>
  nameWithType: IEquatable<Value>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.Values.Value>
  nameWithType.vb: IEquatable(Of Value)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.Values.Value)
  name.vb: IEquatable(Of Value)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  name: Equals(Value)
  nameWithType: Value.Equals(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(Ubiquity.NET.Llvm.Values.Value)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
  parent: Ubiquity.NET.Llvm.Values.Value
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  name: Equals(object)
  nameWithType: Value.Equals(object)
  fullName: Ubiquity.NET.Llvm.Values.Value.Equals(object)
  nameWithType.vb: Value.Equals(Object)
  fullName.vb: Ubiquity.NET.Llvm.Values.Value.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.Equals(System.Object)
    name: Equals
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
  commentId: M:Ubiquity.NET.Llvm.Values.Value.GetHashCode
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  name: GetHashCode()
  nameWithType: Value.GetHashCode()
  fullName: Ubiquity.NET.Llvm.Values.Value.GetHashCode()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.GetHashCode
    name: GetHashCode
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_GetHashCode
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.Name
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Name
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Name
  name: Name
  nameWithType: Value.Name
  fullName: Ubiquity.NET.Llvm.Values.Value.Name
- uid: Ubiquity.NET.Llvm.Values.Value.IsUndefined
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsUndefined
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsUndefined
  name: IsUndefined
  nameWithType: Value.IsUndefined
  fullName: Ubiquity.NET.Llvm.Values.Value.IsUndefined
- uid: Ubiquity.NET.Llvm.Values.Value.IsNull
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsNull
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsNull
  name: IsNull
  nameWithType: Value.IsNull
  fullName: Ubiquity.NET.Llvm.Values.Value.IsNull
- uid: Ubiquity.NET.Llvm.Values.Value.NativeType
  commentId: P:Ubiquity.NET.Llvm.Values.Value.NativeType
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_NativeType
  name: NativeType
  nameWithType: Value.NativeType
  fullName: Ubiquity.NET.Llvm.Values.Value.NativeType
- uid: Ubiquity.NET.Llvm.Values.Value.Context
  commentId: P:Ubiquity.NET.Llvm.Values.Value.Context
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_Context
  name: Context
  nameWithType: Value.Context
  fullName: Ubiquity.NET.Llvm.Values.Value.Context
- uid: Ubiquity.NET.Llvm.Values.Value.IsInstruction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsInstruction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsInstruction
  name: IsInstruction
  nameWithType: Value.IsInstruction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsInstruction
- uid: Ubiquity.NET.Llvm.Values.Value.IsFunction
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsFunction
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsFunction
  name: IsFunction
  nameWithType: Value.IsFunction
  fullName: Ubiquity.NET.Llvm.Values.Value.IsFunction
- uid: Ubiquity.NET.Llvm.Values.Value.IsCallSite
  commentId: P:Ubiquity.NET.Llvm.Values.Value.IsCallSite
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_IsCallSite
  name: IsCallSite
  nameWithType: Value.IsCallSite
  fullName: Ubiquity.NET.Llvm.Values.Value.IsCallSite
- uid: Ubiquity.NET.Llvm.Values.Value.ToString
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ToString
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  name: ToString()
  nameWithType: Value.ToString()
  fullName: Ubiquity.NET.Llvm.Values.Value.ToString()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ToString
    name: ToString
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ToString
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  commentId: M:Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  name: ReplaceAllUsesWith(Value)
  nameWithType: Value.ReplaceAllUsesWith(Value)
  fullName: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.Value.ReplaceAllUsesWith(Ubiquity.NET.Llvm.Values.Value)
    name: ReplaceAllUsesWith
    href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_ReplaceAllUsesWith_Ubiquity_NET_Llvm_Values_Value_
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Value
    name: Value
    href: Ubiquity.NET.Llvm.Values.Value.html
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Value.DebugRecords
  commentId: P:Ubiquity.NET.Llvm.Values.Value.DebugRecords
  parent: Ubiquity.NET.Llvm.Values.Value
  href: Ubiquity.NET.Llvm.Values.Value.html#Ubiquity_NET_Llvm_Values_Value_DebugRecords
  name: DebugRecords
  nameWithType: Value.DebugRecords
  fullName: Ubiquity.NET.Llvm.Values.Value.DebugRecords
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Argument.Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  parent: Ubiquity.NET.Llvm.Values.ValueExtensions
  definition: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<Argument>(Argument, string)
  nameWithType: ValueExtensions.RegisterName<Argument>(Argument, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<Ubiquity.NET.Llvm.Values.Argument>(Ubiquity.NET.Llvm.Values.Argument, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of Argument)(Argument, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of Ubiquity.NET.Llvm.Values.Argument)(Ubiquity.NET.Llvm.Values.Argument, String)
  name.vb: RegisterName(Of Argument)(Argument, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.Argument,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.Argument
    name: Argument
    href: Ubiquity.NET.Llvm.Values.Argument.html
  - name: '>'
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Argument
    name: Argument
    href: Ubiquity.NET.Llvm.Values.Argument.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(Ubiquity.NET.Llvm.Values.Argument,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.Argument
    name: Argument
    href: Ubiquity.NET.Llvm.Values.Argument.html
  - name: )
  - name: (
  - uid: Ubiquity.NET.Llvm.Values.Argument
    name: Argument
    href: Ubiquity.NET.Llvm.Values.Argument.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  commentId: M:Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  name: RegisterName<T>(T, string)
  nameWithType: ValueExtensions.RegisterName<T>(T, string)
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName<T>(T, string)
  nameWithType.vb: ValueExtensions.RegisterName(Of T)(T, String)
  fullName.vb: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName(Of T)(T, String)
  name.vb: RegisterName(Of T)(T, String)
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.ValueExtensions.RegisterName``1(``0,System.String)
    name: RegisterName
    href: Ubiquity.NET.Llvm.Values.ValueExtensions.html#Ubiquity_NET_Llvm_Values_ValueExtensions_RegisterName__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Ubiquity.NET.Llvm.Values.ValueExtensions
  commentId: T:Ubiquity.NET.Llvm.Values.ValueExtensions
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.ValueExtensions.html
  name: ValueExtensions
  nameWithType: ValueExtensions
  fullName: Ubiquity.NET.Llvm.Values.ValueExtensions
- uid: Ubiquity.NET.Llvm.Values.Argument.ContainingFunction*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Argument.ContainingFunction
  href: Ubiquity.NET.Llvm.Values.Argument.html#Ubiquity_NET_Llvm_Values_Argument_ContainingFunction
  name: ContainingFunction
  nameWithType: Argument.ContainingFunction
  fullName: Ubiquity.NET.Llvm.Values.Argument.ContainingFunction
- uid: Ubiquity.NET.Llvm.Values.Function
  commentId: T:Ubiquity.NET.Llvm.Values.Function
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Function.html
  name: Function
  nameWithType: Function
  fullName: Ubiquity.NET.Llvm.Values.Function
- uid: Ubiquity.NET.Llvm.Values.Argument.Index*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Argument.Index
  href: Ubiquity.NET.Llvm.Values.Argument.html#Ubiquity_NET_Llvm_Values_Argument_Index
  name: Index
  nameWithType: Argument.Index
  fullName: Ubiquity.NET.Llvm.Values.Argument.Index
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Ubiquity.NET.Llvm.Values.Argument.SetAlignment*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Argument.SetAlignment
  href: Ubiquity.NET.Llvm.Values.Argument.html#Ubiquity_NET_Llvm_Values_Argument_SetAlignment_System_UInt32_
  name: SetAlignment
  nameWithType: Argument.SetAlignment
  fullName: Ubiquity.NET.Llvm.Values.Argument.SetAlignment
- uid: Ubiquity.NET.Llvm.Values.Argument
  commentId: T:Ubiquity.NET.Llvm.Values.Argument
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.Argument.html
  name: Argument
  nameWithType: Argument
  fullName: Ubiquity.NET.Llvm.Values.Argument
- uid: Ubiquity.NET.Llvm.Values.Argument.Attributes*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Argument.Attributes
  href: Ubiquity.NET.Llvm.Values.Argument.html#Ubiquity_NET_Llvm_Values_Argument_Attributes
  name: Attributes
  nameWithType: Argument.Attributes
  fullName: Ubiquity.NET.Llvm.Values.Argument.Attributes
- uid: System.Collections.Generic.ICollection{Ubiquity.NET.Llvm.Values.AttributeValue}
  commentId: T:System.Collections.Generic.ICollection{Ubiquity.NET.Llvm.Values.AttributeValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<AttributeValue>
  nameWithType: ICollection<AttributeValue>
  fullName: System.Collections.Generic.ICollection<Ubiquity.NET.Llvm.Values.AttributeValue>
  nameWithType.vb: ICollection(Of AttributeValue)
  fullName.vb: System.Collections.Generic.ICollection(Of Ubiquity.NET.Llvm.Values.AttributeValue)
  name.vb: ICollection(Of AttributeValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.AttributeValue
    name: AttributeValue
    href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.AttributeValue
    name: AttributeValue
    href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Ubiquity.NET.Llvm.Values.AttributeKind
  commentId: T:Ubiquity.NET.Llvm.Values.AttributeKind
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  name: AttributeKind
  nameWithType: AttributeKind
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind
- uid: Ubiquity.NET.Llvm.Values.Argument.AddAttributes*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Argument.AddAttributes
  href: Ubiquity.NET.Llvm.Values.Argument.html#Ubiquity_NET_Llvm_Values_Argument_AddAttributes_Ubiquity_NET_Llvm_Values_AttributeKind___
  name: AddAttributes
  nameWithType: Argument.AddAttributes
  fullName: Ubiquity.NET.Llvm.Values.Argument.AddAttributes
- uid: Ubiquity.NET.Llvm.Values.AttributeKind[]
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  name: AttributeKind[]
  nameWithType: AttributeKind[]
  fullName: Ubiquity.NET.Llvm.Values.AttributeKind[]
  nameWithType.vb: AttributeKind()
  fullName.vb: Ubiquity.NET.Llvm.Values.AttributeKind()
  name.vb: AttributeKind()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.AttributeKind
    name: AttributeKind
    href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.AttributeKind
    name: AttributeKind
    href: Ubiquity.NET.Llvm.Values.AttributeKind.html
  - name: (
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Argument.AddAttribute*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Argument.AddAttribute
  href: Ubiquity.NET.Llvm.Values.Argument.html#Ubiquity_NET_Llvm_Values_Argument_AddAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: AddAttribute
  nameWithType: Argument.AddAttribute
  fullName: Ubiquity.NET.Llvm.Values.Argument.AddAttribute
- uid: Ubiquity.NET.Llvm.Values.AttributeValue
  commentId: T:Ubiquity.NET.Llvm.Values.AttributeValue
  parent: Ubiquity.NET.Llvm.Values
  href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  name: AttributeValue
  nameWithType: AttributeValue
  fullName: Ubiquity.NET.Llvm.Values.AttributeValue
- uid: Ubiquity.NET.Llvm.Values.AttributeValue[]
  isExternal: true
  href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  name: AttributeValue[]
  nameWithType: AttributeValue[]
  fullName: Ubiquity.NET.Llvm.Values.AttributeValue[]
  nameWithType.vb: AttributeValue()
  fullName.vb: Ubiquity.NET.Llvm.Values.AttributeValue()
  name.vb: AttributeValue()
  spec.csharp:
  - uid: Ubiquity.NET.Llvm.Values.AttributeValue
    name: AttributeValue
    href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Ubiquity.NET.Llvm.Values.AttributeValue
    name: AttributeValue
    href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.AttributeValue}
  commentId: T:System.Collections.Generic.IEnumerable{Ubiquity.NET.Llvm.Values.AttributeValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<AttributeValue>
  nameWithType: IEnumerable<AttributeValue>
  fullName: System.Collections.Generic.IEnumerable<Ubiquity.NET.Llvm.Values.AttributeValue>
  nameWithType.vb: IEnumerable(Of AttributeValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Ubiquity.NET.Llvm.Values.AttributeValue)
  name.vb: IEnumerable(Of AttributeValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.Values.AttributeValue
    name: AttributeValue
    href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.Values.AttributeValue
    name: AttributeValue
    href: Ubiquity.NET.Llvm.Values.AttributeValue.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute*
  commentId: Overload:Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute
  href: Ubiquity.NET.Llvm.Values.Argument.html#Ubiquity_NET_Llvm_Values_Argument_RemoveAttribute_Ubiquity_NET_Llvm_Values_AttributeKind_
  name: RemoveAttribute
  nameWithType: Argument.RemoveAttribute
  fullName: Ubiquity.NET.Llvm.Values.Argument.RemoveAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
