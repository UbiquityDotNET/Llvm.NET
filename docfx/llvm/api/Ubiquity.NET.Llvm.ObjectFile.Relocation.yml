### YamlMime:ManagedReference
items:
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation
  commentId: T:Ubiquity.NET.Llvm.ObjectFile.Relocation
  id: Relocation
  parent: Ubiquity.NET.Llvm.ObjectFile
  children:
  - Ubiquity.NET.Llvm.ObjectFile.Relocation.Description
  - Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind
  - Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset
  - Ubiquity.NET.Llvm.ObjectFile.Relocation.Section
  - Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol
  - Ubiquity.NET.Llvm.ObjectFile.Relocation.Value
  langs:
  - csharp
  - vb
  name: Relocation
  nameWithType: Relocation
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation
  type: Struct
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Relocation
    path: ../src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
    startLine: 18
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.ObjectFile
  summary: Relocation entry in an <xref href="Ubiquity.NET.Llvm.ObjectFile" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public readonly record struct Relocation : IEquatable<Relocation>'
    content.vb: Public Structure Relocation Implements IEquatable(Of Relocation)
  implements:
  - System.IEquatable{Ubiquity.NET.Llvm.ObjectFile.Relocation}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset
  commentId: P:Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset
  id: Offset
  parent: Ubiquity.NET.Llvm.ObjectFile.Relocation
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: Relocation.Offset
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Offset
    path: ../src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
    startLine: 22
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.ObjectFile
  summary: Gets the offset for this relocation
  example: []
  syntax:
    content: public ulong Offset { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Offset As ULong
  overload: Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset*
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol
  commentId: P:Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol
  id: Symbol
  parent: Ubiquity.NET.Llvm.ObjectFile.Relocation
  langs:
  - csharp
  - vb
  name: Symbol
  nameWithType: Relocation.Symbol
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Symbol
    path: ../src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
    startLine: 25
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.ObjectFile
  summary: Gets the symbol associated with this relocation
  example: []
  syntax:
    content: public Symbol Symbol { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.ObjectFile.Symbol
    content.vb: Public ReadOnly Property Symbol As Symbol
  overload: Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol*
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Description
  commentId: P:Ubiquity.NET.Llvm.ObjectFile.Relocation.Description
  id: Description
  parent: Ubiquity.NET.Llvm.ObjectFile.Relocation
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Relocation.Description
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Description
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Description
    path: ../src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
    startLine: 32
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.ObjectFile
  summary: Gets the kind of relocation as a string for display purposes
  example: []
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: Ubiquity.NET.Llvm.ObjectFile.Relocation.Description*
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Value
  commentId: P:Ubiquity.NET.Llvm.ObjectFile.Relocation.Value
  id: Value
  parent: Ubiquity.NET.Llvm.ObjectFile.Relocation
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Relocation.Value
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Value
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Value
    path: ../src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
    startLine: 35
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.ObjectFile
  summary: Gets the relocation value as a string
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Ubiquity.NET.Llvm.ObjectFile.Relocation.Value*
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind
  commentId: P:Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind
  id: Kind
  parent: Ubiquity.NET.Llvm.ObjectFile.Relocation
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: Relocation.Kind
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Kind
    path: ../src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
    startLine: 39
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.ObjectFile
  summary: Gets the relocation type for this relocation
  remarks: The meaning of the values are target obj file format specific, there is no standard
  example: []
  syntax:
    content: public ulong Kind { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Kind As ULong
  overload: Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind*
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Section
  commentId: P:Ubiquity.NET.Llvm.ObjectFile.Relocation.Section
  id: Section
  parent: Ubiquity.NET.Llvm.ObjectFile.Relocation
  langs:
  - csharp
  - vb
  name: Section
  nameWithType: Relocation.Section
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Section
  type: Property
  source:
    remote:
      path: src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
      branch: LLVM20
      repo: https://github.com/smaillet/Llvm.NET.git
    id: Section
    path: ../src/Ubiquity.NET.Llvm/ObjectFile/Relocation.cs
    startLine: 42
  assemblies:
  - Ubiquity.NET.Llvm
  namespace: Ubiquity.NET.Llvm.ObjectFile
  summary: Gets the <xref href="Ubiquity.NET.Llvm.ObjectFile.Section" data-throw-if-not-resolved="false"></xref> this relocation belongs to
  example: []
  syntax:
    content: public Section Section { get; }
    parameters: []
    return:
      type: Ubiquity.NET.Llvm.ObjectFile.Section
    content.vb: Public ReadOnly Property Section As Section
  overload: Ubiquity.NET.Llvm.ObjectFile.Relocation.Section*
references:
- uid: Ubiquity.NET.Llvm.ObjectFile
  commentId: N:Ubiquity.NET.Llvm.ObjectFile
  href: Ubiquity.html
  name: Ubiquity.NET.Llvm.ObjectFile
  nameWithType: Ubiquity.NET.Llvm.ObjectFile
  fullName: Ubiquity.NET.Llvm.ObjectFile
  spec.csharp:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.ObjectFile
    name: ObjectFile
    href: Ubiquity.NET.Llvm.ObjectFile.html
  spec.vb:
  - uid: Ubiquity
    name: Ubiquity
    href: Ubiquity.html
  - name: .
  - uid: Ubiquity.NET
    name: NET
    href: Ubiquity.NET.html
  - name: .
  - uid: Ubiquity.NET.Llvm
    name: Llvm
    href: Ubiquity.NET.Llvm.html
  - name: .
  - uid: Ubiquity.NET.Llvm.ObjectFile
    name: ObjectFile
    href: Ubiquity.NET.Llvm.ObjectFile.html
- uid: System.IEquatable{Ubiquity.NET.Llvm.ObjectFile.Relocation}
  commentId: T:System.IEquatable{Ubiquity.NET.Llvm.ObjectFile.Relocation}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Relocation>
  nameWithType: IEquatable<Relocation>
  fullName: System.IEquatable<Ubiquity.NET.Llvm.ObjectFile.Relocation>
  nameWithType.vb: IEquatable(Of Relocation)
  fullName.vb: System.IEquatable(Of Ubiquity.NET.Llvm.ObjectFile.Relocation)
  name.vb: IEquatable(Of Relocation)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Ubiquity.NET.Llvm.ObjectFile.Relocation
    name: Relocation
    href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Ubiquity.NET.Llvm.ObjectFile.Relocation
    name: Relocation
    href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset*
  commentId: Overload:Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset
  href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html#Ubiquity_NET_Llvm_ObjectFile_Relocation_Offset
  name: Offset
  nameWithType: Relocation.Offset
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Offset
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol*
  commentId: Overload:Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol
  href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html#Ubiquity_NET_Llvm_ObjectFile_Relocation_Symbol
  name: Symbol
  nameWithType: Relocation.Symbol
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Symbol
- uid: Ubiquity.NET.Llvm.ObjectFile.Symbol
  commentId: T:Ubiquity.NET.Llvm.ObjectFile.Symbol
  parent: Ubiquity.NET.Llvm.ObjectFile
  href: Ubiquity.NET.Llvm.ObjectFile.Symbol.html
  name: Symbol
  nameWithType: Symbol
  fullName: Ubiquity.NET.Llvm.ObjectFile.Symbol
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Description*
  commentId: Overload:Ubiquity.NET.Llvm.ObjectFile.Relocation.Description
  href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html#Ubiquity_NET_Llvm_ObjectFile_Relocation_Description
  name: Description
  nameWithType: Relocation.Description
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Value*
  commentId: Overload:Ubiquity.NET.Llvm.ObjectFile.Relocation.Value
  href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html#Ubiquity_NET_Llvm_ObjectFile_Relocation_Value
  name: Value
  nameWithType: Relocation.Value
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Value
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind*
  commentId: Overload:Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind
  href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html#Ubiquity_NET_Llvm_ObjectFile_Relocation_Kind
  name: Kind
  nameWithType: Relocation.Kind
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Kind
- uid: Ubiquity.NET.Llvm.ObjectFile.Section
  commentId: T:Ubiquity.NET.Llvm.ObjectFile.Section
  parent: Ubiquity.NET.Llvm.ObjectFile
  href: Ubiquity.NET.Llvm.ObjectFile.Section.html
  name: Section
  nameWithType: Section
  fullName: Ubiquity.NET.Llvm.ObjectFile.Section
- uid: Ubiquity.NET.Llvm.ObjectFile.Relocation.Section*
  commentId: Overload:Ubiquity.NET.Llvm.ObjectFile.Relocation.Section
  href: Ubiquity.NET.Llvm.ObjectFile.Relocation.html#Ubiquity_NET_Llvm_ObjectFile_Relocation_Section
  name: Section
  nameWithType: Relocation.Section
  fullName: Ubiquity.NET.Llvm.ObjectFile.Relocation.Section
