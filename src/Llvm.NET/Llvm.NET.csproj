<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net47;netstandard2.0</TargetFrameworks>
    <RuntimeIdentifiers>win-x64</RuntimeIdentifiers>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <DocumentationFile>$(BaseIntermediateOutputPath)Llvm.NET.xml</DocumentationFile>
    <SignAssembly>False</SignAssembly>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <MinClientVersion>4.0</MinClientVersion>
    <Authors>.NET Foundation,LLVM.org,Ubiquity.NET</Authors>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Description>.NET Bindings for LLVM</Description>
    <PackageTags>LLVM,Compiler,JIT</PackageTags>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <LangVersion>7.2</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="obj\**" />
    <EmbeddedResource Remove="obj\**" />
    <None Remove="obj\**" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="NugetPkg\build\Llvm.NET.props" PackagePath="build" />
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDictionary Include="..\CustomDictionary.xml">
      <Link>CustomDictionary.xml</Link>
    </CodeAnalysisDictionary>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="CSemVer.Build.Tasks" Version="1.0.3-beta--ci-BLD.431367438" />
    <PackageReference Include="Ubiquity.ArgValidators" Version="0.3.0-alpha--ci-REL.19A2218B" />
  </ItemGroup>
  <Choose>
    <!--
      For VS developer builds allow range, including pre-release builds to simplify development
      Local dev builds are generated with a version that has a higher precedence then other builds
    -->
    <When Condition="'$(BuildingInsideVisualStudio)'=='true'">
      <ItemGroup>
        <PackageReference Include="LibLLVM.NET" Version="[6.0.0-*,7)" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include="LibLLVM.NET" Version="[$(PackageVersion)]" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <!--
    Version numbers are computed at build time after any declarative properties are evaluated
    so this is needed to update the NuSpec properties with the dynamically generated values
    NOTE: This can't use NuspecProperties as that is only applicable when using a NuSpec file.
          Worse, it can cause a NullReferenceException (See: https://github.com/NuGet/Home/issues/4649 )
    -->
  <Target Name="_SetNuSpecPropertiesWithBuildInfo" BeforeTargets="GenerateNuspec">
    <PropertyGroup>
      <Description>$(Description) $(llvmVersion)</Description>
    </PropertyGroup>
    <Message Importance="high" Text="llvmVersion=$(llvmVersion)" />
  </Target>

  <Target Name="EnsureLocalNugetFolder" Condition="!EXISTS($(PackageOutputPath))" BeforeTargets="Restore">
    <MakeDir Directories="$(PackageOutputPath)" />
  </Target>

</Project>
