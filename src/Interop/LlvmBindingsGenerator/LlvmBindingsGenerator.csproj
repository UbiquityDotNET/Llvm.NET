<Project Sdk="Microsoft.NET.Sdk">
    <Sdk Name="Microsoft.Build.CentralPackageVersions" />
    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <!--Due to current limitations of the CppSharp library NUGET package, this only supports the Windows Desktop .NET Framework (64 bit)-->
        <TargetFrameworks>net47</TargetFrameworks>
        <LangVersion>7.3</LangVersion>
        <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
        <DebugType>portable</DebugType>
        <DebugSymbols>true</DebugSymbols>
        <SignAssembly>False</SignAssembly>
        <PlatformTarget>x64</PlatformTarget>
    </PropertyGroup>
    <ItemGroup>
        <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Ubiquity.ArgValidators" />
        <PackageReference Include="CppSharp" />
        <PackageReference Include="YamlDotNet" />
    </ItemGroup>
    <ItemGroup>
      <Reference Include="System.ComponentModel.Annotations">
        <HintPath>C:\Program Files\dotnet\sdk\NuGetFallbackFolder\microsoft.netcore.app\2.1.0\ref\netcoreapp2.1\System.ComponentModel.Annotations.dll</HintPath>
      </Reference>
    </ItemGroup>
    <!-- Runtime T4 templates need to specify the single file generator for the code behind -->
    <ItemGroup>
        <None Update="BindingsConfig.yml">
          <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="Templates\T4\ContextHandleTemplate.tt">
            <Generator>TextTemplatingFilePreprocessor</Generator>
            <LastGenOutput>ContextHandleTemplate.cs</LastGenOutput>
            <CustomToolNamespace>LlvmBindingsGenerator.Templates</CustomToolNamespace>
        </None>
        <None Update="Templates\T4\ExportsTemplate.tt">
            <Generator>TextTemplatingFilePreprocessor</Generator>
            <LastGenOutput>ExportsTemplate.cs</LastGenOutput>
            <CustomToolNamespace>LlvmBindingsGenerator.Templates</CustomToolNamespace>
        </None>
        <None Update="Templates\T4\ExternalDocXmlTemplate.tt">
            <Generator>TextTemplatingFilePreprocessor</Generator>
            <LastGenOutput>ExternalDocXmlTemplate.cs</LastGenOutput>
            <CustomToolNamespace>LlvmBindingsGenerator.Templates</CustomToolNamespace>
        </None>
        <None Update="Templates\T4\GlobalHandleTemplate.tt">
            <Generator>TextTemplatingFilePreprocessor</Generator>
            <LastGenOutput>GlobalHandleTemplate.cs</LastGenOutput>
            <CustomToolNamespace>LlvmBindingsGenerator.Templates</CustomToolNamespace>
        </None>
        <None Update="Templates\T4\LLVMErrorRefTemplate.tt">
            <Generator>TextTemplatingFilePreprocessor</Generator>
            <LastGenOutput>LLVMErrorRefTemplate.cs</LastGenOutput>
            <CustomToolNamespace>LlvmBindingsGenerator.Templates</CustomToolNamespace>
        </None>
        <None Update="Templates\T4\PerHeaderInteropTemplate.tt">
            <Generator>TextTemplatingFilePreprocessor</Generator>
            <LastGenOutput>PerHeaderInteropTemplate.cs</LastGenOutput>
            <CustomToolNamespace>LlvmBindingsGenerator.Templates</CustomToolNamespace>
        </None>
        <None Update="Templates\T4\StringMarshalerTemplate.tt">
            <Generator>TextTemplatingFilePreprocessor</Generator>
            <LastGenOutput>StringMarshalerTemplate.cs</LastGenOutput>
            <CustomToolNamespace>LlvmBindingsGenerator.Templates</CustomToolNamespace>
        </None>
    </ItemGroup>
    <ItemGroup>
        <Compile Update="Templates\T4\ContextHandleTemplate.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>ContextHandleTemplate.tt</DependentUpon>
        </Compile>
        <Compile Update="Templates\T4\ExportsTemplate.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>ExportsTemplate.tt</DependentUpon>
        </Compile>
        <Compile Update="Templates\T4\ExternalDocXmlTemplate.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>ExternalDocXmlTemplate.tt</DependentUpon>
        </Compile>
        <Compile Update="Templates\T4\GlobalHandleTemplate.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>GlobalHandleTemplate.tt</DependentUpon>
        </Compile>
        <Compile Update="Templates\T4\LLVMErrorRefTemplate.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>LLVMErrorRefTemplate.tt</DependentUpon>
        </Compile>
        <Compile Update="Templates\T4\PerHeaderInteropTemplate.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>PerHeaderInteropTemplate.tt</DependentUpon>
        </Compile>
        <Compile Update="Templates\T4\StringMarshalerTemplate.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>StringMarshalerTemplate.tt</DependentUpon>
        </Compile>
    </ItemGroup>

    <!--
    HACKFIX: CppSharp uses baseclass.contrib.nuget.output, which, among it's many issues, requires packages.config.
    After analyzing that package it's basically a VERY convoluted means of copying the output folder from the
    packages root location into the output folder of this project. So, just do the copy with help from
    ResolvePackageDependenciesDesignTime to get the location of the package root
    -->
    <Target Name="CopyCppSharpOutput" AfterTargets="Compile" DependsOnTargets="ResolvePackageDependenciesDesignTime">
        <ItemGroup>
          <CppSharpPkg Include="@(PackageDefinitions)" Condition="'%(PackageDefinitions.Name)'=='CppSharp'" />
        </ItemGroup>
        <PropertyGroup>
          <CppSharpPkgPath>%(CppSharpPkg.ResolvedPath)</CppSharpPkgPath>
        </PropertyGroup>
        <ItemGroup>
            <_CppSharpOutputFiles Include="$(CppSharpPkgPath)\output\**\*.*" />
        </ItemGroup>
        <Copy SkipUnchangedFiles="true" SourceFiles="@(_CppSharpOutputFiles)" DestinationFiles="@(_CppSharpOutputFiles->'$(OutDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>
</Project>
