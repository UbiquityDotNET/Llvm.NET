// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 2.17941.31104.49410
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Runtime.InteropServices;
using System.Security;

namespace Llvm.NET.Interop
{
    public static partial class NativeMethods
    {
        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMCreateObjectFile"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMObjectFileRef LLVMCreateObjectFile( LLVMMemoryBufferRef MemBuf );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSections"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMSectionIteratorRef LLVMGetSections( LLVMObjectFileRef ObjectFile );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMIsSectionIteratorAtEnd"]/*' />
        [return: MarshalAs( UnmanagedType.Bool )]
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern bool LLVMIsSectionIteratorAtEnd( LLVMObjectFileRef ObjectFile, LLVMSectionIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMMoveToNextSection"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMMoveToNextSection( LLVMSectionIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMMoveToContainingSection"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMMoveToContainingSection( LLVMSectionIteratorRef Sect, LLVMSymbolIteratorRef Sym );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSymbols"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMSymbolIteratorRef LLVMGetSymbols( LLVMObjectFileRef ObjectFile );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMIsSymbolIteratorAtEnd"]/*' />
        [return: MarshalAs( UnmanagedType.Bool )]
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern bool LLVMIsSymbolIteratorAtEnd( LLVMObjectFileRef ObjectFile, LLVMSymbolIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMMoveToNextSymbol"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMMoveToNextSymbol( LLVMSymbolIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSectionName"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( AliasStringMarshaler ) )]
        public static extern string LLVMGetSectionName( LLVMSectionIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSectionSize"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern System.UInt64 LLVMGetSectionSize( LLVMSectionIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSectionContents"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( AliasStringMarshaler ) )]
        public static extern string LLVMGetSectionContents( LLVMSectionIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSectionAddress"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern System.UInt64 LLVMGetSectionAddress( LLVMSectionIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSectionContainsSymbol"]/*' />
        [return: MarshalAs( UnmanagedType.Bool )]
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern bool LLVMGetSectionContainsSymbol( LLVMSectionIteratorRef SI, LLVMSymbolIteratorRef Sym );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetRelocations"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMRelocationIteratorRef LLVMGetRelocations( LLVMSectionIteratorRef Section );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMIsRelocationIteratorAtEnd"]/*' />
        [return: MarshalAs( UnmanagedType.Bool )]
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern bool LLVMIsRelocationIteratorAtEnd( LLVMSectionIteratorRef Section, LLVMRelocationIteratorRef RI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMMoveToNextRelocation"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMMoveToNextRelocation( LLVMRelocationIteratorRef RI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSymbolName"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( AliasStringMarshaler ) )]
        public static extern string LLVMGetSymbolName( LLVMSymbolIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSymbolAddress"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern System.UInt64 LLVMGetSymbolAddress( LLVMSymbolIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetSymbolSize"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern System.UInt64 LLVMGetSymbolSize( LLVMSymbolIteratorRef SI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetRelocationOffset"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern System.UInt64 LLVMGetRelocationOffset( LLVMRelocationIteratorRef RI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetRelocationSymbol"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMSymbolIteratorRef LLVMGetRelocationSymbol( LLVMRelocationIteratorRef RI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetRelocationType"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern System.UInt64 LLVMGetRelocationType( LLVMRelocationIteratorRef RI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetRelocationTypeName"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( DisposeMessageMarshaler ) )]
        public static extern string LLVMGetRelocationTypeName( LLVMRelocationIteratorRef RI );

        /// <include file="Object.xml" path='LibLLVMAPI/Function[@name="LLVMGetRelocationValueString"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( DisposeMessageMarshaler ) )]
        public static extern string LLVMGetRelocationValueString( LLVMRelocationIteratorRef RI );

    }
}
