// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 2.17941.31104.49410
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Runtime.InteropServices;
using System.Security;

namespace Llvm.NET.Interop
{
    public static partial class NativeMethods
    {
        /** See llvm::createAggressiveDCEPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddAggressiveDCEPass( LLVMPassManagerRef PM );

        /** See llvm::createBitTrackingDCEPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddBitTrackingDCEPass( LLVMPassManagerRef PM );

        /** See llvm::createAlignmentFromAssumptionsPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddAlignmentFromAssumptionsPass( LLVMPassManagerRef PM );

        /** See llvm::createCFGSimplificationPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddCFGSimplificationPass( LLVMPassManagerRef PM );

        /** See llvm::createDeadStoreEliminationPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddDeadStoreEliminationPass( LLVMPassManagerRef PM );

        /** See llvm::createScalarizerPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddScalarizerPass( LLVMPassManagerRef PM );

        /** See llvm::createMergedLoadStoreMotionPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddMergedLoadStoreMotionPass( LLVMPassManagerRef PM );

        /** See llvm::createGVNPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddGVNPass( LLVMPassManagerRef PM );

        /** See llvm::createGVNPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddNewGVNPass( LLVMPassManagerRef PM );

        /** See llvm::createIndVarSimplifyPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddIndVarSimplifyPass( LLVMPassManagerRef PM );

        /** See llvm::createJumpThreadingPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddJumpThreadingPass( LLVMPassManagerRef PM );

        /** See llvm::createLICMPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLICMPass( LLVMPassManagerRef PM );

        /** See llvm::createLoopDeletionPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLoopDeletionPass( LLVMPassManagerRef PM );

        /** See llvm::createLoopIdiomPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLoopIdiomPass( LLVMPassManagerRef PM );

        /** See llvm::createLoopRotatePass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLoopRotatePass( LLVMPassManagerRef PM );

        /** See llvm::createLoopRerollPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLoopRerollPass( LLVMPassManagerRef PM );

        /** See llvm::createLoopUnrollPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLoopUnrollPass( LLVMPassManagerRef PM );

        /** See llvm::createLoopUnrollAndJamPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLoopUnrollAndJamPass( LLVMPassManagerRef PM );

        /** See llvm::createLoopUnswitchPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLoopUnswitchPass( LLVMPassManagerRef PM );

        /** See llvm::createLowerAtomicPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLowerAtomicPass( LLVMPassManagerRef PM );

        /** See llvm::createMemCpyOptPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddMemCpyOptPass( LLVMPassManagerRef PM );

        /** See llvm::createPartiallyInlineLibCallsPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddPartiallyInlineLibCallsPass( LLVMPassManagerRef PM );

        /** See llvm::createReassociatePass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddReassociatePass( LLVMPassManagerRef PM );

        /** See llvm::createSCCPPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddSCCPPass( LLVMPassManagerRef PM );

        /** See llvm::createSROAPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddScalarReplAggregatesPass( LLVMPassManagerRef PM );

        /** See llvm::createSROAPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddScalarReplAggregatesPassSSA( LLVMPassManagerRef PM );

        /** See llvm::createSROAPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddScalarReplAggregatesPassWithThreshold( LLVMPassManagerRef PM, int Threshold );

        /** See llvm::createSimplifyLibCallsPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddSimplifyLibCallsPass( LLVMPassManagerRef PM );

        /** See llvm::createTailCallEliminationPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddTailCallEliminationPass( LLVMPassManagerRef PM );

        /** See llvm::createConstantPropagationPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddConstantPropagationPass( LLVMPassManagerRef PM );

        /** See llvm::demotePromoteMemoryToRegisterPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddDemoteMemoryToRegisterPass( LLVMPassManagerRef PM );

        /** See llvm::createVerifierPass function. */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddVerifierPass( LLVMPassManagerRef PM );

        /** See llvm::createCorrelatedValuePropagationPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddCorrelatedValuePropagationPass( LLVMPassManagerRef PM );

        /** See llvm::createEarlyCSEPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddEarlyCSEPass( LLVMPassManagerRef PM );

        /** See llvm::createEarlyCSEPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddEarlyCSEMemSSAPass( LLVMPassManagerRef PM );

        /** See llvm::createLowerExpectIntrinsicPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddLowerExpectIntrinsicPass( LLVMPassManagerRef PM );

        /** See llvm::createTypeBasedAliasAnalysisPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddTypeBasedAliasAnalysisPass( LLVMPassManagerRef PM );

        /** See llvm::createScopedNoAliasAAPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddScopedNoAliasAAPass( LLVMPassManagerRef PM );

        /** See llvm::createBasicAliasAnalysisPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddBasicAliasAnalysisPass( LLVMPassManagerRef PM );

        /** See llvm::createUnifyFunctionExitNodesPass function */
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMAddUnifyFunctionExitNodesPass( LLVMPassManagerRef PM );

    }
}
