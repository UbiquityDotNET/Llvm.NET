// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 2.17941.31104.49410
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Runtime.InteropServices;
using System.Security;

namespace Llvm.NET.Interop
{
    public static partial class NativeMethods
    {
        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderCreate"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMPassManagerBuilderRef LLVMPassManagerBuilderCreate(  );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderSetOptLevel"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderSetOptLevel( LLVMPassManagerBuilderRef PMB, uint OptLevel );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderSetSizeLevel"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderSetSizeLevel( LLVMPassManagerBuilderRef PMB, uint SizeLevel );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderSetDisableUnitAtATime"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderSetDisableUnitAtATime( LLVMPassManagerBuilderRef PMB, [MarshalAs( UnmanagedType.Bool )]bool Value );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderSetDisableUnrollLoops"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderSetDisableUnrollLoops( LLVMPassManagerBuilderRef PMB, [MarshalAs( UnmanagedType.Bool )]bool Value );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderSetDisableSimplifyLibCalls"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderSetDisableSimplifyLibCalls( LLVMPassManagerBuilderRef PMB, [MarshalAs( UnmanagedType.Bool )]bool Value );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderUseInlinerWithThreshold"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderUseInlinerWithThreshold( LLVMPassManagerBuilderRef PMB, uint Threshold );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderPopulateFunctionPassManager"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderPopulateFunctionPassManager( LLVMPassManagerBuilderRef PMB, LLVMPassManagerRef PM );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderPopulateModulePassManager"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderPopulateModulePassManager( LLVMPassManagerBuilderRef PMB, LLVMPassManagerRef PM );

        /// <include file="PassManagerBuilder.xml" path='LibLLVMAPI/Function[@name="LLVMPassManagerBuilderPopulateLTOPassManager"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMPassManagerBuilderPopulateLTOPassManager( LLVMPassManagerBuilderRef PMB, LLVMPassManagerRef PM, [MarshalAs( UnmanagedType.Bool )]bool Internalize, [MarshalAs( UnmanagedType.Bool )]bool RunInliner );

    }
}
