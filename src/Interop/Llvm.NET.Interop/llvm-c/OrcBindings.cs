// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 2.17941.31104.49410
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Runtime.InteropServices;
using System.Security;

namespace Llvm.NET.Interop
{
    /// <include file="OrcBindings.xml" path='LibLLVMAPI/Delegate[@name="LLVMOrcSymbolResolverFn"]/*' />
    [UnmanagedFunctionPointer( global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
    public delegate System.UInt64 LLVMOrcSymbolResolverFn( [MarshalAs( UnmanagedType.LPStr )]string Name, global::System.IntPtr LookupCtx );

    /// <include file="OrcBindings.xml" path='LibLLVMAPI/Delegate[@name="LLVMOrcLazyCompileCallbackFn"]/*' />
    [UnmanagedFunctionPointer( global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
    public delegate System.UInt64 LLVMOrcLazyCompileCallbackFn( LLVMOrcJITStackRef JITStack, global::System.IntPtr CallbackCtx );

    public static partial class NativeMethods
    {
        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcCreateInstance"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMOrcJITStackRef LLVMOrcCreateInstance( LLVMTargetMachineRef TM );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcGetErrorMsg"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( AliasStringMarshaler ) )]
        public static extern string LLVMOrcGetErrorMsg( LLVMOrcJITStackRef JITStack );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcGetMangledSymbol"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMOrcGetMangledSymbol( LLVMOrcJITStackRef JITStack, [MarshalAs( UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof( OrcDisposeMangledSymbolMarshaler ) )]out string MangledSymbol, [MarshalAs( UnmanagedType.LPStr )]string Symbol );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcDisposeMangledSymbol"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMOrcDisposeMangledSymbol( out sbyte MangledSymbol );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcCreateLazyCompileCallback"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcCreateLazyCompileCallback( LLVMOrcJITStackRef JITStack, out System.UInt64 RetAddr, LLVMOrcLazyCompileCallbackFn Callback, global::System.IntPtr CallbackCtx );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcCreateIndirectStub"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcCreateIndirectStub( LLVMOrcJITStackRef JITStack, [MarshalAs( UnmanagedType.LPStr )]string StubName, System.UInt64 InitAddr );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcSetIndirectStubPointer"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcSetIndirectStubPointer( LLVMOrcJITStackRef JITStack, [MarshalAs( UnmanagedType.LPStr )]string StubName, System.UInt64 NewAddr );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcAddEagerlyCompiledIR"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcAddEagerlyCompiledIR( LLVMOrcJITStackRef JITStack, out System.UInt64 RetHandle, LLVMModuleRef Mod, LLVMOrcSymbolResolverFn SymbolResolver, global::System.IntPtr SymbolResolverCtx );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcAddLazilyCompiledIR"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcAddLazilyCompiledIR( LLVMOrcJITStackRef JITStack, out System.UInt64 RetHandle, LLVMModuleRef Mod, LLVMOrcSymbolResolverFn SymbolResolver, global::System.IntPtr SymbolResolverCtx );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcAddObjectFile"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcAddObjectFile( LLVMOrcJITStackRef JITStack, out System.UInt64 RetHandle, LLVMMemoryBufferRef Obj, LLVMOrcSymbolResolverFn SymbolResolver, global::System.IntPtr SymbolResolverCtx );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcRemoveModule"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcRemoveModule( LLVMOrcJITStackRef JITStack, System.UInt64 H );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcGetSymbolAddress"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcGetSymbolAddress( LLVMOrcJITStackRef JITStack, out System.UInt64 RetAddr, [MarshalAs( UnmanagedType.LPStr )]string SymbolName );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcGetSymbolAddressIn"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMErrorRef LLVMOrcGetSymbolAddressIn( LLVMOrcJITStackRef JITStack, out System.UInt64 RetAddr, System.UInt64 H, [MarshalAs( UnmanagedType.LPStr )]string SymbolName );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcRegisterJITEventListener"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMOrcRegisterJITEventListener( LLVMOrcJITStackRef JITStack, LLVMJITEventListenerRef L );

        /// <include file="OrcBindings.xml" path='LibLLVMAPI/Function[@name="LLVMOrcUnregisterJITEventListener"]/*' />
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMOrcUnregisterJITEventListener( LLVMOrcJITStackRef JITStack, LLVMJITEventListenerRef L );

    }
}
