// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 2.17941.31104.49410
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;

namespace Llvm.NET.Interop
{
    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public struct LLVMTargetLibraryInfoRef
        : IEquatable<LLVMTargetLibraryInfoRef>
    {
        public override int GetHashCode( ) => Handle.GetHashCode( );

        public override bool Equals( object obj )
            => !( obj is null )
             && ( obj is LLVMTargetLibraryInfoRef r )
             && ( r.Handle == Handle );

        public bool Equals( LLVMTargetLibraryInfoRef other ) => Handle == other.Handle;

        public static bool operator ==( LLVMTargetLibraryInfoRef lhs, LLVMTargetLibraryInfoRef rhs )
            => EqualityComparer<LLVMTargetLibraryInfoRef>.Default.Equals( lhs, rhs );

        public static bool operator !=( LLVMTargetLibraryInfoRef lhs, LLVMTargetLibraryInfoRef rhs ) => !( lhs == rhs );

        public static LLVMTargetLibraryInfoRef Zero { get; } = new LLVMTargetLibraryInfoRef(IntPtr.Zero);

        public IntPtr ToIntPtr() => Handle;

        public static implicit operator IntPtr(LLVMTargetLibraryInfoRef value) => value.ToIntPtr();

        internal LLVMTargetLibraryInfoRef( IntPtr p )
        {
            Handle = p;
        }

        private readonly IntPtr Handle;
    }
}
