// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 2.17941.31104.49410
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;

namespace Llvm.NET.Interop
{
    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public struct LibLLVMMDOperandRef
        : IEquatable<LibLLVMMDOperandRef>
    {
        public override int GetHashCode( ) => Handle.GetHashCode( );

        public override bool Equals( object obj )
            => !( obj is null )
             && ( obj is LibLLVMMDOperandRef r )
             && ( r.Handle == Handle );

        public bool Equals( LibLLVMMDOperandRef other ) => Handle == other.Handle;

        public static bool operator ==( LibLLVMMDOperandRef lhs, LibLLVMMDOperandRef rhs )
            => EqualityComparer<LibLLVMMDOperandRef>.Default.Equals( lhs, rhs );

        public static bool operator !=( LibLLVMMDOperandRef lhs, LibLLVMMDOperandRef rhs ) => !( lhs == rhs );

        public static LibLLVMMDOperandRef Zero { get; } = new LibLLVMMDOperandRef(IntPtr.Zero);

        public IntPtr ToIntPtr() => Handle;

        public static implicit operator IntPtr(LibLLVMMDOperandRef value) => value.ToIntPtr();

        internal LibLLVMMDOperandRef( IntPtr p )
        {
            Handle = p;
        }

        private readonly IntPtr Handle;
    }
}
