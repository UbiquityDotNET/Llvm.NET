// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 2.17941.31104.49410
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Runtime.InteropServices;
using System.Security;

namespace Llvm.NET.Interop
{
    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public enum LLVMTripleArchType : global::System.Int32
    {
        LlvmTripleArchType_UnknownArch = 0,
        LlvmTripleArchType_arm = 1,
        LlvmTripleArchType_armeb = 2,
        LlvmTripleArchType_aarch64 = 3,
        LlvmTripleArchType_aarch64_be = 4,
        LlvmTripleArchType_arc = 5,
        LlvmTripleArchType_avr = 6,
        LlvmTripleArchType_bpfel = 7,
        LlvmTripleArchType_bpfeb = 8,
        LlvmTripleArchType_hexagon = 9,
        LlvmTripleArchType_mips = 10,
        LlvmTripleArchType_mipsel = 11,
        LlvmTripleArchType_mips64 = 12,
        LlvmTripleArchType_mips64el = 13,
        LlvmTripleArchType_msp430 = 14,
        LlvmTripleArchType_ppc = 15,
        LlvmTripleArchType_ppc64 = 16,
        LlvmTripleArchType_ppc64le = 17,
        LlvmTripleArchType_r600 = 18,
        LlvmTripleArchType_amdgcn = 19,
        LlvmTripleArchType_sparc = 20,
        LlvmTripleArchType_sparcv9 = 21,
        LlvmTripleArchType_sparcel = 22,
        LlvmTripleArchType_systemz = 23,
        LlvmTripleArchType_tce = 24,
        LlvmTripleArchType_thumb = 25,
        LlvmTripleArchType_thumbeb = 26,
        LlvmTripleArchType_x86 = 27,
        LlvmTripleArchType_x86_64 = 28,
        LlvmTripleArchType_xcore = 29,
        LlvmTripleArchType_nvptx = 30,
        LlvmTripleArchType_nvptx64 = 31,
        LlvmTripleArchType_le32 = 32,
        LlvmTripleArchType_le64 = 33,
        LlvmTripleArchType_amdil = 34,
        LlvmTripleArchType_amdil64 = 35,
        LlvmTripleArchType_hsail = 36,
        LlvmTripleArchType_hsail64 = 37,
        LlvmTripleArchType_spir = 38,
        LlvmTripleArchType_spir64 = 39,
        LlvmTripleArchType_kalimba = 40,
        LlvmTripleArchType_shave = 41,
        LlvmTripleArchType_lanai = 42,
        LlvmTripleArchType_wasm32 = 43,
        LlvmTripleArchType_wasm64 = 44,
        LlvmTripleArchType_renderscript32 = 45,
        LlvmTripleArchType_renderscript64 = 46,
        LlvmTripleArchType_LastArchType = 46,
    }

    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public enum LLVMTripleSubArchType : global::System.Int32
    {
        LlvmTripleSubArchType_NoSubArch = 0,
        LlvmTripleSubArchType_ARMSubArch_v8_3a = 1,
        LlvmTripleSubArchType_ARMSubArch_v8_2a = 2,
        LlvmTripleSubArchType_ARMSubArch_v8_1a = 3,
        LlvmTripleSubArchType_ARMSubArch_v8 = 4,
        LlvmTripleSubArchType_ARMSubArch_v8r = 5,
        LlvmTripleSubArchType_ARMSubArch_v8m_baseline = 6,
        LlvmTripleSubArchType_ARMSubArch_v8m_mainline = 7,
        LlvmTripleSubArchType_ARMSubArch_v7 = 8,
        LlvmTripleSubArchType_ARMSubArch_v7em = 9,
        LlvmTripleSubArchType_ARMSubArch_v7m = 10,
        LlvmTripleSubArchType_ARMSubArch_v7s = 11,
        LlvmTripleSubArchType_ARMSubArch_v7k = 12,
        LlvmTripleSubArchType_ARMSubArch_v7ve = 13,
        LlvmTripleSubArchType_ARMSubArch_v6 = 14,
        LlvmTripleSubArchType_ARMSubArch_v6m = 15,
        LlvmTripleSubArchType_ARMSubArch_v6k = 16,
        LlvmTripleSubArchType_ARMSubArch_v6t2 = 17,
        LlvmTripleSubArchType_ARMSubArch_v5 = 18,
        LlvmTripleSubArchType_ARMSubArch_v5te = 19,
        LlvmTripleSubArchType_ARMSubArch_v4t = 20,
        LlvmTripleSubArchType_KalimbaSubArch_v3 = 21,
        LlvmTripleSubArchType_KalimbaSubArch_v4 = 22,
        LlvmTripleSubArchType_KalimbaSubArch_v5 = 23,
    }

    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public enum LLVMTripleVendorType : global::System.Int32
    {
        LlvmTripleVendorType_UnknownVendor = 0,
        LlvmTripleVendorType_Apple = 1,
        LlvmTripleVendorType_PC = 2,
        LlvmTripleVendorType_SCEI = 3,
        LlvmTripleVendorType_BGP = 4,
        LlvmTripleVendorType_BGQ = 5,
        LlvmTripleVendorType_Freescale = 6,
        LlvmTripleVendorType_IBM = 7,
        LlvmTripleVendorType_ImaginationTechnologies = 8,
        LlvmTripleVendorType_MipsTechnologies = 9,
        LlvmTripleVendorType_NVIDIA = 10,
        LlvmTripleVendorType_CSR = 11,
        LlvmTripleVendorType_Myriad = 12,
        LlvmTripleVendorType_AMD = 13,
        LlvmTripleVendorType_Mesa = 14,
        LlvmTripleVendorType_SUSE = 15,
        LlvmTripleVendorType_LastVendorType = 15,
    }

    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public enum LLVMTripleOSType : global::System.Int32
    {
        LlvmTripleOSType_UnknownOS = 0,
        LlvmTripleOSType_CloudABI = 1,
        LlvmTripleOSType_Darwin = 2,
        LlvmTripleOSType_DragonFly = 3,
        LlvmTripleOSType_FreeBSD = 4,
        LlvmTripleOSType_IOS = 5,
        LlvmTripleOSType_KFreeBSD = 6,
        LlvmTripleOSType_Linux = 7,
        LlvmTripleOSType_Lv2 = 8,
        LlvmTripleOSType_MacOSX = 9,
        LlvmTripleOSType_NetBSD = 10,
        LlvmTripleOSType_OpenBSD = 11,
        LlvmTripleOSType_Solaris = 12,
        LlvmTripleOSType_Win32 = 13,
        LlvmTripleOSType_Haiku = 14,
        LlvmTripleOSType_Minix = 15,
        LlvmTripleOSType_RTEMS = 16,
        LlvmTripleOSType_NaCl = 17,
        LlvmTripleOSType_CNK = 18,
        LlvmTripleOSType_Bitrig = 19,
        LlvmTripleOSType_AIX = 20,
        LlvmTripleOSType_CUDA = 21,
        LlvmTripleOSType_NVCL = 22,
        LlvmTripleOSType_AMDHSA = 23,
        LlvmTripleOSType_PS4 = 24,
        LlvmTripleOSType_ELFIAMCU = 25,
        LlvmTripleOSType_TvOS = 26,
        LlvmTripleOSType_WatchOS = 27,
        LlvmTripleOSType_Mesa3D = 28,
        LlvmTripleOSType_Contiki = 29,
        LLvmTropleOSType_AMDPAL = 30,
        LlvmTripleOSType_LastOSType = 30,
    }

    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public enum LLVMTripleEnvironmentType : global::System.Int32
    {
        LlvmTripleEnvironmentType_UnknownEnvironment = 0,
        LlvmTripleEnvironmentType_GNU = 1,
        LlvmTripleEnvironmentType_GNUABI64 = 2,
        LlvmTripleEnvironmentType_GNUEABI = 3,
        LlvmTripleEnvironmentType_GNUEABIHF = 4,
        LlvmTripleEnvironmentType_GNUX32 = 5,
        LlvmTripleEnvironmentType_CODE16 = 6,
        LlvmTripleEnvironmentType_EABI = 7,
        LlvmTripleEnvironmentType_EABIHF = 8,
        LlvmTripleEnvironmentType_Android = 9,
        LlvmTripleEnvironmentType_Musl = 10,
        LlvmTripleEnvironmentType_MuslEABI = 11,
        LlvmTripleEnvironmentType_MuslEABIHF = 12,
        LlvmTripleEnvironmentType_MSVC = 13,
        LlvmTripleEnvironmentType_Itanium = 14,
        LlvmTripleEnvironmentType_Cygnus = 15,
        LlvmTripleEnvironmentType_AMDOpenCL = 16,
        LlvmTripleEnvironmentType_CoreCLR = 17,
        LlvmTripleEnvironmentType_LastEnvironmentType = 17,
    }

    [GeneratedCode("LlvmBindingsGenerator","2.17941.31104.49410")]
    public enum LLVMTripleObjectFormatType : global::System.Int32
    {
        LlvmTripleObjectFormatType_UnknownObjectFormat = 0,
        LlvmTripleObjectFormatType_COFF = 1,
        LlvmTripleObjectFormatType_ELF = 2,
        LlvmTripleObjectFormatType_MachO = 3,
    }

    public static partial class NativeMethods
    {
        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMTripleRef LLVMParseTriple( [MarshalAs( UnmanagedType.LPStr )]string triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern LLVMTripleRef LLVMGetHostTriple(  );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.Bool )]
        public static extern bool LLVMTripleOpEqual( LLVMTripleRef lhs, LLVMTripleRef rhs );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern global::Llvm.NET.Interop.LLVMTripleArchType LLVMTripleGetArchType( LLVMTripleRef triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern global::Llvm.NET.Interop.LLVMTripleSubArchType LLVMTripleGetSubArchType( LLVMTripleRef triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern global::Llvm.NET.Interop.LLVMTripleVendorType LLVMTripleGetVendorType( LLVMTripleRef triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern global::Llvm.NET.Interop.LLVMTripleOSType LLVMTripleGetOsType( LLVMTripleRef triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        [return: MarshalAs( UnmanagedType.Bool )]
        public static extern bool LLVMTripleHasEnvironment( LLVMTripleRef triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern global::Llvm.NET.Interop.LLVMTripleEnvironmentType LLVMTripleGetEnvironmentType( LLVMTripleRef triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern void LLVMTripleGetEnvironmentVersion( LLVMTripleRef triple, out uint major, out uint minor, out uint micro );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern global::Llvm.NET.Interop.LLVMTripleObjectFormatType LLVMTripleGetObjectFormatType( LLVMTripleRef triple );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMTripleAsString( LLVMTripleRef triple, bool normalize );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMTripleGetArchTypeName( global::Llvm.NET.Interop.LLVMTripleArchType type );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMTripleGetSubArchTypeName( global::Llvm.NET.Interop.LLVMTripleSubArchType type );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMTripleGetVendorTypeName( global::Llvm.NET.Interop.LLVMTripleVendorType vendor );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMTripleGetOsTypeName( global::Llvm.NET.Interop.LLVMTripleOSType osType );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMTripleGetEnvironmentTypeName( global::Llvm.NET.Interop.LLVMTripleEnvironmentType environmentType );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMTripleGetObjectFormatTypeName( global::Llvm.NET.Interop.LLVMTripleObjectFormatType objectFormatType );

        [SuppressUnmanagedCodeSecurity]
        [DllImport( LibraryPath, CallingConvention=global::System.Runtime.InteropServices.CallingConvention.Cdecl )]
        public static extern string LLVMNormalizeTriple( [MarshalAs( UnmanagedType.LPStr )]string triple );

    }
}
